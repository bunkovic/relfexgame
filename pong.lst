ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 1


   1              		.code	16
   2              		.file	"pong.c"
   3              		.text
   4              	.Ltext0:
   5              		.cfi_sections	.debug_frame
   6              		.align	1
   7              		.code	16
   8              		.thumb_func
   9              		.type	convertToDigits, %function
  10              	convertToDigits:
  11              	.LFB11:
  12              		.file 1 "pong.c"
   1:pong.c        **** /******************************************************************************
   2:pong.c        ****  *
   3:pong.c        ****  * Copyright:
   4:pong.c        ****  *    (C) 2006 Embedded Artists AB
   5:pong.c        ****  *
   6:pong.c        ****  * Description:
   7:pong.c        ****  *    Implements the pong game.
   8:pong.c        ****  *
   9:pong.c        ****  *****************************************************************************/
  10:pong.c        **** 
  11:pong.c        **** #include "configAppl.h"
  12:pong.c        **** #ifdef INCLUDE_PONG_GAME
  13:pong.c        **** 
  14:pong.c        **** /******************************************************************************
  15:pong.c        ****  * Includes
  16:pong.c        ****  *****************************************************************************/
  17:pong.c        **** #include "../pre_emptive_os/api/osapi.h"
  18:pong.c        **** #include "../pre_emptive_os/api/general.h"
  19:pong.c        **** #include "lcd.h"
  20:pong.c        **** #include "key.h"
  21:pong.c        **** #include "bt.h"
  22:pong.c        **** #include "math.h"
  23:pong.c        **** #include "select.h"
  24:pong.c        **** #include "stdio.h"
  25:pong.c        **** #include <printf_P.h>
  26:pong.c        **** #include <string.h>
  27:pong.c        **** #include <stdlib.h>
  28:pong.c        **** #include "uart.h"
  29:pong.c        **** 
  30:pong.c        **** 
  31:pong.c        **** /******************************************************************************
  32:pong.c        ****  * Typedefs and defines
  33:pong.c        ****  *****************************************************************************/
  34:pong.c        **** #define COLOR_BLACK 0x00
  35:pong.c        **** #define COLOR_WHITE 0xff
  36:pong.c        **** #define COLOR_RED   0xe0
  37:pong.c        **** #define COLOR_GREEN 0x1c
  38:pong.c        **** #define COLOR_BLUE  0x03
  39:pong.c        **** 
  40:pong.c        **** #define BACKGROUND_COLOR    COLOR_BLACK
  41:pong.c        **** #define DEFAULT_TEXT_COLOR  0xe0
  42:pong.c        **** 
  43:pong.c        **** #define SCREEN_HEIGHT 130
  44:pong.c        **** #define SCREEN_WIDTH  130
  45:pong.c        **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 2


  46:pong.c        **** #define SCORE_HEIGHT  15
  47:pong.c        **** 
  48:pong.c        **** #define BOARD_WIDTH    SCREEN_WIDTH
  49:pong.c        **** #define BOARD_HEIGHT   (SCREEN_HEIGHT-SCORE_HEIGHT)
  50:pong.c        **** #define BOARD_TOP_Y    SCORE_HEIGHT+1
  51:pong.c        **** #define BOARD_BOTTOM_Y SCREEN_HEIGHT-1
  52:pong.c        **** 
  53:pong.c        **** #define BALL_MOVE_TIME 100
  54:pong.c        **** #define PLAYER_MOVE_TIME 30
  55:pong.c        **** #define STATUS_UPDATE_TIME (PLAYER_MOVE_TIME/2)
  56:pong.c        **** 
  57:pong.c        **** #define SPEED_INCR 1.3
  58:pong.c        **** #define SPEED_DECR 0.8
  59:pong.c        **** 
  60:pong.c        **** #define WIN_SCORE 3
  61:pong.c        **** 
  62:pong.c        **** #define PLAYER_WIDTH 3
  63:pong.c        **** #define PLAYER_SIZE  16
  64:pong.c        **** #define PLAYER_STEP  1
  65:pong.c        **** 
  66:pong.c        **** #define PLAYER_CLIENT 0
  67:pong.c        **** #define PLAYER_HOST   1
  68:pong.c        **** 
  69:pong.c        **** typedef struct _PongPlayer
  70:pong.c        **** {
  71:pong.c        ****   tU8 xPos;
  72:pong.c        ****   tU8 yPos;
  73:pong.c        ****   tU8 size;
  74:pong.c        ****   tU8 score;
  75:pong.c        ****   tU8 color;
  76:pong.c        ****   tU8 type;
  77:pong.c        ****   tU32 lastMove;
  78:pong.c        ****   tU8 key;
  79:pong.c        **** } tPongPlayer;
  80:pong.c        **** 
  81:pong.c        **** typedef struct _PongBall
  82:pong.c        **** {
  83:pong.c        ****   double xPos;
  84:pong.c        ****   double yPos;
  85:pong.c        ****   tU8 size;
  86:pong.c        ****   tU8 color;
  87:pong.c        ****   double xSpeed;
  88:pong.c        ****   double ySpeed;
  89:pong.c        ****   double sXPos;
  90:pong.c        ****   double sYPos;
  91:pong.c        **** } tPongBall;
  92:pong.c        **** 
  93:pong.c        **** #define GAME_TYPE_SINGLE 0
  94:pong.c        **** #define GAME_TYPE_DUAL_C 1
  95:pong.c        **** #define GAME_TYPE_DUAL_S 2
  96:pong.c        **** 
  97:pong.c        **** #define MAX_BT_UNITS 5
  98:pong.c        **** 
  99:pong.c        **** typedef struct
 100:pong.c        **** {
 101:pong.c        ****   tU8 active;
 102:pong.c        ****   tU8 btAddress[13];
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 3


 103:pong.c        ****   tU8 btName[17];
 104:pong.c        **** } tBtRecord;
 105:pong.c        **** 
 106:pong.c        **** #define M_PI		3.14159265358979323846
 107:pong.c        **** 
 108:pong.c        **** /******************************************************************************
 109:pong.c        ****  * Local function prototypes
 110:pong.c        ****  *****************************************************************************/
 111:pong.c        **** static void activateServer(void);
 112:pong.c        **** static tBool checkIfClinetConnected(tU8 *pBtAddr);
 113:pong.c        **** static tBool searchServers(tU8 *pBtAddr);
 114:pong.c        **** static tBool connectToServer(tU8 *pBtAddr);
 115:pong.c        **** static tBool handleComm(void);
 116:pong.c        **** static tBool btSendAndRecvStatus(tU8 key, tBool force);
 117:pong.c        **** 
 118:pong.c        **** 
 119:pong.c        **** /******************************************************************************
 120:pong.c        ****  * Local (file global) variables
 121:pong.c        ****  *****************************************************************************/
 122:pong.c        **** static tBtRecord foundBtUnits[MAX_BT_UNITS];
 123:pong.c        **** 
 124:pong.c        **** static tU8 gameType;
 125:pong.c        **** 
 126:pong.c        **** static tPongPlayer player1 = 
 127:pong.c        **** {
 128:pong.c        ****   0,
 129:pong.c        ****   BOARD_TOP_Y+BOARD_HEIGHT/2-PLAYER_SIZE/2, 
 130:pong.c        ****   PLAYER_SIZE, 
 131:pong.c        ****   0, 
 132:pong.c        ****   COLOR_RED,   
 133:pong.c        ****   PLAYER_CLIENT
 134:pong.c        **** };
 135:pong.c        **** 
 136:pong.c        **** static tPongPlayer player2 = 
 137:pong.c        **** {
 138:pong.c        ****   BOARD_WIDTH-1-PLAYER_WIDTH, 
 139:pong.c        ****   BOARD_TOP_Y+BOARD_HEIGHT/2-PLAYER_SIZE/2, 
 140:pong.c        ****   PLAYER_SIZE, 
 141:pong.c        ****   0, 
 142:pong.c        ****   COLOR_GREEN, 
 143:pong.c        ****   PLAYER_HOST
 144:pong.c        **** };
 145:pong.c        **** 
 146:pong.c        **** static tPongBall ball = {0.0, 0.0, 2, COLOR_WHITE, 2.6, 1.0};
 147:pong.c        **** 
 148:pong.c        **** static tPongPlayer* pActivePlayer  = &player1;
 149:pong.c        **** 
 150:pong.c        **** static tPongPlayer* pServingPlayer = &player1;
 151:pong.c        **** static tBool serving = TRUE;
 152:pong.c        **** 
 153:pong.c        **** static tU32 lastMove = 0;
 154:pong.c        **** static tU32 lastStatus = 0;
 155:pong.c        **** 
 156:pong.c        **** static tU8 remoteClientKey = KEY_NOTHING;
 157:pong.c        **** 
 158:pong.c        **** 
 159:pong.c        **** /******************************************************************************
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 4


 160:pong.c        ****  * External variables
 161:pong.c        ****  *****************************************************************************/
 162:pong.c        **** extern volatile tU32 ms;
 163:pong.c        **** 
 164:pong.c        **** 
 165:pong.c        **** /******************************************************************************
 166:pong.c        ****  * Implementation of local functions
 167:pong.c        ****  *****************************************************************************/
 168:pong.c        **** 
 169:pong.c        **** /*****************************************************************************
 170:pong.c        ****  *
 171:pong.c        ****  * Description:
 172:pong.c        ****  *    Draw current paddle position of specified player
 173:pong.c        ****  *
 174:pong.c        ****  ****************************************************************************/
 175:pong.c        **** static void 
 176:pong.c        **** paintPlayer(tPongPlayer* pPlayer) 
 177:pong.c        **** {
 178:pong.c        ****   lcdRect(pPlayer->xPos, pPlayer->yPos, PLAYER_WIDTH, pPlayer->size, pPlayer->color);
 179:pong.c        **** }
 180:pong.c        **** 
 181:pong.c        **** 
 182:pong.c        **** /*****************************************************************************
 183:pong.c        ****  *
 184:pong.c        ****  * Description:
 185:pong.c        ****  *    Draw the current score setting
 186:pong.c        ****  *
 187:pong.c        ****  ****************************************************************************/
 188:pong.c        **** static void 
 189:pong.c        **** paintScore(void)
 190:pong.c        **** {
 191:pong.c        ****   tU8 scoreStr[4];
 192:pong.c        **** 
 193:pong.c        **** 
 194:pong.c        ****   // left player
 195:pong.c        ****   scoreStr[0] = player1.score/100     + '0';
 196:pong.c        ****   scoreStr[1] = (player1.score/10)%10 + '0';
 197:pong.c        ****   scoreStr[2] = player1.score%10      + '0';
 198:pong.c        ****   scoreStr[3] = '\0';  
 199:pong.c        **** 
 200:pong.c        ****   lcdColor(BACKGROUND_COLOR, player1.color); 
 201:pong.c        ****   lcdGotoxy(1,0);
 202:pong.c        ****   lcdPuts(scoreStr);
 203:pong.c        **** 
 204:pong.c        ****   // name of the game
 205:pong.c        ****   lcdColor(BACKGROUND_COLOR, COLOR_BLUE); 
 206:pong.c        ****   lcdGotoxy(46, 0);
 207:pong.c        ****   lcdPuts("Pong");
 208:pong.c        **** 
 209:pong.c        **** 
 210:pong.c        ****   // right player
 211:pong.c        ****   scoreStr[0] = player2.score/100     + '0';
 212:pong.c        ****   scoreStr[1] = (player2.score/10)%10 + '0';
 213:pong.c        ****   scoreStr[2] = player2.score%10      + '0';
 214:pong.c        ****   scoreStr[3] = '\0';  
 215:pong.c        **** 
 216:pong.c        ****   lcdColor(BACKGROUND_COLOR, player2.color); 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 5


 217:pong.c        ****   lcdGotoxy(102,0);
 218:pong.c        ****   lcdPuts(scoreStr);
 219:pong.c        **** }
 220:pong.c        **** 
 221:pong.c        **** 
 222:pong.c        **** /*****************************************************************************
 223:pong.c        ****  *
 224:pong.c        ****  * Description:
 225:pong.c        ****  *    Draw the entire game board including player paddles
 226:pong.c        ****  *
 227:pong.c        ****  ****************************************************************************/
 228:pong.c        **** static void 
 229:pong.c        **** paintGame(void)
 230:pong.c        **** {
 231:pong.c        ****   //clear screen
 232:pong.c        ****   lcdColor(BACKGROUND_COLOR, DEFAULT_TEXT_COLOR);
 233:pong.c        ****   lcdClrscr();
 234:pong.c        **** 
 235:pong.c        ****   paintScore();
 236:pong.c        **** 
 237:pong.c        ****   lcdRect(0, SCORE_HEIGHT, BOARD_WIDTH, 1, 0xff);
 238:pong.c        **** 
 239:pong.c        ****   // paint players
 240:pong.c        ****   paintPlayer(&player1);
 241:pong.c        ****   paintPlayer(&player2);
 242:pong.c        **** }
 243:pong.c        **** 
 244:pong.c        **** 
 245:pong.c        **** /*****************************************************************************
 246:pong.c        ****  *
 247:pong.c        ****  * Description:
 248:pong.c        ****  *    
 249:pong.c        ****  *
 250:pong.c        ****  ****************************************************************************/
 251:pong.c        **** static void
 252:pong.c        **** startNewServ(tPongPlayer* pPlayer)
 253:pong.c        **** {
 254:pong.c        ****   pServingPlayer = pPlayer;
 255:pong.c        **** 
 256:pong.c        ****   if (pPlayer == &player1)
 257:pong.c        ****     ball.xSpeed = 2.6;
 258:pong.c        ****   else
 259:pong.c        ****     ball.xSpeed = -2.6;
 260:pong.c        **** 
 261:pong.c        ****   ball.ySpeed = 1;
 262:pong.c        **** 
 263:pong.c        ****   paintScore();
 264:pong.c        **** 
 265:pong.c        ****   serving = TRUE;
 266:pong.c        **** 
 267:pong.c        ****   // temp
 268:pong.c        ****   pActivePlayer = pPlayer;    
 269:pong.c        **** }
 270:pong.c        **** 
 271:pong.c        **** 
 272:pong.c        **** /*****************************************************************************
 273:pong.c        ****  *
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 6


 274:pong.c        ****  * Description:
 275:pong.c        ****  *    
 276:pong.c        ****  *
 277:pong.c        ****  ****************************************************************************/
 278:pong.c        **** static void
 279:pong.c        **** moveBall(tU8 key)
 280:pong.c        **** {
 281:pong.c        ****   tPongPlayer* pDefending = NULL;
 282:pong.c        ****   tBool riskForHit = FALSE;
 283:pong.c        ****   tS8 dir = 1;
 284:pong.c        **** 
 285:pong.c        ****   if (serving &&
 286:pong.c        ****       (gameType == GAME_TYPE_SINGLE || gameType == GAME_TYPE_DUAL_S))
 287:pong.c        ****   {
 288:pong.c        ****     tU8 midPos = pServingPlayer->yPos + pServingPlayer->size/2 - ball.size/2;
 289:pong.c        **** 
 290:pong.c        ****     ball.xPos = pServingPlayer->xPos;
 291:pong.c        ****     if (pServingPlayer == &player1)
 292:pong.c        ****       ball.xPos+=PLAYER_WIDTH;
 293:pong.c        ****     else
 294:pong.c        ****       ball.xPos-=ball.size;
 295:pong.c        **** 
 296:pong.c        ****     if (ball.yPos != midPos)
 297:pong.c        ****     {
 298:pong.c        ****       // erase last position
 299:pong.c        ****       lcdRect(ball.xPos, ball.yPos, ball.size, ball.size, BACKGROUND_COLOR);
 300:pong.c        **** 
 301:pong.c        ****       ball.yPos = midPos;
 302:pong.c        **** 
 303:pong.c        ****       // paint ball
 304:pong.c        ****       lcdRect(ball.xPos, ball.yPos, ball.size, ball.size, ball.color);
 305:pong.c        ****     }
 306:pong.c        **** 
 307:pong.c        ****     if (/*key*/pServingPlayer->key == KEY_CENTER)
 308:pong.c        ****     {
 309:pong.c        ****       serving = FALSE;
 310:pong.c        ****     }
 311:pong.c        **** 
 312:pong.c        ****     return;
 313:pong.c        ****   }
 314:pong.c        **** 
 315:pong.c        ****   if (lastMove + BALL_MOVE_TIME > ms)
 316:pong.c        ****     return;
 317:pong.c        **** 
 318:pong.c        ****   // erase last position
 319:pong.c        ****   lcdRect((tU8)floor(ball.xPos), (tU8)floor(ball.yPos), ball.size, ball.size, BACKGROUND_COLOR);
 320:pong.c        **** //  lcdRect((tU8)round(ball.xPos), (tU8)round(ball.yPos), ball.size, ball.size, BACKGROUND_COLOR);
 321:pong.c        **** 
 322:pong.c        ****   if (gameType == GAME_TYPE_SINGLE 
 323:pong.c        ****       || gameType == GAME_TYPE_DUAL_S)
 324:pong.c        ****   {
 325:pong.c        ****     // check if there is a risk hitting one of the pads
 326:pong.c        ****     if (ball.xSpeed > 0)
 327:pong.c        ****     {
 328:pong.c        ****       dir = -1;
 329:pong.c        ****       pDefending = &player2;
 330:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed+ball.size >= player2.xPos);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 7


 331:pong.c        ****     }
 332:pong.c        ****     else
 333:pong.c        ****     {
 334:pong.c        ****       dir = 1;
 335:pong.c        ****       pDefending = &player1;
 336:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed < player1.xPos+PLAYER_WIDTH);
 337:pong.c        ****     }
 338:pong.c        **** 
 339:pong.c        ****     // check collision with wall
 340:pong.c        ****     if (ball.yPos+ball.ySpeed < BOARD_TOP_Y 
 341:pong.c        ****         || ball.yPos+ball.size+ball.ySpeed > BOARD_BOTTOM_Y)
 342:pong.c        ****     {
 343:pong.c        ****       ball.ySpeed = -ball.ySpeed;
 344:pong.c        ****     }
 345:pong.c        **** 
 346:pong.c        **** 
 347:pong.c        ****     // see if the pad is actually hit
 348:pong.c        ****     if (riskForHit)
 349:pong.c        ****     {
 350:pong.c        ****       double percIntoPad = 0;
 351:pong.c        ****       double angle = 0;
 352:pong.c        ****       double absSpeed = 0;
 353:pong.c        **** 
 354:pong.c        ****       tU8 yPos = (ball.ySpeed/ball.xSpeed)
 355:pong.c        ****                  * (pDefending->xPos - ball.xPos) + ball.yPos;
 356:pong.c        **** 
 357:pong.c        ****       if (yPos+ball.size >= pDefending->yPos && yPos <= pDefending->yPos+pDefending->size)
 358:pong.c        ****       {
 359:pong.c        ****         // calculate new angle
 360:pong.c        ****         percIntoPad = (ball.yPos+(ball.size/2)-pDefending->yPos)
 361:pong.c        ****                       / pDefending->size;
 362:pong.c        **** 
 363:pong.c        ****         angle = (-5*M_PI/12) + (10*percIntoPad*M_PI/12);
 364:pong.c        ****         absSpeed = sqrt(ball.xSpeed*ball.xSpeed+ball.ySpeed*ball.ySpeed);
 365:pong.c        ****         ball.xSpeed = dir*absSpeed*cos(angle);
 366:pong.c        ****         ball.ySpeed = absSpeed*sin(angle);
 367:pong.c        **** 
 368:pong.c        ****         // increase speed
 369:pong.c        ****         if (pDefending->key == KEY_CENTER)
 370:pong.c        ****         {
 371:pong.c        ****           ball.xSpeed *= SPEED_INCR;
 372:pong.c        ****           ball.ySpeed *= SPEED_INCR;
 373:pong.c        ****         }
 374:pong.c        ****         // decrease speed
 375:pong.c        ****         else
 376:pong.c        ****         {
 377:pong.c        ****           if (ball.xSpeed >= 2.0)
 378:pong.c        ****             ball.xSpeed *= SPEED_DECR;
 379:pong.c        ****           if (ball.ySpeed >= 2.0)
 380:pong.c        ****             ball.ySpeed *= SPEED_DECR;
 381:pong.c        ****         }
 382:pong.c        ****       }
 383:pong.c        ****     }
 384:pong.c        **** 
 385:pong.c        ****     ball.xPos += ball.xSpeed;
 386:pong.c        ****     ball.yPos += ball.ySpeed;
 387:pong.c        **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 8


 388:pong.c        ****     // check if ball is outside board
 389:pong.c        ****     if (ball.xPos <= 0)
 390:pong.c        ****     {
 391:pong.c        ****       player2.score++;
 392:pong.c        ****       startNewServ(&player2);          
 393:pong.c        ****     }
 394:pong.c        ****     else if (ball.xPos >= BOARD_WIDTH-1)
 395:pong.c        ****     {
 396:pong.c        ****       player1.score++;
 397:pong.c        ****       startNewServ(&player1);          
 398:pong.c        ****     }
 399:pong.c        ****     else
 400:pong.c        ****     {
 401:pong.c        ****       // paint ball
 402:pong.c        **** //      lcdRect(round(ball.xPos), round(ball.yPos), ball.size, ball.size, ball.color);
 403:pong.c        ****       lcdRect(floor(ball.xPos), floor(ball.yPos), ball.size, ball.size, ball.color);
 404:pong.c        **** 
 405:pong.c        ****     }
 406:pong.c        ****   }
 407:pong.c        **** 
 408:pong.c        ****   else
 409:pong.c        ****   {
 410:pong.c        ****     // x and y position have been retreived from server
 411:pong.c        ****     ball.xPos = ball.sXPos;
 412:pong.c        ****     ball.yPos = ball.sYPos;
 413:pong.c        ****     
 414:pong.c        ****     lcdRect(floor(ball.xPos), floor(ball.yPos), ball.size, ball.size, ball.color);
 415:pong.c        **** //    lcdRect(round(ball.xPos), round(ball.yPos), ball.size, ball.size, ball.color);
 416:pong.c        ****   }
 417:pong.c        **** 
 418:pong.c        ****   lastMove = ms;
 419:pong.c        **** }
 420:pong.c        **** 
 421:pong.c        **** 
 422:pong.c        **** /*****************************************************************************
 423:pong.c        ****  *
 424:pong.c        ****  * Description:
 425:pong.c        ****  *    
 426:pong.c        ****  *
 427:pong.c        ****  ****************************************************************************/
 428:pong.c        **** static void
 429:pong.c        **** movePlayer(tPongPlayer* pPlayer, tU8 key)
 430:pong.c        **** {
 431:pong.c        ****   if (key == KEY_NOTHING && (gameType != GAME_TYPE_DUAL_C))
 432:pong.c        ****     return;
 433:pong.c        **** 
 434:pong.c        ****   if (pPlayer->lastMove + PLAYER_MOVE_TIME > ms)
 435:pong.c        ****     return;
 436:pong.c        **** 
 437:pong.c        ****   pPlayer->lastMove = ms;
 438:pong.c        **** 
 439:pong.c        ****   if (gameType == GAME_TYPE_SINGLE || gameType == GAME_TYPE_DUAL_S)
 440:pong.c        ****   {
 441:pong.c        ****     switch (key)
 442:pong.c        ****     {
 443:pong.c        ****     case KEY_UP:
 444:pong.c        ****       if (pPlayer->yPos-PLAYER_STEP <= BOARD_TOP_Y)
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 9


 445:pong.c        ****         return;
 446:pong.c        **** 
 447:pong.c        ****       pPlayer->yPos -= PLAYER_STEP;
 448:pong.c        ****       break;
 449:pong.c        **** 
 450:pong.c        ****     case KEY_RIGHT:
 451:pong.c        ****       pActivePlayer = &player2;
 452:pong.c        ****       return;
 453:pong.c        **** 
 454:pong.c        ****     case KEY_DOWN:
 455:pong.c        ****       if (pPlayer->yPos+PLAYER_STEP+pPlayer->size > BOARD_BOTTOM_Y)
 456:pong.c        ****         return;
 457:pong.c        **** 
 458:pong.c        ****       pPlayer->yPos += PLAYER_STEP;
 459:pong.c        ****       break;
 460:pong.c        **** 
 461:pong.c        ****     case KEY_LEFT:
 462:pong.c        ****       pActivePlayer = &player1;
 463:pong.c        ****       return;
 464:pong.c        ****     }
 465:pong.c        ****   }
 466:pong.c        **** 
 467:pong.c        ****   if (pPlayer->yPos > BOARD_TOP_Y)
 468:pong.c        ****   {
 469:pong.c        ****     lcdRect(pPlayer->xPos, BOARD_TOP_Y, PLAYER_WIDTH, 
 470:pong.c        ****             pPlayer->yPos-BOARD_TOP_Y, BACKGROUND_COLOR);
 471:pong.c        ****   }
 472:pong.c        **** 
 473:pong.c        ****   paintPlayer(pPlayer);
 474:pong.c        **** 
 475:pong.c        ****   if (pPlayer->yPos+pPlayer->size < BOARD_BOTTOM_Y)
 476:pong.c        ****   {
 477:pong.c        ****     lcdRect(pPlayer->xPos, pPlayer->yPos+pPlayer->size,PLAYER_WIDTH, 
 478:pong.c        ****             BOARD_BOTTOM_Y, BACKGROUND_COLOR);
 479:pong.c        ****   }
 480:pong.c        **** 
 481:pong.c        ****   return;
 482:pong.c        **** }
 483:pong.c        **** 
 484:pong.c        **** 
 485:pong.c        **** /*****************************************************************************
 486:pong.c        ****  *
 487:pong.c        ****  * Description:
 488:pong.c        ****  *    Display string one character at a time
 489:pong.c        ****  *
 490:pong.c        ****  ****************************************************************************/
 491:pong.c        **** static void
 492:pong.c        **** displayMessage(tU8 *pMessage, tU8 speed)
 493:pong.c        **** {
 494:pong.c        ****   while (*pMessage != '\0')
 495:pong.c        ****   {
 496:pong.c        ****     lcdPutchar(*pMessage++);
 497:pong.c        ****     osSleep(speed);
 498:pong.c        ****   }
 499:pong.c        **** }
 500:pong.c        **** 
 501:pong.c        **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 10


 502:pong.c        **** /******************************************************************************
 503:pong.c        ****  * Implementation of public functions
 504:pong.c        ****  *****************************************************************************/
 505:pong.c        **** 
 506:pong.c        **** /*****************************************************************************
 507:pong.c        ****  *
 508:pong.c        ****  * Description:
 509:pong.c        ****  *    Implement Pong game
 510:pong.c        ****  *
 511:pong.c        ****  ****************************************************************************/
 512:pong.c        **** void
 513:pong.c        **** playPong(void)
 514:pong.c        **** {
 515:pong.c        ****   tBool gameOver = FALSE;
 516:pong.c        ****   tBool done = FALSE;
 517:pong.c        ****   tBool connected;
 518:pong.c        ****   tMenu menu;
 519:pong.c        ****   tU8   btAddress[13];
 520:pong.c        **** 
 521:pong.c        ****   //block BT process to communicate with BGB203
 522:pong.c        ****   blockBtProc();
 523:pong.c        **** 
 524:pong.c        ****   player1.score = 0;
 525:pong.c        ****   player2.score = 0;
 526:pong.c        ****   paintGame();
 527:pong.c        **** 
 528:pong.c        ****   //ask player which type of game (single/dual over Bluetooth)
 529:pong.c        ****   menu.xPos = 10;
 530:pong.c        ****   menu.yPos = 40;
 531:pong.c        ****   menu.xLen = 6+(13*8);
 532:pong.c        ****   menu.yLen = 5*14;
 533:pong.c        ****   menu.noOfChoices = 3;
 534:pong.c        ****   menu.initialChoice = 0;
 535:pong.c        ****   menu.pHeaderText = "Type of Game?";
 536:pong.c        ****   menu.headerTextXpos = 13;
 537:pong.c        ****   menu.pChoice[0] = "Single player";
 538:pong.c        ****   menu.pChoice[1] = "Dual - Client";
 539:pong.c        ****   menu.pChoice[2] = "Dual - Server";
 540:pong.c        ****   menu.bgColor       = 0;
 541:pong.c        ****   menu.borderColor   = 0x6d;
 542:pong.c        ****   menu.headerColor   = 0;
 543:pong.c        ****   menu.choicesColor  = 0xfd;
 544:pong.c        ****   menu.selectedColor = 0xe0;
 545:pong.c        **** 
 546:pong.c        ****   switch (drawMenu(menu))
 547:pong.c        ****   {
 548:pong.c        ****   case 0: gameType = GAME_TYPE_SINGLE; break;  //Single player
 549:pong.c        ****   case 1:  //Dual player client
 550:pong.c        ****     gameType = GAME_TYPE_DUAL_C;
 551:pong.c        **** 
 552:pong.c        ****     lcdRect(2, 16, 125, 84, 0x6d);
 553:pong.c        ****     lcdRect(4, 18, 121, 80, 0x00);
 554:pong.c        ****     lcdColor(0x00,0xfd);
 555:pong.c        **** 
 556:pong.c        ****     //search for available servers...
 557:pong.c        ****     if (TRUE == searchServers(btAddress))
 558:pong.c        ****     {
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 11


 559:pong.c        ****       //print "trying to connect" message...
 560:pong.c        ****       lcdRect(2, 16, 125, 84, 0x6d);
 561:pong.c        ****       lcdRect(4, 18, 121, 80, 0x00);
 562:pong.c        ****       lcdColor(0x00,0xfd);
 563:pong.c        ****       lcdGotoxy(8,18);
 564:pong.c        ****       lcdPuts("Connecting");
 565:pong.c        **** 
 566:pong.c        ****       //connect
 567:pong.c        ****       if (TRUE == connectToServer(btAddress))
 568:pong.c        ****         done = FALSE; //start playing as client
 569:pong.c        ****       else
 570:pong.c        ****       {
 571:pong.c        ****         lcdGotoxy(8,32);
 572:pong.c        ****         displayMessage("Failed to", 3);
 573:pong.c        ****         lcdGotoxy(8,46);
 574:pong.c        ****         displayMessage("connect...", 3);
 575:pong.c        ****         osSleep(150);
 576:pong.c        **** 
 577:pong.c        ****         //failed to connect
 578:pong.c        ****         done = TRUE;
 579:pong.c        ****       }
 580:pong.c        ****     }
 581:pong.c        ****     else
 582:pong.c        ****       done = TRUE;
 583:pong.c        ****     break;
 584:pong.c        **** 
 585:pong.c        ****   case 2:  //Dual player server
 586:pong.c        ****     {
 587:pong.c        ****       tU32 cnt = 0;
 588:pong.c        ****       tU8  key;
 589:pong.c        **** 
 590:pong.c        ****       //print "waiting for connection" message...
 591:pong.c        ****       lcdRect(2, 16, 125, 84, 0x6d);
 592:pong.c        ****       lcdRect(4, 18, 121, 80, 0x00);
 593:pong.c        ****       lcdColor(0x00,0xfd);
 594:pong.c        ****       lcdGotoxy(8,18);
 595:pong.c        ****       lcdPuts("Waiting for");
 596:pong.c        ****       lcdGotoxy(8,32);
 597:pong.c        ****       lcdPuts("client conn");
 598:pong.c        **** 
 599:pong.c        ****       gameType = GAME_TYPE_DUAL_S;
 600:pong.c        ****       activateServer();
 601:pong.c        **** 
 602:pong.c        ****       connected = FALSE;
 603:pong.c        ****       while (connected == FALSE)
 604:pong.c        ****       {
 605:pong.c        ****         key = checkKey();
 606:pong.c        **** 
 607:pong.c        ****         if (TRUE == checkIfClinetConnected(btAddress))
 608:pong.c        ****         {
 609:pong.c        ****           //print from which BT address
 610:pong.c        ****           lcdGotoxy(8,18);
 611:pong.c        ****           lcdPuts("Request from");
 612:pong.c        ****           lcdGotoxy(8,32);
 613:pong.c        ****           lcdPuts(btAddress);
 614:pong.c        ****           lcdPuts("  ");
 615:pong.c        **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 12


 616:pong.c        ****           //ask player if start playing with connected client
 617:pong.c        ****           menu.xPos = 10;
 618:pong.c        ****           menu.yPos = 50;
 619:pong.c        ****           menu.xLen = 6+(13*8);
 620:pong.c        ****           menu.yLen = 5*14;
 621:pong.c        ****           menu.noOfChoices = 2;
 622:pong.c        ****           menu.initialChoice = 0;
 623:pong.c        ****           menu.pHeaderText = "Accept conn?";
 624:pong.c        ****           menu.headerTextXpos = 17;
 625:pong.c        ****           menu.pChoice[0] = "Start playing";
 626:pong.c        ****           menu.pChoice[1] = "Refuse";
 627:pong.c        ****           menu.bgColor       = 0;
 628:pong.c        ****           menu.borderColor   = 0x6d;
 629:pong.c        ****           menu.headerColor   = 0;
 630:pong.c        ****           menu.choicesColor  = 0xfd;
 631:pong.c        ****           menu.selectedColor = 0xe0;
 632:pong.c        **** 
 633:pong.c        ****           switch (drawMenu(menu))
 634:pong.c        ****           {
 635:pong.c        ****           case 0: uart1SendString("\nLETS START PLAYING\n"); done = FALSE; break;  //start playing 
 636:pong.c        ****           case 1: uart1SendString("+++"); done = TRUE; break;                      //refuse connect
 637:pong.c        ****           default: break;
 638:pong.c        ****           }
 639:pong.c        ****           connected = TRUE;
 640:pong.c        ****         }
 641:pong.c        **** 
 642:pong.c        ****         //check if any key pressed to cancel waiting
 643:pong.c        ****         else if (key != KEY_NOTHING)
 644:pong.c        ****         {
 645:pong.c        ****           //cancel server and exit game
 646:pong.c        ****           done = TRUE;
 647:pong.c        ****           break;
 648:pong.c        ****         }
 649:pong.c        **** 
 650:pong.c        ****         else
 651:pong.c        ****         {
 652:pong.c        ****           //print activity indicator
 653:pong.c        ****           lcdGotoxy(96,30);
 654:pong.c        ****           lcdColor(0x00,0xfd);
 655:pong.c        ****           switch (cnt % 150)
 656:pong.c        ****           {
 657:pong.c        ****           case   0: lcdPuts("   ");break;
 658:pong.c        ****           case  25: lcdPuts(".  ");break;
 659:pong.c        ****           case  50: lcdPuts(".. ");break;
 660:pong.c        ****           case  75: lcdPuts("...");break;
 661:pong.c        ****           case 100: lcdPuts(" ..");break;
 662:pong.c        ****           case 125: lcdPuts("  .");break;
 663:pong.c        ****           default: break;
 664:pong.c        ****           }
 665:pong.c        ****           cnt++;
 666:pong.c        ****           osSleep(1);
 667:pong.c        ****         }
 668:pong.c        ****       }
 669:pong.c        ****     }
 670:pong.c        ****     break;
 671:pong.c        ****   default: break;
 672:pong.c        ****   }
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 13


 673:pong.c        **** 
 674:pong.c        ****   while (done == FALSE)
 675:pong.c        ****   {
 676:pong.c        ****     player1.score = 0;
 677:pong.c        ****     player2.score = 0;
 678:pong.c        ****     gameOver = FALSE;
 679:pong.c        **** 
 680:pong.c        ****     startNewServ(&player1);
 681:pong.c        ****     paintGame();
 682:pong.c        **** 
 683:pong.c        ****     while (!gameOver)
 684:pong.c        ****     {
 685:pong.c        ****       volatile tU8 key = checkKey2();
 686:pong.c        **** 
 687:pong.c        ****       if (gameType == GAME_TYPE_SINGLE)
 688:pong.c        ****       {
 689:pong.c        ****         player1.key = key;
 690:pong.c        ****         player2.key = key;
 691:pong.c        ****         movePlayer(pActivePlayer, key);
 692:pong.c        ****       }
 693:pong.c        ****       else
 694:pong.c        ****       {
 695:pong.c        ****         // get data from server 
 696:pong.c        ****         if (FALSE == btSendAndRecvStatus(key, FALSE))
 697:pong.c        ****         {
 698:pong.c        ****           gameOver = TRUE;
 699:pong.c        **** 
 700:pong.c        ****           menu.xPos = 2;
 701:pong.c        ****           menu.yPos = 40;
 702:pong.c        ****           menu.xLen = 6+(15*8);
 703:pong.c        ****           menu.yLen = 3*14;
 704:pong.c        ****           menu.noOfChoices = 1;
 705:pong.c        ****           menu.initialChoice = 0;
 706:pong.c        ****           menu.pHeaderText = "Lost connection";
 707:pong.c        ****           menu.headerTextXpos = 4;
 708:pong.c        ****           menu.pChoice[0] = "End game";
 709:pong.c        ****           menu.bgColor       = 0;
 710:pong.c        ****           menu.borderColor   = 0x6d;
 711:pong.c        ****           menu.headerColor   = 0;
 712:pong.c        ****           menu.choicesColor  = 0xfd;
 713:pong.c        ****           menu.selectedColor = 0xe0;
 714:pong.c        **** 
 715:pong.c        ****           switch (drawMenu(menu)) {
 716:pong.c        ****           case 0: done = TRUE; break;   //End game
 717:pong.c        ****           default: break;
 718:pong.c        ****           }
 719:pong.c        ****         }
 720:pong.c        **** 
 721:pong.c        **** //        if(gameType == GAME_TYPE_DUAL_S)
 722:pong.c        ****         {
 723:pong.c        ****           player2.key = key;
 724:pong.c        ****         }
 725:pong.c        **** 
 726:pong.c        ****         player1.key = remoteClientKey;
 727:pong.c        **** 
 728:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C 
 729:pong.c        ****             || remoteClientKey == KEY_UP || remoteClientKey == KEY_DOWN)
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 14


 730:pong.c        ****         {
 731:pong.c        ****           movePlayer(&player1, remoteClientKey);
 732:pong.c        ****         }
 733:pong.c        **** 
 734:pong.c        ****         movePlayer(&player2, key);
 735:pong.c        ****       }
 736:pong.c        **** 
 737:pong.c        ****       moveBall(key);
 738:pong.c        **** 
 739:pong.c        ****       if (player1.score == WIN_SCORE || player2.score == WIN_SCORE)
 740:pong.c        ****       {
 741:pong.c        ****         // make sure that client is updated
 742:pong.c        ****         btSendAndRecvStatus(0, TRUE);
 743:pong.c        **** 
 744:pong.c        ****         gameOver = TRUE;
 745:pong.c        **** 
 746:pong.c        ****         menu.xPos = 10;
 747:pong.c        ****         menu.yPos = 40;
 748:pong.c        ****         menu.xLen = 6+(12*8);
 749:pong.c        ****         menu.yLen = 4*14;
 750:pong.c        ****         menu.noOfChoices = 2;
 751:pong.c        ****         menu.initialChoice = 0;
 752:pong.c        ****         menu.pHeaderText = "Game over!";
 753:pong.c        ****         menu.headerTextXpos = 20;
 754:pong.c        ****         menu.pChoice[0] = "Restart game";
 755:pong.c        ****         menu.pChoice[1] = "End game";
 756:pong.c        ****         menu.bgColor       = 0;
 757:pong.c        ****         menu.borderColor   = 0x6d;
 758:pong.c        ****         menu.headerColor   = 0;
 759:pong.c        ****         menu.choicesColor  = 0xfd;
 760:pong.c        ****         menu.selectedColor = 0xe0;
 761:pong.c        **** 
 762:pong.c        ****         switch (drawMenu(menu))
 763:pong.c        ****         {
 764:pong.c        ****         case 0: done = FALSE; break;  //Restart game
 765:pong.c        ****         case 1: done = TRUE; break;   //End game
 766:pong.c        ****         default: break;
 767:pong.c        ****         }
 768:pong.c        ****       }
 769:pong.c        ****     }
 770:pong.c        ****   }
 771:pong.c        ****   
 772:pong.c        ****   lcdRect(2, 16, 125, 84, 0x6d);
 773:pong.c        ****   lcdRect(4, 18, 121, 80, 0x00);
 774:pong.c        ****   lcdColor(0x00,0xfd);
 775:pong.c        ****   lcdGotoxy(8,18);
 776:pong.c        ****   lcdPuts("Exiting...");
 777:pong.c        **** 
 778:pong.c        ****   activateBtProc();
 779:pong.c        **** }
 780:pong.c        **** 
 781:pong.c        **** 
 782:pong.c        **** 
 783:pong.c        **** /******************************************************************************
 784:pong.c        ****  ******************************************************************************
 785:pong.c        ****  * BLUETOOTH HANDLING PARTS
 786:pong.c        ****  ******************************************************************************
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 15


 787:pong.c        ****  *****************************************************************************/
 788:pong.c        **** #define RECV_BUF_LEN 40
 789:pong.c        **** static tU8 recvPos;
 790:pong.c        **** static tU8 recvBuf[RECV_BUF_LEN];
 791:pong.c        **** 
 792:pong.c        **** 
 793:pong.c        **** /******************************************************************************
 794:pong.c        ****  * Activate server functionality
 795:pong.c        ****  *****************************************************************************/
 796:pong.c        **** static void
 797:pong.c        **** activateServer(void)
 798:pong.c        **** {
 799:pong.c        ****   osSleep(100);
 800:pong.c        ****   uart1SendString("+++");
 801:pong.c        ****   osSleep(100);
 802:pong.c        ****   uart1SendString("AT+BTCAN\r");
 803:pong.c        ****   osSleep(50);
 804:pong.c        ****   uart1SendString("AT+BTSRV=20,\"PingPongServer\"\r");
 805:pong.c        ****   recvPos = 0;
 806:pong.c        **** }
 807:pong.c        **** 
 808:pong.c        **** /******************************************************************************
 809:pong.c        ****  * Return: TRUE if connection established
 810:pong.c        ****  *         FALSE if no connection established
 811:pong.c        ****  *****************************************************************************/
 812:pong.c        **** static tBool
 813:pong.c        **** checkIfClinetConnected(tU8 *pBtAddr)
 814:pong.c        **** {
 815:pong.c        ****   tU8 rxChar;
 816:pong.c        **** 
 817:pong.c        ****   //check if any character has been received from BT
 818:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 819:pong.c        ****   {
 820:pong.c        ****     printf("%c", rxChar);
 821:pong.c        **** 
 822:pong.c        ****     if (rxChar == 0x0a)
 823:pong.c        ****     {
 824:pong.c        ****       if (recvPos > 0)
 825:pong.c        ****         recvBuf[recvPos-1] = '\0';
 826:pong.c        **** 
 827:pong.c        ****       //evaluate received bytes
 828:pong.c        ****       if ((memcmp(recvBuf, "CONNECT ", 8) == 0) && (recvPos == 21))
 829:pong.c        ****       {
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 831:pong.c        ****         {
 832:pong.c        ****           *pBtAddr = recvBuf[recvPos + 8];
 833:pong.c        ****           pBtAddr++;
 834:pong.c        ****         }
 835:pong.c        ****         *pBtAddr = '\0';
 836:pong.c        **** 
 837:pong.c        ****         return TRUE;
 838:pong.c        ****       }
 839:pong.c        ****       recvPos = 0;
 840:pong.c        ****     }
 841:pong.c        ****     else if (recvPos < RECV_BUF_LEN)
 842:pong.c        ****       recvBuf[recvPos++] = rxChar;
 843:pong.c        ****   }
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 16


 844:pong.c        **** 
 845:pong.c        ****   //no connection established
 846:pong.c        ****   return FALSE;
 847:pong.c        **** }
 848:pong.c        **** 
 849:pong.c        **** 
 850:pong.c        **** /******************************************************************************
 851:pong.c        ****  * Return: TRUE if connection succeeded
 852:pong.c        ****  *         FALSE if connection failed
 853:pong.c        ****  *****************************************************************************/
 854:pong.c        **** static tBool
 855:pong.c        **** connectToServer(tU8 *pBtAddr)
 856:pong.c        **** {
 857:pong.c        ****   volatile tU32 timeStamp;
 858:pong.c        ****   tU8 connected;
 859:pong.c        ****   tU8 rxChar;
 860:pong.c        ****   tU32 cnt = 0;
 861:pong.c        **** 
 862:pong.c        ****   osSleep(100);
 863:pong.c        ****   uart1SendString("+++");
 864:pong.c        ****   osSleep(100);
 865:pong.c        ****   uart1SendString("AT+BTCAN\r");
 866:pong.c        ****   osSleep(50);
 867:pong.c        ****   uart1SendString("AT+BTCLT=\"");
 868:pong.c        ****   uart1SendString(pBtAddr);
 869:pong.c        ****   uart1SendString("\",20,3\r");
 870:pong.c        ****   osSleep(100);
 871:pong.c        **** 
 872:pong.c        ****   //wait for response "CONNECT <BTADDR>" 
 873:pong.c        ****   timeStamp = ms;
 874:pong.c        ****   connected = FALSE;
 875:pong.c        ****   recvPos = 0;
 876:pong.c        ****   while ((connected == FALSE) && ((ms - timeStamp) < 10000))
 877:pong.c        ****   {
 878:pong.c        ****     //check if any character has been received from BT
 879:pong.c        ****     if (uart1GetChar(&rxChar) == TRUE)
 880:pong.c        ****     {
 881:pong.c        ****       printf("%c", rxChar);
 882:pong.c        **** 
 883:pong.c        ****       if (rxChar == 0x0a)
 884:pong.c        ****       {
 885:pong.c        ****         if (recvPos > 0)
 886:pong.c        ****           recvBuf[recvPos-1] = '\0';
 887:pong.c        **** 
 888:pong.c        ****         //evaluate received bytes
 889:pong.c        ****         if ((memcmp(recvBuf, "CONNECT ", 8) == 0) && (recvPos == 21))
 890:pong.c        ****         {
 891:pong.c        ****           connected = TRUE;
 892:pong.c        ****         }
 893:pong.c        ****         else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
 894:pong.c        ****         {
 895:pong.c        ****           return FALSE;
 896:pong.c        ****         }
 897:pong.c        ****         recvPos = 0;
 898:pong.c        ****       }
 899:pong.c        ****       else if (recvPos < RECV_BUF_LEN)
 900:pong.c        ****         recvBuf[recvPos++] = rxChar;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 17


 901:pong.c        ****     }
 902:pong.c        ****     osSleep(1);
 903:pong.c        **** 
 904:pong.c        ****     //print activity indicator
 905:pong.c        ****     lcdGotoxy(88,18);
 906:pong.c        ****     lcdColor(0x00,0xfd);
 907:pong.c        ****     switch (cnt % 150)
 908:pong.c        ****     {
 909:pong.c        ****     case   0: lcdPuts("   ");break;
 910:pong.c        ****     case  25: lcdPuts(".  ");break;
 911:pong.c        ****     case  50: lcdPuts(".. ");break;
 912:pong.c        ****     case  75: lcdPuts("...");break;
 913:pong.c        ****     case 100: lcdPuts(" ..");break;
 914:pong.c        ****     case 125: lcdPuts("  .");break;
 915:pong.c        ****     default: break;
 916:pong.c        ****     }
 917:pong.c        ****     cnt++;
 918:pong.c        ****   }
 919:pong.c        **** 
 920:pong.c        ****   //wait for accpet from server
 921:pong.c        ****   if (connected == TRUE)
 922:pong.c        ****   {
 923:pong.c        ****     //wait for response "LETS START PLAYING" 
 924:pong.c        ****     timeStamp = ms;
 925:pong.c        ****     connected = FALSE;
 926:pong.c        ****     recvPos = 0;
 927:pong.c        ****     while ((connected == FALSE) && ((ms - timeStamp) < 10000))
 928:pong.c        ****     {
 929:pong.c        ****       //check if any character has been received from BT
 930:pong.c        ****       if (uart1GetChar(&rxChar) == TRUE)
 931:pong.c        ****       {
 932:pong.c        ****         printf("%c", rxChar);
 933:pong.c        **** 
 934:pong.c        ****         if (rxChar == 0x0a)
 935:pong.c        ****         {
 936:pong.c        ****           if (recvPos > 0)
 937:pong.c        ****             recvBuf[recvPos-1] = '\0';
 938:pong.c        **** 
 939:pong.c        ****           //evaluate received bytes
 940:pong.c        ****           if (memcmp(recvBuf, "LETS START PLAYING", 18) == 0)
 941:pong.c        ****           {
 942:pong.c        ****             return TRUE;
 943:pong.c        ****           }
 944:pong.c        ****           else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
 945:pong.c        ****           {
 946:pong.c        ****             return FALSE;
 947:pong.c        ****           }
 948:pong.c        ****           recvPos = 0;
 949:pong.c        ****         }
 950:pong.c        ****         else if (recvPos < RECV_BUF_LEN)
 951:pong.c        ****           recvBuf[recvPos++] = rxChar;
 952:pong.c        ****       }
 953:pong.c        ****       osSleep(1);
 954:pong.c        **** 
 955:pong.c        ****       //print activity indicator
 956:pong.c        ****       lcdGotoxy(88,18);
 957:pong.c        ****       lcdColor(0x00,0xfd);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 18


 958:pong.c        ****       switch (cnt % 150)
 959:pong.c        ****       {
 960:pong.c        ****       case   0: lcdPuts("   ");break;
 961:pong.c        ****       case  25: lcdPuts("*  ");break;
 962:pong.c        ****       case  50: lcdPuts("** ");break;
 963:pong.c        ****       case  75: lcdPuts("***");break;
 964:pong.c        ****       case 100: lcdPuts(" **");break;
 965:pong.c        ****       case 125: lcdPuts("  *");break;
 966:pong.c        ****       default: break;
 967:pong.c        ****       }
 968:pong.c        ****       cnt++;
 969:pong.c        ****     }
 970:pong.c        ****   }
 971:pong.c        **** 
 972:pong.c        ****   return FALSE;
 973:pong.c        **** }
 974:pong.c        **** 
 975:pong.c        **** 
 976:pong.c        **** static void
 977:pong.c        **** convertToDigits(tU8 *pBuf, tU8 value)
 978:pong.c        **** {
  13              		.loc 1 978 0
  14              		.cfi_startproc
  15              	.LVL0:
  16              		.loc 1 978 0
  17 0000 0906     		lsl	r1, r1, #24
  18              	.LVL1:
 979:pong.c        ****   static const tU8 toHex[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D
 980:pong.c        **** 
 981:pong.c        ****   *pBuf++ = toHex[value >> 4];
  19              		.loc 1 981 0
  20 0002 054B     		ldr	r3, .L2
 978:pong.c        **** {
  21              		.loc 1 978 0
  22 0004 090E     		lsr	r1, r1, #24
  23              		.loc 1 981 0
  24 0006 0A09     		lsr	r2, r1, #4
  25 0008 9A5C     		ldrb	r2, [r3, r2]
  26 000a 0270     		strb	r2, [r0]
  27              	.LVL2:
 982:pong.c        ****   *pBuf   = toHex[value & 0x0f];
  28              		.loc 1 982 0
  29 000c 0F22     		mov	r2, #15
  30 000e 1140     		and	r1, r2
  31 0010 5B5C     		ldrb	r3, [r3, r1]
 983:pong.c        **** }
  32              		.loc 1 983 0
  33              		@ sp needed for prologue
 982:pong.c        ****   *pBuf   = toHex[value & 0x0f];
  34              		.loc 1 982 0
  35 0012 4370     		strb	r3, [r0, #1]
  36              		.loc 1 983 0
  37 0014 7047     		bx	lr
  38              	.L3:
  39 0016 C046     		.align	2
  40              	.L2:
  41 0018 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 19


  42              		.cfi_endproc
  43              	.LFE11:
  44              		.size	convertToDigits, .-convertToDigits
  45              		.align	1
  46              		.code	16
  47              		.thumb_func
  48              		.type	decodeFromDigits, %function
  49              	decodeFromDigits:
  50              	.LFB12:
 984:pong.c        **** 
 985:pong.c        **** static tBool
 986:pong.c        **** decodeFromDigits(tU8 *pBuf, tU8 *pValue)
 987:pong.c        **** {
  51              		.loc 1 987 0
  52              		.cfi_startproc
  53 001c 10B5     		push	{r4, lr}
  54              	.LCFI0:
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 4, -8
  57              		.cfi_offset 14, -4
  58              	.LVL3:
 988:pong.c        ****   tU8   result = 99;
 989:pong.c        ****   tBool valid  = TRUE;
 990:pong.c        ****   
 991:pong.c        ****   if ((*pBuf >= '0') && (*pBuf <= '9'))
  59              		.loc 1 991 0
  60 001e 0478     		ldrb	r4, [r0]
  61 0020 221C     		mov	r2, r4
  62 0022 303A     		sub	r2, r2, #48
  63 0024 1206     		lsl	r2, r2, #24
 987:pong.c        **** {
  64              		.loc 1 987 0
  65 0026 031C     		mov	r3, r0
  66              		.loc 1 991 0
  67 0028 120E     		lsr	r2, r2, #24
 989:pong.c        ****   tBool valid  = TRUE;
  68              		.loc 1 989 0
  69 002a 0120     		mov	r0, #1
  70              	.LVL4:
  71              		.loc 1 991 0
  72 002c 092A     		cmp	r2, #9
  73 002e 09D9     		bls	.L5
 992:pong.c        ****   {
 993:pong.c        ****     result = *pBuf - '0';
 994:pong.c        ****   }
 995:pong.c        ****   else if ((*pBuf >= 'A') && (*pBuf <= 'F'))
  74              		.loc 1 995 0
  75 0030 221C     		mov	r2, r4
  76 0032 413A     		sub	r2, r2, #65
  77 0034 052A     		cmp	r2, #5
  78 0036 03D8     		bhi	.L9
 996:pong.c        ****   {
 997:pong.c        ****     result = *pBuf - 'A' + 10;
  79              		.loc 1 997 0
  80 0038 0A32     		add	r2, r2, #10
  81 003a 1206     		lsl	r2, r2, #24
  82 003c 120E     		lsr	r2, r2, #24
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 20


  83              	.LVL5:
  84 003e 01E0     		b	.L5
  85              	.LVL6:
  86              	.L9:
 998:pong.c        ****   }
 999:pong.c        ****   else
1000:pong.c        ****     valid = FALSE;
  87              		.loc 1 1000 0
  88 0040 0020     		mov	r0, #0
 988:pong.c        ****   tU8   result = 99;
  89              		.loc 1 988 0
  90 0042 6322     		mov	r2, #99
  91              	.LVL7:
  92              	.L5:
1001:pong.c        **** 
1002:pong.c        ****   result <<= 4;
1003:pong.c        ****   pBuf++;
1004:pong.c        ****   
1005:pong.c        ****   if ((*pBuf >= '0') && (*pBuf <= '9'))
  93              		.loc 1 1005 0
  94 0044 5C78     		ldrb	r4, [r3, #1]
  95 0046 231C     		mov	r3, r4
  96              	.LVL8:
1002:pong.c        ****   result <<= 4;
  97              		.loc 1 1002 0
  98 0048 1201     		lsl	r2, r2, #4
  99              	.LVL9:
 100              		.loc 1 1005 0
 101 004a 303B     		sub	r3, r3, #48
1002:pong.c        ****   result <<= 4;
 102              		.loc 1 1002 0
 103 004c 1206     		lsl	r2, r2, #24
 104              		.loc 1 1005 0
 105 004e 1B06     		lsl	r3, r3, #24
1002:pong.c        ****   result <<= 4;
 106              		.loc 1 1002 0
 107 0050 120E     		lsr	r2, r2, #24
 108              	.LVL10:
 109              		.loc 1 1005 0
 110 0052 1B0E     		lsr	r3, r3, #24
 111 0054 092B     		cmp	r3, #9
 112 0056 01D8     		bhi	.L6
1006:pong.c        ****   {
1007:pong.c        ****     result |= *pBuf - '0';
 113              		.loc 1 1007 0
 114 0058 1A43     		orr	r2, r3
 115              	.LVL11:
 116 005a 09E0     		b	.L7
 117              	.L6:
1008:pong.c        ****   }
1009:pong.c        ****   else if ((*pBuf >= 'A') && (*pBuf <= 'F'))
 118              		.loc 1 1009 0
 119 005c 231C     		mov	r3, r4
 120 005e 413B     		sub	r3, r3, #65
 121 0060 052B     		cmp	r3, #5
 122 0062 04D8     		bhi	.L10
1010:pong.c        ****   {
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 21


1011:pong.c        ****     result |= *pBuf - 'A' + 10;
 123              		.loc 1 1011 0
 124 0064 373C     		sub	r4, r4, #55
 125 0066 2243     		orr	r2, r4
 126              	.LVL12:
 127 0068 1206     		lsl	r2, r2, #24
 128 006a 120E     		lsr	r2, r2, #24
 129              	.LVL13:
 130 006c 00E0     		b	.L7
 131              	.L10:
1012:pong.c        ****   }
1013:pong.c        ****   else
1014:pong.c        ****     valid = FALSE;
 132              		.loc 1 1014 0
 133 006e 0020     		mov	r0, #0
 134              	.LVL14:
 135              	.L7:
1015:pong.c        ****   
1016:pong.c        ****   *pValue = result;
 136              		.loc 1 1016 0
 137 0070 0A70     		strb	r2, [r1]
1017:pong.c        ****   return valid;
1018:pong.c        **** }
 138              		.loc 1 1018 0
 139              		@ sp needed for prologue
 140 0072 10BC     		pop	{r4}
 141 0074 02BC     		pop	{r1}
 142 0076 0847     		bx	r1
 143              		.cfi_endproc
 144              	.LFE12:
 145              		.size	decodeFromDigits, .-decodeFromDigits
 146              		.align	1
 147              		.code	16
 148              		.thumb_func
 149              		.type	drawBtsFound, %function
 150              	drawBtsFound:
 151              	.LFB15:
1019:pong.c        **** 
1020:pong.c        **** /******************************************************************************
1021:pong.c        ****  * Return: TRUE if connection established
1022:pong.c        ****  *         FALSE if no connection established
1023:pong.c        ****  *****************************************************************************/
1024:pong.c        **** static tBool
1025:pong.c        **** handleComm(void)
1026:pong.c        **** {
1027:pong.c        ****   tU8 rxChar;
1028:pong.c        **** 
1029:pong.c        ****   //check if any character has been received from BT
1030:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
1031:pong.c        ****   {
1032:pong.c        ****     if (rxChar == 0x0a)
1033:pong.c        ****     {
1034:pong.c        ****       //evaluate received bytes
1035:pong.c        ****       if ((recvBuf[0] == 'S') && (recvPos == 13))
1036:pong.c        ****       {
1037:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C)
1038:pong.c        ****         {
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 22


1039:pong.c        ****           tU8 score1, score2, tmp;
1040:pong.c        ****           
1041:pong.c        ****           decodeFromDigits(&recvBuf[1],  &player1.yPos);
1042:pong.c        ****           decodeFromDigits(&recvBuf[3],  &player2.yPos);
1043:pong.c        ****           decodeFromDigits(&recvBuf[5],  &tmp);
1044:pong.c        ****           ball.sXPos = tmp;
1045:pong.c        ****           decodeFromDigits(&recvBuf[7],  &tmp);
1046:pong.c        ****           ball.sYPos = tmp;
1047:pong.c        ****           decodeFromDigits(&recvBuf[9],  &score1);
1048:pong.c        ****           decodeFromDigits(&recvBuf[11], &score2);
1049:pong.c        ****         
1050:pong.c        ****           if(player1.score != score1 || player2.score != score2)
1051:pong.c        ****           {
1052:pong.c        ****             player1.score = score1;
1053:pong.c        ****             player2.score = score2;
1054:pong.c        ****             paintScore();
1055:pong.c        ****           }
1056:pong.c        ****         }
1057:pong.c        ****         recvPos = 0;
1058:pong.c        **** 
1059:pong.c        ****         return TRUE;
1060:pong.c        ****       }
1061:pong.c        **** 
1062:pong.c        ****       if ((recvBuf[0] == 'C') && (recvPos == 3))
1063:pong.c        ****       {
1064:pong.c        ****         if (gameType == GAME_TYPE_DUAL_S)
1065:pong.c        ****         {
1066:pong.c        ****           decodeFromDigits(&recvBuf[1],  &remoteClientKey);
1067:pong.c        ****         }
1068:pong.c        ****         recvPos = 0;
1069:pong.c        **** 
1070:pong.c        ****         return TRUE;
1071:pong.c        ****       }
1072:pong.c        **** 
1073:pong.c        ****       else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
1074:pong.c        ****       {
1075:pong.c        ****         return FALSE;
1076:pong.c        ****       }
1077:pong.c        ****       recvPos = 0;
1078:pong.c        ****     }
1079:pong.c        ****     else if (recvPos < RECV_BUF_LEN)
1080:pong.c        ****       recvBuf[recvPos++] = rxChar;
1081:pong.c        ****   }
1082:pong.c        **** 
1083:pong.c        ****   return TRUE;
1084:pong.c        **** }
1085:pong.c        **** 
1086:pong.c        **** 
1087:pong.c        **** static tBool 
1088:pong.c        **** btSendAndRecvStatus(tU8 key, tBool force)
1089:pong.c        **** {
1090:pong.c        ****   tU8 buf[14];
1091:pong.c        ****   
1092:pong.c        ****   if (FALSE == handleComm())
1093:pong.c        ****     return FALSE;
1094:pong.c        **** 
1095:pong.c        ****   if (lastStatus + STATUS_UPDATE_TIME > ms && !force)
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 23


1096:pong.c        ****   {
1097:pong.c        ****     return TRUE;
1098:pong.c        ****   }
1099:pong.c        **** 
1100:pong.c        ****   if (gameType == GAME_TYPE_DUAL_S)
1101:pong.c        ****   {
1102:pong.c        ****     // send status info
1103:pong.c        ****     // - player positions and ball position
1104:pong.c        ****     buf[0] = 'S';
1105:pong.c        ****     convertToDigits(&buf[1],  (tU8)player1.yPos);
1106:pong.c        ****     convertToDigits(&buf[3],  (tU8)player2.yPos);
1107:pong.c        **** //    convertToDigits(&buf[5],  (tU8)round(ball.xPos));
1108:pong.c        ****     convertToDigits(&buf[5],  (tU8)floor(ball.xPos));
1109:pong.c        **** //    convertToDigits(&buf[7],  (tU8)round(ball.yPos));
1110:pong.c        ****     convertToDigits(&buf[7],  (tU8)floor(ball.yPos));
1111:pong.c        ****     convertToDigits(&buf[9],  (tU8)player1.score);
1112:pong.c        ****     convertToDigits(&buf[11], (tU8)player2.score);
1113:pong.c        ****     buf[13] = 0x0a;
1114:pong.c        ****     uart1SendChars(buf, 14);
1115:pong.c        **** 
1116:pong.c        ****   }
1117:pong.c        ****   else
1118:pong.c        ****   {
1119:pong.c        ****     // send key state
1120:pong.c        ****     buf[0] = 'C';
1121:pong.c        ****     convertToDigits(&buf[1],  key);
1122:pong.c        ****     buf[3] = 0x0a;
1123:pong.c        ****     uart1SendChars(buf, 4);
1124:pong.c        ****   }
1125:pong.c        **** 
1126:pong.c        ****   lastStatus = ms;
1127:pong.c        ****   
1128:pong.c        ****   return TRUE;
1129:pong.c        **** }
1130:pong.c        **** 
1131:pong.c        **** 
1132:pong.c        **** 
1133:pong.c        **** /*****************************************************************************
1134:pong.c        ****  *
1135:pong.c        ****  * Description:
1136:pong.c        ****  *    Prints the list of 'found' Bluetooth units
1137:pong.c        ****  *
1138:pong.c        ****  ****************************************************************************/
1139:pong.c        **** static void
1140:pong.c        **** drawBtsFound(tU8 cursorPos)
1141:pong.c        **** {
 152              		.loc 1 1141 0
 153              		.cfi_startproc
 154 0078 F0B5     		push	{r4, r5, r6, r7, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 20
 157              		.cfi_offset 4, -20
 158              		.cfi_offset 5, -16
 159              		.cfi_offset 6, -12
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162              	.LVL15:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 24


 163              		.loc 1 1141 0
 164 007a 0506     		lsl	r5, r0, #24
1142:pong.c        ****   tU32 row;
1143:pong.c        **** 
1144:pong.c        ****   for(row=0; row<MAX_BT_UNITS; row++)
1145:pong.c        ****   {
1146:pong.c        ****     lcdGotoxy(2,30+(14*row));
1147:pong.c        ****     if(foundBtUnits[row].active == FALSE)
 165              		.loc 1 1147 0
 166 007c 154F     		ldr	r7, .L23
1141:pong.c        **** {
 167              		.loc 1 1141 0
 168 007e 2D0E     		lsr	r5, r5, #24
 169 0080 1E26     		mov	r6, #30
1144:pong.c        ****   for(row=0; row<MAX_BT_UNITS; row++)
 170              		.loc 1 1144 0
 171 0082 0024     		mov	r4, #0
 172              	.LVL16:
 173              	.L18:
1146:pong.c        ****     lcdGotoxy(2,30+(14*row));
 174              		.loc 1 1146 0
 175 0084 0220     		mov	r0, #2
 176 0086 311C     		mov	r1, r6
 177 0088 FFF7FEFF 		bl	lcdGotoxy
1140:pong.c        **** drawBtsFound(tU8 cursorPos)
 178              		.loc 1 1140 0
 179 008c 6301     		lsl	r3, r4, #5
 180              		.loc 1 1147 0
 181 008e D85D     		ldrb	r0, [r3, r7]
 182 0090 0028     		cmp	r0, #0
 183 0092 08D1     		bne	.L12
1148:pong.c        ****     {
1149:pong.c        ****       if (cursorPos == row)
1150:pong.c        ****         lcdColor(0x01,0xe0);
1151:pong.c        ****       else
1152:pong.c        ****         lcdColor(0x00,0xfd);
 184              		.loc 1 1152 0
 185 0094 FD21     		mov	r1, #253
1149:pong.c        ****       if (cursorPos == row)
 186              		.loc 1 1149 0
 187 0096 A542     		cmp	r5, r4
 188 0098 01D1     		bne	.L20
1150:pong.c        ****         lcdColor(0x01,0xe0);
 189              		.loc 1 1150 0
 190 009a 0120     		mov	r0, #1
 191 009c E021     		mov	r1, #224
 192              	.L20:
 193              		.loc 1 1152 0
 194 009e FFF7FEFF 		bl	lcdColor
1153:pong.c        ****       lcdPuts("-");
 195              		.loc 1 1153 0
 196 00a2 0D48     		ldr	r0, .L23+4
 197 00a4 0CE0     		b	.L22
 198              	.L12:
1154:pong.c        ****     }
1155:pong.c        ****     else
1156:pong.c        ****     {
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 25


1157:pong.c        ****       if (cursorPos == row)
 199              		.loc 1 1157 0
 200 00a6 A542     		cmp	r5, r4
 201 00a8 02D1     		bne	.L16
1158:pong.c        ****         lcdColor(0x01,0xe0);
 202              		.loc 1 1158 0
 203 00aa 0120     		mov	r0, #1
 204 00ac E021     		mov	r1, #224
 205 00ae 01E0     		b	.L21
 206              	.L16:
1159:pong.c        ****       else
1160:pong.c        ****         lcdColor(0x00,0xfd);
 207              		.loc 1 1160 0
 208 00b0 0020     		mov	r0, #0
 209 00b2 FD21     		mov	r1, #253
 210              	.L21:
 211 00b4 FFF7FEFF 		bl	lcdColor
1161:pong.c        ****       lcdPuts(foundBtUnits[row].btAddress);
 212              		.loc 1 1161 0
 213 00b8 064B     		ldr	r3, .L23
 214 00ba 6001     		lsl	r0, r4, #5
 215 00bc 1818     		add	r0, r3, r0
 216 00be 0130     		add	r0, r0, #1
 217              	.L22:
1144:pong.c        ****   for(row=0; row<MAX_BT_UNITS; row++)
 218              		.loc 1 1144 0
 219 00c0 0134     		add	r4, r4, #1
 220              		.loc 1 1161 0
 221 00c2 FFF7FEFF 		bl	lcdPuts
 222              	.LVL17:
1144:pong.c        ****   for(row=0; row<MAX_BT_UNITS; row++)
 223              		.loc 1 1144 0
 224 00c6 0E36     		add	r6, r6, #14
 225 00c8 052C     		cmp	r4, #5
 226 00ca DBD1     		bne	.L18
1162:pong.c        ****     }
1163:pong.c        ****   }
1164:pong.c        **** }
 227              		.loc 1 1164 0
 228              		@ sp needed for prologue
 229              	.LVL18:
 230 00cc F0BC     		pop	{r4, r5, r6, r7}
 231 00ce 01BC     		pop	{r0}
 232 00d0 0047     		bx	r0
 233              	.L24:
 234 00d2 C046     		.align	2
 235              	.L23:
 236 00d4 00000000 		.word	.LANCHOR1
 237 00d8 00000000 		.word	.LC4
 238              		.cfi_endproc
 239              	.LFE15:
 240              		.size	drawBtsFound, .-drawBtsFound
 241              		.global	__udivsi3
 242              		.global	__umodsi3
 243              		.align	1
 244              		.code	16
 245              		.thumb_func
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 26


 246              		.type	paintScore, %function
 247              	paintScore:
 248              	.LFB1:
 190:pong.c        **** {
 249              		.loc 1 190 0
 250              		.cfi_startproc
 251 00dc 71B5     		push	{r0, r4, r5, r6, lr}
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 20
 254              		.cfi_offset 0, -20
 255              		.cfi_offset 4, -16
 256              		.cfi_offset 5, -12
 257              		.cfi_offset 6, -8
 258              		.cfi_offset 14, -4
 195:pong.c        ****   scoreStr[0] = player1.score/100     + '0';
 259              		.loc 1 195 0
 260 00de 2F4D     		ldr	r5, .L26
 261 00e0 EC78     		ldrb	r4, [r5, #3]
 262 00e2 6421     		mov	r1, #100
 263 00e4 201C     		mov	r0, r4
 264 00e6 FFF7FEFF 		bl	__udivsi3
 265 00ea 6B46     		mov	r3, sp
 266 00ec 3030     		add	r0, r0, #48
 267 00ee 1870     		strb	r0, [r3]
 196:pong.c        ****   scoreStr[1] = (player1.score/10)%10 + '0';
 268              		.loc 1 196 0
 269 00f0 0A21     		mov	r1, #10
 270 00f2 201C     		mov	r0, r4
 271 00f4 FFF7FEFF 		bl	__udivsi3
 272 00f8 0006     		lsl	r0, r0, #24
 273 00fa 0A21     		mov	r1, #10
 274 00fc 000E     		lsr	r0, r0, #24
 275 00fe FFF7FEFF 		bl	__umodsi3
 276 0102 6B46     		mov	r3, sp
 277 0104 3030     		add	r0, r0, #48
 278 0106 5870     		strb	r0, [r3, #1]
 197:pong.c        ****   scoreStr[2] = player1.score%10      + '0';
 279              		.loc 1 197 0
 280 0108 0A21     		mov	r1, #10
 281 010a 201C     		mov	r0, r4
 282 010c FFF7FEFF 		bl	__umodsi3
 198:pong.c        ****   scoreStr[3] = '\0';  
 283              		.loc 1 198 0
 284 0110 0024     		mov	r4, #0
 197:pong.c        ****   scoreStr[2] = player1.score%10      + '0';
 285              		.loc 1 197 0
 286 0112 6B46     		mov	r3, sp
 287 0114 3030     		add	r0, r0, #48
 288 0116 9870     		strb	r0, [r3, #2]
 198:pong.c        ****   scoreStr[3] = '\0';  
 289              		.loc 1 198 0
 290 0118 DC70     		strb	r4, [r3, #3]
 200:pong.c        ****   lcdColor(BACKGROUND_COLOR, player1.color); 
 291              		.loc 1 200 0
 292 011a 201C     		mov	r0, r4
 293 011c 2979     		ldrb	r1, [r5, #4]
 294 011e FFF7FEFF 		bl	lcdColor
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 27


 201:pong.c        ****   lcdGotoxy(1,0);
 295              		.loc 1 201 0
 296 0122 211C     		mov	r1, r4
 297 0124 0120     		mov	r0, #1
 298 0126 FFF7FEFF 		bl	lcdGotoxy
 202:pong.c        ****   lcdPuts(scoreStr);
 299              		.loc 1 202 0
 300 012a 6846     		mov	r0, sp
 301 012c FFF7FEFF 		bl	lcdPuts
 205:pong.c        ****   lcdColor(BACKGROUND_COLOR, COLOR_BLUE); 
 302              		.loc 1 205 0
 303 0130 201C     		mov	r0, r4
 304 0132 0321     		mov	r1, #3
 305 0134 FFF7FEFF 		bl	lcdColor
 206:pong.c        ****   lcdGotoxy(46, 0);
 306              		.loc 1 206 0
 307 0138 211C     		mov	r1, r4
 308 013a 2E20     		mov	r0, #46
 309 013c FFF7FEFF 		bl	lcdGotoxy
 207:pong.c        ****   lcdPuts("Pong");
 310              		.loc 1 207 0
 311 0140 1748     		ldr	r0, .L26+4
 312 0142 FFF7FEFF 		bl	lcdPuts
 211:pong.c        ****   scoreStr[0] = player2.score/100     + '0';
 313              		.loc 1 211 0
 314 0146 EE7C     		ldrb	r6, [r5, #19]
 315 0148 6421     		mov	r1, #100
 316 014a 301C     		mov	r0, r6
 317 014c FFF7FEFF 		bl	__udivsi3
 318 0150 6B46     		mov	r3, sp
 319 0152 3030     		add	r0, r0, #48
 320 0154 1870     		strb	r0, [r3]
 212:pong.c        ****   scoreStr[1] = (player2.score/10)%10 + '0';
 321              		.loc 1 212 0
 322 0156 0A21     		mov	r1, #10
 323 0158 301C     		mov	r0, r6
 324 015a FFF7FEFF 		bl	__udivsi3
 325 015e 0006     		lsl	r0, r0, #24
 326 0160 0A21     		mov	r1, #10
 327 0162 000E     		lsr	r0, r0, #24
 328 0164 FFF7FEFF 		bl	__umodsi3
 329 0168 6B46     		mov	r3, sp
 330 016a 3030     		add	r0, r0, #48
 331 016c 5870     		strb	r0, [r3, #1]
 213:pong.c        ****   scoreStr[2] = player2.score%10      + '0';
 332              		.loc 1 213 0
 333 016e 0A21     		mov	r1, #10
 334 0170 301C     		mov	r0, r6
 335 0172 FFF7FEFF 		bl	__umodsi3
 336 0176 6B46     		mov	r3, sp
 337 0178 3030     		add	r0, r0, #48
 338 017a 9870     		strb	r0, [r3, #2]
 214:pong.c        ****   scoreStr[3] = '\0';  
 339              		.loc 1 214 0
 340 017c DC70     		strb	r4, [r3, #3]
 216:pong.c        ****   lcdColor(BACKGROUND_COLOR, player2.color); 
 341              		.loc 1 216 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 28


 342 017e 201C     		mov	r0, r4
 343 0180 297D     		ldrb	r1, [r5, #20]
 344 0182 FFF7FEFF 		bl	lcdColor
 217:pong.c        ****   lcdGotoxy(102,0);
 345              		.loc 1 217 0
 346 0186 211C     		mov	r1, r4
 347 0188 6620     		mov	r0, #102
 348 018a FFF7FEFF 		bl	lcdGotoxy
 218:pong.c        ****   lcdPuts(scoreStr);
 349              		.loc 1 218 0
 350 018e 6846     		mov	r0, sp
 351 0190 FFF7FEFF 		bl	lcdPuts
 219:pong.c        **** }
 352              		.loc 1 219 0
 353              		@ sp needed for prologue
 354 0194 71BC     		pop	{r0, r4, r5, r6}
 355 0196 01BC     		pop	{r0}
 356 0198 0047     		bx	r0
 357              	.L27:
 358 019a C046     		.align	2
 359              	.L26:
 360 019c 00000000 		.word	.LANCHOR2
 361 01a0 02000000 		.word	.LC7
 362              		.cfi_endproc
 363              	.LFE1:
 364              		.size	paintScore, .-paintScore
 365              		.align	1
 366              		.code	16
 367              		.thumb_func
 368              		.type	startNewServ, %function
 369              	startNewServ:
 370              	.LFB3:
 253:pong.c        **** {
 371              		.loc 1 253 0
 372              		.cfi_startproc
 373 01a4 30B5     		push	{r4, r5, lr}
 374              	.LCFI3:
 375              		.cfi_def_cfa_offset 12
 376              		.cfi_offset 4, -12
 377              		.cfi_offset 5, -8
 378              		.cfi_offset 14, -4
 379              	.LVL19:
 254:pong.c        ****   pServingPlayer = pPlayer;
 380              		.loc 1 254 0
 381 01a6 0D4C     		ldr	r4, .L31
 253:pong.c        **** {
 382              		.loc 1 253 0
 383 01a8 051C     		mov	r5, r0
 254:pong.c        ****   pServingPlayer = pPlayer;
 384              		.loc 1 254 0
 385 01aa 2062     		str	r0, [r4, #32]
 256:pong.c        ****   if (pPlayer == &player1)
 386              		.loc 1 256 0
 387 01ac A042     		cmp	r0, r4
 388 01ae 02D0     		beq	.L30
 259:pong.c        ****     ball.xSpeed = -2.6;
 389              		.loc 1 259 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 29


 390 01b0 0B4A     		ldr	r2, .L31+4
 391 01b2 0C4B     		ldr	r3, .L31+8
 392 01b4 01E0     		b	.L29
 393              	.L30:
 257:pong.c        ****     ball.xSpeed = 2.6;
 394              		.loc 1 257 0
 395 01b6 0C4A     		ldr	r2, .L31+12
 396 01b8 0C4B     		ldr	r3, .L31+16
 397              	.L29:
 256:pong.c        ****   if (pPlayer == &player1)
 398              		.loc 1 256 0
 399 01ba A263     		str	r2, [r4, #56]
 400 01bc E363     		str	r3, [r4, #60]
 261:pong.c        ****   ball.ySpeed = 1;
 401              		.loc 1 261 0
 402 01be 0C4A     		ldr	r2, .L31+20
 403 01c0 0C4B     		ldr	r3, .L31+24
 404 01c2 2264     		str	r2, [r4, #64]
 405 01c4 6364     		str	r3, [r4, #68]
 263:pong.c        ****   paintScore();
 406              		.loc 1 263 0
 407 01c6 FFF789FF 		bl	paintScore
 408              	.LVL20:
 265:pong.c        ****   serving = TRUE;
 409              		.loc 1 265 0
 410 01ca 231C     		mov	r3, r4
 411 01cc 5833     		add	r3, r3, #88
 412 01ce 0122     		mov	r2, #1
 268:pong.c        ****   pActivePlayer = pPlayer;    
 413              		.loc 1 268 0
 414 01d0 E565     		str	r5, [r4, #92]
 265:pong.c        ****   serving = TRUE;
 415              		.loc 1 265 0
 416 01d2 1A70     		strb	r2, [r3]
 269:pong.c        **** }
 417              		.loc 1 269 0
 418              		@ sp needed for prologue
 419              	.LVL21:
 420 01d4 30BC     		pop	{r4, r5}
 421 01d6 01BC     		pop	{r0}
 422 01d8 0047     		bx	r0
 423              	.L32:
 424 01da C046     		.align	2
 425              	.L31:
 426 01dc 00000000 		.word	.LANCHOR2
 427 01e0 CCCC04C0 		.word	-1073427252
 428 01e4 CDCCCCCC 		.word	-858993459
 429 01e8 CCCC0440 		.word	1074056396
 430 01ec CDCCCCCC 		.word	-858993459
 431 01f0 0000F03F 		.word	1072693248
 432 01f4 00000000 		.word	0
 433              		.cfi_endproc
 434              	.LFE3:
 435              		.size	startNewServ, .-startNewServ
 436              		.align	1
 437              		.code	16
 438              		.thumb_func
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 30


 439              		.type	paintGame, %function
 440              	paintGame:
 441              	.LFB2:
 230:pong.c        **** {
 442              		.loc 1 230 0
 443              		.cfi_startproc
 444 01f8 11B5     		push	{r0, r4, lr}
 445              	.LCFI4:
 446              		.cfi_def_cfa_offset 12
 447              		.cfi_offset 0, -12
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 232:pong.c        ****   lcdColor(BACKGROUND_COLOR, DEFAULT_TEXT_COLOR);
 450              		.loc 1 232 0
 451 01fa 0020     		mov	r0, #0
 452 01fc E021     		mov	r1, #224
 453 01fe FFF7FEFF 		bl	lcdColor
 233:pong.c        ****   lcdClrscr();
 454              		.loc 1 233 0
 455 0202 FFF7FEFF 		bl	lcdClrscr
 235:pong.c        ****   paintScore();
 456              		.loc 1 235 0
 457 0206 FFF769FF 		bl	paintScore
 237:pong.c        ****   lcdRect(0, SCORE_HEIGHT, BOARD_WIDTH, 1, 0xff);
 458              		.loc 1 237 0
 459 020a FF23     		mov	r3, #255
 460 020c 0093     		str	r3, [sp]
 461 020e 0020     		mov	r0, #0
 462 0210 0F21     		mov	r1, #15
 463 0212 8222     		mov	r2, #130
 464 0214 0123     		mov	r3, #1
 465 0216 FFF7FEFF 		bl	lcdRect
 466              	.LBB20:
 467              	.LBB21:
 240:pong.c        ****   paintPlayer(&player1);
 468              		.loc 1 240 0
 469 021a 0B4C     		ldr	r4, .L34
 178:pong.c        ****   lcdRect(pPlayer->xPos, pPlayer->yPos, PLAYER_WIDTH, pPlayer->size, pPlayer->color);
 470              		.loc 1 178 0
 471 021c 2279     		ldrb	r2, [r4, #4]
 472 021e 2078     		ldrb	r0, [r4]
 473 0220 6178     		ldrb	r1, [r4, #1]
 474 0222 A378     		ldrb	r3, [r4, #2]
 475 0224 0092     		str	r2, [sp]
 476 0226 0322     		mov	r2, #3
 477 0228 FFF7FEFF 		bl	lcdRect
 478              	.LBE21:
 479              	.LBE20:
 480              	.LBB22:
 481              	.LBB23:
 241:pong.c        ****   paintPlayer(&player2);
 482              		.loc 1 241 0
 483 022c 221C     		mov	r2, r4
 484 022e 1032     		add	r2, r2, #16
 178:pong.c        ****   lcdRect(pPlayer->xPos, pPlayer->yPos, PLAYER_WIDTH, pPlayer->size, pPlayer->color);
 485              		.loc 1 178 0
 486 0230 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 31


 487 0232 207C     		ldrb	r0, [r4, #16]
 488 0234 617C     		ldrb	r1, [r4, #17]
 489 0236 A37C     		ldrb	r3, [r4, #18]
 490 0238 0092     		str	r2, [sp]
 491 023a 0322     		mov	r2, #3
 492 023c FFF7FEFF 		bl	lcdRect
 493              	.LBE23:
 494              	.LBE22:
 242:pong.c        **** }
 495              		.loc 1 242 0
 496              		@ sp needed for prologue
 497 0240 11BC     		pop	{r0, r4}
 498 0242 01BC     		pop	{r0}
 499 0244 0047     		bx	r0
 500              	.L35:
 501 0246 C046     		.align	2
 502              	.L34:
 503 0248 00000000 		.word	.LANCHOR2
 504              		.cfi_endproc
 505              	.LFE2:
 506              		.size	paintGame, .-paintGame
 507              		.align	1
 508              		.code	16
 509              		.thumb_func
 510              		.type	movePlayer, %function
 511              	movePlayer:
 512              	.LFB5:
 430:pong.c        **** {
 513              		.loc 1 430 0
 514              		.cfi_startproc
 515 024c 11B5     		push	{r0, r4, lr}
 516              	.LCFI5:
 517              		.cfi_def_cfa_offset 12
 518              		.cfi_offset 0, -12
 519              		.cfi_offset 4, -8
 520              		.cfi_offset 14, -4
 521              	.LVL22:
 430:pong.c        **** {
 522              		.loc 1 430 0
 523 024e 0906     		lsl	r1, r1, #24
 524              	.LVL23:
 525 0250 041C     		mov	r4, r0
 526 0252 090E     		lsr	r1, r1, #24
 431:pong.c        ****   if (key == KEY_NOTHING && (gameType != GAME_TYPE_DUAL_C))
 527              		.loc 1 431 0
 528 0254 04D1     		bne	.L37
 431:pong.c        ****   if (key == KEY_NOTHING && (gameType != GAME_TYPE_DUAL_C))
 529              		.loc 1 431 0 is_stmt 0 discriminator 1
 530 0256 2C4B     		ldr	r3, .L49
 531 0258 0133     		add	r3, r3, #1
 532 025a DB7F     		ldrb	r3, [r3, #31]
 533 025c 012B     		cmp	r3, #1
 534 025e 4FD1     		bne	.L36
 535              	.L37:
 434:pong.c        ****   if (pPlayer->lastMove + PLAYER_MOVE_TIME > ms)
 536              		.loc 1 434 0 is_stmt 1
 537 0260 2A4B     		ldr	r3, .L49+4
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 32


 538 0262 A068     		ldr	r0, [r4, #8]
 539              	.LVL24:
 540 0264 1A68     		ldr	r2, [r3]
 541 0266 1E30     		add	r0, r0, #30
 542 0268 9042     		cmp	r0, r2
 543 026a 49D8     		bhi	.L36
 544              	.LVL25:
 545              	.LBB28:
 546              	.LBB29:
 437:pong.c        ****   pPlayer->lastMove = ms;
 547              		.loc 1 437 0
 548 026c 1B68     		ldr	r3, [r3]
 549 026e A360     		str	r3, [r4, #8]
 439:pong.c        ****   if (gameType == GAME_TYPE_SINGLE || gameType == GAME_TYPE_DUAL_S)
 550              		.loc 1 439 0
 551 0270 254B     		ldr	r3, .L49
 552 0272 0133     		add	r3, r3, #1
 553 0274 DB7F     		ldrb	r3, [r3, #31]
 554 0276 022B     		cmp	r3, #2
 555 0278 01D0     		beq	.L47
 556 027a 002B     		cmp	r3, #0
 557 027c 1DD1     		bne	.L39
 558              	.L47:
 441:pong.c        ****     switch (key)
 559              		.loc 1 441 0
 560 027e 481E     		sub	r0, r1, #1
 561 0280 0728     		cmp	r0, #7
 562 0282 1AD8     		bhi	.L39
 563 0284 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 564              	.L45:
 565 0288 04       		.byte	(.L41-.L45)/2
 566 0289 09       		.byte	(.L42-.L45)/2
 567 028a 19       		.byte	(.L39-.L45)/2
 568 028b 0E       		.byte	(.L43-.L45)/2
 569 028c 19       		.byte	(.L39-.L45)/2
 570 028d 19       		.byte	(.L39-.L45)/2
 571 028e 19       		.byte	(.L39-.L45)/2
 572 028f 16       		.byte	(.L44-.L45)/2
 573              		.align	1
 574              	.L41:
 444:pong.c        ****       if (pPlayer->yPos-PLAYER_STEP <= BOARD_TOP_Y)
 575              		.loc 1 444 0
 576 0290 6378     		ldrb	r3, [r4, #1]
 577 0292 112B     		cmp	r3, #17
 578 0294 34DD     		ble	.L36
 447:pong.c        ****       pPlayer->yPos -= PLAYER_STEP;
 579              		.loc 1 447 0
 580 0296 013B     		sub	r3, r3, #1
 581 0298 0AE0     		b	.L48
 582              	.L42:
 451:pong.c        ****       pActivePlayer = &player2;
 583              		.loc 1 451 0
 584 029a 1D4B     		ldr	r3, .L49+8
 585 029c 1A1C     		mov	r2, r3
 586 029e 1032     		add	r2, r2, #16
 587 02a0 DA65     		str	r2, [r3, #92]
 588 02a2 2DE0     		b	.L36
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 33


 589              	.L43:
 455:pong.c        ****       if (pPlayer->yPos+PLAYER_STEP+pPlayer->size > BOARD_BOTTOM_Y)
 590              		.loc 1 455 0
 591 02a4 6378     		ldrb	r3, [r4, #1]
 592 02a6 A278     		ldrb	r2, [r4, #2]
 593 02a8 0133     		add	r3, r3, #1
 594 02aa 9A18     		add	r2, r3, r2
 595 02ac 812A     		cmp	r2, #129
 596 02ae 27DC     		bgt	.L36
 597              	.L48:
 458:pong.c        ****       pPlayer->yPos += PLAYER_STEP;
 598              		.loc 1 458 0
 599 02b0 6370     		strb	r3, [r4, #1]
 600 02b2 02E0     		b	.L39
 601              	.L44:
 462:pong.c        ****       pActivePlayer = &player1;
 602              		.loc 1 462 0
 603 02b4 164B     		ldr	r3, .L49+8
 604 02b6 DB65     		str	r3, [r3, #92]
 605 02b8 22E0     		b	.L36
 606              	.L39:
 467:pong.c        ****   if (pPlayer->yPos > BOARD_TOP_Y)
 607              		.loc 1 467 0
 608 02ba 6378     		ldrb	r3, [r4, #1]
 609 02bc 102B     		cmp	r3, #16
 610 02be 09D9     		bls	.L46
 469:pong.c        ****     lcdRect(pPlayer->xPos, BOARD_TOP_Y, PLAYER_WIDTH, 
 611              		.loc 1 469 0
 612 02c0 0E3B     		sub	r3, r3, #14
 613 02c2 0022     		mov	r2, #0
 614 02c4 1B06     		lsl	r3, r3, #24
 615 02c6 0092     		str	r2, [sp]
 616 02c8 2078     		ldrb	r0, [r4]
 617 02ca 1B0E     		lsr	r3, r3, #24
 618 02cc 1021     		mov	r1, #16
 619              	.LVL26:
 620 02ce 0322     		mov	r2, #3
 621 02d0 FFF7FEFF 		bl	lcdRect
 622              	.L46:
 623              	.LBB30:
 624              	.LBB31:
 178:pong.c        ****   lcdRect(pPlayer->xPos, pPlayer->yPos, PLAYER_WIDTH, pPlayer->size, pPlayer->color);
 625              		.loc 1 178 0
 626 02d4 2279     		ldrb	r2, [r4, #4]
 627 02d6 6178     		ldrb	r1, [r4, #1]
 628 02d8 A378     		ldrb	r3, [r4, #2]
 629 02da 0092     		str	r2, [sp]
 630 02dc 2078     		ldrb	r0, [r4]
 631 02de 0322     		mov	r2, #3
 632 02e0 FFF7FEFF 		bl	lcdRect
 633              	.LBE31:
 634              	.LBE30:
 475:pong.c        ****   if (pPlayer->yPos+pPlayer->size < BOARD_BOTTOM_Y)
 635              		.loc 1 475 0
 636 02e4 6178     		ldrb	r1, [r4, #1]
 637 02e6 A378     		ldrb	r3, [r4, #2]
 638 02e8 C918     		add	r1, r1, r3
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 34


 639 02ea 8029     		cmp	r1, #128
 640 02ec 08DC     		bgt	.L36
 477:pong.c        ****     lcdRect(pPlayer->xPos, pPlayer->yPos+pPlayer->size,PLAYER_WIDTH, 
 641              		.loc 1 477 0
 642 02ee 0023     		mov	r3, #0
 643 02f0 0906     		lsl	r1, r1, #24
 644 02f2 0093     		str	r3, [sp]
 645 02f4 2078     		ldrb	r0, [r4]
 646 02f6 090E     		lsr	r1, r1, #24
 647 02f8 0322     		mov	r2, #3
 648 02fa 8123     		mov	r3, #129
 649 02fc FFF7FEFF 		bl	lcdRect
 650              	.LVL27:
 651              	.L36:
 652              	.LBE29:
 653              	.LBE28:
 482:pong.c        **** }
 654              		.loc 1 482 0
 655              		@ sp needed for prologue
 656              	.LVL28:
 657 0300 11BC     		pop	{r0, r4}
 658 0302 01BC     		pop	{r0}
 659 0304 0047     		bx	r0
 660              	.L50:
 661 0306 C046     		.align	2
 662              	.L49:
 663 0308 80000000 		.word	.LANCHOR3
 664 030c 00000000 		.word	ms
 665 0310 00000000 		.word	.LANCHOR2
 666              		.cfi_endproc
 667              	.LFE5:
 668              		.size	movePlayer, .-movePlayer
 669              		.global	__floatunsidf
 670              		.global	__fixunsdfsi
 671              		.align	1
 672              		.code	16
 673              		.thumb_func
 674              		.type	btSendAndRecvStatus, %function
 675              	btSendAndRecvStatus:
 676              	.LFB14:
1089:pong.c        **** {
 677              		.loc 1 1089 0
 678              		.cfi_startproc
 679 0314 F0B5     		push	{r4, r5, r6, r7, lr}
 680              	.LCFI6:
 681              		.cfi_def_cfa_offset 20
 682              		.cfi_offset 4, -20
 683              		.cfi_offset 5, -16
 684              		.cfi_offset 6, -12
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687              	.LVL29:
 688 0316 87B0     		sub	sp, sp, #28
 689              	.LCFI7:
 690              		.cfi_def_cfa_offset 48
1089:pong.c        **** {
 691              		.loc 1 1089 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 35


 692 0318 0006     		lsl	r0, r0, #24
 693              	.LVL30:
 694 031a 0906     		lsl	r1, r1, #24
 695              	.LVL31:
 696              	.LBB37:
 697              	.LBB38:
1030:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 698              		.loc 1 1030 0
 699 031c 06AC     		add	r4, sp, #24
 700              	.LBE38:
 701              	.LBE37:
1089:pong.c        **** {
 702              		.loc 1 1089 0
 703 031e 020E     		lsr	r2, r0, #24
 704 0320 0B0E     		lsr	r3, r1, #24
 705              	.LBB42:
 706              	.LBB40:
1030:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 707              		.loc 1 1030 0
 708 0322 201C     		mov	r0, r4
 709              	.LBE40:
 710              	.LBE42:
1089:pong.c        **** {
 711              		.loc 1 1089 0
 712 0324 0092     		str	r2, [sp]
 713 0326 0193     		str	r3, [sp, #4]
 714              	.LBB43:
 715              	.LBB41:
1030:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 716              		.loc 1 1030 0
 717 0328 FFF7FEFF 		bl	uart1GetChar
 718 032c 0128     		cmp	r0, #1
 719 032e 7CD1     		bne	.L52
 720              	.LVL32:
1032:pong.c        ****     if (rxChar == 0x0a)
 721              		.loc 1 1032 0
 722 0330 2178     		ldrb	r1, [r4]
 723 0332 6C4C     		ldr	r4, .L66
 724 0334 0A29     		cmp	r1, #10
 725 0336 6FD1     		bne	.L53
1035:pong.c        ****       if ((recvBuf[0] == 'S') && (recvPos == 13))
 726              		.loc 1 1035 0
 727 0338 231C     		mov	r3, r4
 728 033a 2133     		add	r3, r3, #33
 729 033c 1B78     		ldrb	r3, [r3]
 730 033e 532B     		cmp	r3, #83
 731 0340 48D1     		bne	.L54
 732 0342 231C     		mov	r3, r4
 733 0344 4933     		add	r3, r3, #73
 734 0346 1B78     		ldrb	r3, [r3]
 735 0348 0D2B     		cmp	r3, #13
 736 034a 59D1     		bne	.L55
1037:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C)
 737              		.loc 1 1037 0
 738 034c 631C     		add	r3, r4, #1
 739 034e DB7F     		ldrb	r3, [r3, #31]
 740 0350 012B     		cmp	r3, #1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 36


 741 0352 50D1     		bne	.L58
 742              	.LBB39:
1041:pong.c        ****           decodeFromDigits(&recvBuf[1],  &player1.yPos);
 743              		.loc 1 1041 0
 744 0354 644D     		ldr	r5, .L66+4
 745 0356 201C     		mov	r0, r4
 746 0358 691C     		add	r1, r5, #1
 747 035a 2230     		add	r0, r0, #34
 748 035c FFF75EFE 		bl	decodeFromDigits
1042:pong.c        ****           decodeFromDigits(&recvBuf[3],  &player2.yPos);
 749              		.loc 1 1042 0
 750 0360 201C     		mov	r0, r4
 751 0362 291C     		mov	r1, r5
 752 0364 1131     		add	r1, r1, #17
 753 0366 2430     		add	r0, r0, #36
1043:pong.c        ****           decodeFromDigits(&recvBuf[5],  &tmp);
 754              		.loc 1 1043 0
 755 0368 6E46     		mov	r6, sp
1042:pong.c        ****           decodeFromDigits(&recvBuf[3],  &player2.yPos);
 756              		.loc 1 1042 0
 757 036a FFF757FE 		bl	decodeFromDigits
1043:pong.c        ****           decodeFromDigits(&recvBuf[5],  &tmp);
 758              		.loc 1 1043 0
 759 036e 1B36     		add	r6, r6, #27
 760 0370 201C     		mov	r0, r4
 761 0372 311C     		mov	r1, r6
 762 0374 2630     		add	r0, r0, #38
 763 0376 FFF751FE 		bl	decodeFromDigits
 764              	.LVL33:
1044:pong.c        ****           ball.sXPos = tmp;
 765              		.loc 1 1044 0
 766 037a 3078     		ldrb	r0, [r6]
 767              	.LVL34:
 768 037c FFF7FEFF 		bl	__floatunsidf
 769 0380 A864     		str	r0, [r5, #72]
 770 0382 E964     		str	r1, [r5, #76]
1045:pong.c        ****           decodeFromDigits(&recvBuf[7],  &tmp);
 771              		.loc 1 1045 0
 772 0384 201C     		mov	r0, r4
 773 0386 311C     		mov	r1, r6
 774 0388 2830     		add	r0, r0, #40
 775 038a FFF747FE 		bl	decodeFromDigits
 776              	.LVL35:
1046:pong.c        ****           ball.sYPos = tmp;
 777              		.loc 1 1046 0
 778 038e 3078     		ldrb	r0, [r6]
 779              	.LVL36:
 780 0390 FFF7FEFF 		bl	__floatunsidf
1047:pong.c        ****           decodeFromDigits(&recvBuf[9],  &score1);
 781              		.loc 1 1047 0
 782 0394 6F46     		mov	r7, sp
1046:pong.c        ****           ball.sYPos = tmp;
 783              		.loc 1 1046 0
 784 0396 2865     		str	r0, [r5, #80]
 785 0398 6965     		str	r1, [r5, #84]
1047:pong.c        ****           decodeFromDigits(&recvBuf[9],  &score1);
 786              		.loc 1 1047 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 37


 787 039a 1937     		add	r7, r7, #25
 788 039c 201C     		mov	r0, r4
 789 039e 391C     		mov	r1, r7
 790 03a0 2A30     		add	r0, r0, #42
1048:pong.c        ****           decodeFromDigits(&recvBuf[11], &score2);
 791              		.loc 1 1048 0
 792 03a2 6E46     		mov	r6, sp
1047:pong.c        ****           decodeFromDigits(&recvBuf[9],  &score1);
 793              		.loc 1 1047 0
 794 03a4 FFF73AFE 		bl	decodeFromDigits
1048:pong.c        ****           decodeFromDigits(&recvBuf[11], &score2);
 795              		.loc 1 1048 0
 796 03a8 1A36     		add	r6, r6, #26
 797 03aa 201C     		mov	r0, r4
 798 03ac 2C30     		add	r0, r0, #44
 799 03ae 311C     		mov	r1, r6
 800 03b0 FFF734FE 		bl	decodeFromDigits
 801              	.LVL37:
1050:pong.c        ****           if(player1.score != score1 || player2.score != score2)
 802              		.loc 1 1050 0
 803 03b4 3B78     		ldrb	r3, [r7]
 804 03b6 EA78     		ldrb	r2, [r5, #3]
 805 03b8 9A42     		cmp	r2, r3
 806 03ba 03D1     		bne	.L57
 807 03bc E97C     		ldrb	r1, [r5, #19]
 808              	.LVL38:
 809 03be 3278     		ldrb	r2, [r6]
 810              	.LVL39:
 811 03c0 9142     		cmp	r1, r2
 812 03c2 18D0     		beq	.L58
 813              	.LVL40:
 814              	.L57:
1052:pong.c        ****             player1.score = score1;
 815              		.loc 1 1052 0
 816 03c4 EB70     		strb	r3, [r5, #3]
1053:pong.c        ****             player2.score = score2;
 817              		.loc 1 1053 0
 818 03c6 6B46     		mov	r3, sp
 819 03c8 1A33     		add	r3, r3, #26
 820 03ca 1B78     		ldrb	r3, [r3]
 821              	.LVL41:
 822 03cc EB74     		strb	r3, [r5, #19]
1054:pong.c        ****             paintScore();
 823              		.loc 1 1054 0
 824 03ce FFF785FE 		bl	paintScore
 825              	.LVL42:
 826 03d2 10E0     		b	.L58
 827              	.LVL43:
 828              	.L54:
 829              	.LBE39:
1062:pong.c        ****       if ((recvBuf[0] == 'C') && (recvPos == 3))
 830              		.loc 1 1062 0
 831 03d4 432B     		cmp	r3, #67
 832 03d6 13D1     		bne	.L55
 833 03d8 231C     		mov	r3, r4
 834 03da 4933     		add	r3, r3, #73
 835 03dc 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 38


 836 03de 032B     		cmp	r3, #3
 837 03e0 0ED1     		bne	.L55
1064:pong.c        ****         if (gameType == GAME_TYPE_DUAL_S)
 838              		.loc 1 1064 0
 839 03e2 631C     		add	r3, r4, #1
 840 03e4 DB7F     		ldrb	r3, [r3, #31]
 841 03e6 022B     		cmp	r3, #2
 842 03e8 05D1     		bne	.L58
1066:pong.c        ****           decodeFromDigits(&recvBuf[1],  &remoteClientKey);
 843              		.loc 1 1066 0
 844 03ea 201C     		mov	r0, r4
 845 03ec 211C     		mov	r1, r4
 846 03ee 2230     		add	r0, r0, #34
 847 03f0 4A31     		add	r1, r1, #74
 848 03f2 FFF713FE 		bl	decodeFromDigits
 849              	.LVL44:
 850              	.L58:
1068:pong.c        ****         recvPos = 0;
 851              		.loc 1 1068 0
 852 03f6 3B4B     		ldr	r3, .L66
 853 03f8 0022     		mov	r2, #0
 854              	.LVL45:
 855 03fa 4933     		add	r3, r3, #73
 856 03fc 1A70     		strb	r2, [r3]
 857 03fe 14E0     		b	.L52
 858              	.LVL46:
 859              	.L55:
1073:pong.c        ****       else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
 860              		.loc 1 1073 0
 861 0400 201C     		mov	r0, r4
 862 0402 2130     		add	r0, r0, #33
 863 0404 3949     		ldr	r1, .L66+8
 864 0406 0A22     		mov	r2, #10
 865 0408 FFF7FEFF 		bl	memcmp
 866 040c 0028     		cmp	r0, #0
 867 040e 65D0     		beq	.L59
1077:pong.c        ****       recvPos = 0;
 868              		.loc 1 1077 0
 869 0410 4934     		add	r4, r4, #73
 870 0412 0023     		mov	r3, #0
 871 0414 2370     		strb	r3, [r4]
 872 0416 08E0     		b	.L52
 873              	.L53:
1079:pong.c        ****     else if (recvPos < RECV_BUF_LEN)
 874              		.loc 1 1079 0
 875 0418 221C     		mov	r2, r4
 876 041a 4932     		add	r2, r2, #73
 877 041c 1378     		ldrb	r3, [r2]
 878 041e 272B     		cmp	r3, #39
 879 0420 03D8     		bhi	.L52
1080:pong.c        ****       recvBuf[recvPos++] = rxChar;
 880              		.loc 1 1080 0
 881 0422 2134     		add	r4, r4, #33
 882 0424 E154     		strb	r1, [r4, r3]
 883 0426 0133     		add	r3, r3, #1
 884 0428 1370     		strb	r3, [r2]
 885              	.LVL47:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 39


 886              	.L52:
 887              	.LBE41:
 888              	.LBE43:
1095:pong.c        ****   if (lastStatus + STATUS_UPDATE_TIME > ms && !force)
 889              		.loc 1 1095 0
 890 042a 314B     		ldr	r3, .L66+12
 891 042c 1A68     		ldr	r2, [r3]
 892 042e 2D4B     		ldr	r3, .L66
 893 0430 D96C     		ldr	r1, [r3, #76]
 894 0432 0F31     		add	r1, r1, #15
 895 0434 9142     		cmp	r1, r2
 896 0436 03D9     		bls	.L60
1095:pong.c        ****   if (lastStatus + STATUS_UPDATE_TIME > ms && !force)
 897              		.loc 1 1095 0 is_stmt 0 discriminator 1
 898 0438 019A     		ldr	r2, [sp, #4]
1097:pong.c        ****     return TRUE;
 899              		.loc 1 1097 0 is_stmt 1 discriminator 1
 900 043a 0120     		mov	r0, #1
1095:pong.c        ****   if (lastStatus + STATUS_UPDATE_TIME > ms && !force)
 901              		.loc 1 1095 0 discriminator 1
 902 043c 002A     		cmp	r2, #0
 903 043e 4DD0     		beq	.L59
 904              	.L60:
 905              	.LVL48:
 906              	.LBB44:
 907              	.LBB45:
1100:pong.c        ****   if (gameType == GAME_TYPE_DUAL_S)
 908              		.loc 1 1100 0
 909 0440 0133     		add	r3, r3, #1
 910 0442 DB7F     		ldrb	r3, [r3, #31]
 911 0444 022B     		cmp	r3, #2
 912 0446 35D1     		bne	.L61
1104:pong.c        ****     buf[0] = 'S';
 913              		.loc 1 1104 0
 914 0448 5323     		mov	r3, #83
 915 044a 6A46     		mov	r2, sp
 916 044c 1372     		strb	r3, [r2, #8]
1105:pong.c        ****     convertToDigits(&buf[1],  (tU8)player1.yPos);
 917              		.loc 1 1105 0
 918 044e 264C     		ldr	r4, .L66+4
 919 0450 6846     		mov	r0, sp
 920 0452 6178     		ldrb	r1, [r4, #1]
 921 0454 0930     		add	r0, r0, #9
 922 0456 FFF7D3FD 		bl	convertToDigits
1106:pong.c        ****     convertToDigits(&buf[3],  (tU8)player2.yPos);
 923              		.loc 1 1106 0
 924 045a 6846     		mov	r0, sp
 925 045c 617C     		ldrb	r1, [r4, #17]
 926 045e 0B30     		add	r0, r0, #11
 927 0460 FFF7CEFD 		bl	convertToDigits
1108:pong.c        ****     convertToDigits(&buf[5],  (tU8)floor(ball.xPos));
 928              		.loc 1 1108 0
 929 0464 606A     		ldr	r0, [r4, #36]
 930 0466 A16A     		ldr	r1, [r4, #40]
 931 0468 FFF7FEFF 		bl	floor
 932 046c FFF7FEFF 		bl	__fixunsdfsi
 933 0470 0106     		lsl	r1, r0, #24
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 40


 934 0472 6846     		mov	r0, sp
 935 0474 090E     		lsr	r1, r1, #24
 936 0476 0D30     		add	r0, r0, #13
 937 0478 FFF7C2FD 		bl	convertToDigits
1110:pong.c        ****     convertToDigits(&buf[7],  (tU8)floor(ball.yPos));
 938              		.loc 1 1110 0
 939 047c E06A     		ldr	r0, [r4, #44]
 940 047e 216B     		ldr	r1, [r4, #48]
 941 0480 FFF7FEFF 		bl	floor
 942 0484 FFF7FEFF 		bl	__fixunsdfsi
 943 0488 0106     		lsl	r1, r0, #24
 944 048a 6846     		mov	r0, sp
 945 048c 090E     		lsr	r1, r1, #24
 946 048e 0F30     		add	r0, r0, #15
 947 0490 FFF7B6FD 		bl	convertToDigits
1111:pong.c        ****     convertToDigits(&buf[9],  (tU8)player1.score);
 948              		.loc 1 1111 0
 949 0494 6846     		mov	r0, sp
 950 0496 E178     		ldrb	r1, [r4, #3]
 951 0498 1130     		add	r0, r0, #17
 952 049a FFF7B1FD 		bl	convertToDigits
1112:pong.c        ****     convertToDigits(&buf[11], (tU8)player2.score);
 953              		.loc 1 1112 0
 954 049e 6846     		mov	r0, sp
 955 04a0 E17C     		ldrb	r1, [r4, #19]
 956 04a2 1330     		add	r0, r0, #19
 957 04a4 FFF7ACFD 		bl	convertToDigits
1113:pong.c        ****     buf[13] = 0x0a;
 958              		.loc 1 1113 0
 959 04a8 0A23     		mov	r3, #10
 960 04aa 6A46     		mov	r2, sp
 961 04ac 5375     		strb	r3, [r2, #21]
1114:pong.c        ****     uart1SendChars(buf, 14);
 962              		.loc 1 1114 0
 963 04ae 02A8     		add	r0, sp, #8
 964 04b0 0E21     		mov	r1, #14
 965 04b2 0CE0     		b	.L65
 966              	.L61:
1120:pong.c        ****     buf[0] = 'C';
 967              		.loc 1 1120 0
 968 04b4 4323     		mov	r3, #67
 969 04b6 6A46     		mov	r2, sp
1121:pong.c        ****     convertToDigits(&buf[1],  key);
 970              		.loc 1 1121 0
 971 04b8 6846     		mov	r0, sp
1120:pong.c        ****     buf[0] = 'C';
 972              		.loc 1 1120 0
 973 04ba 1372     		strb	r3, [r2, #8]
1121:pong.c        ****     convertToDigits(&buf[1],  key);
 974              		.loc 1 1121 0
 975 04bc 0930     		add	r0, r0, #9
 976 04be 0099     		ldr	r1, [sp]
 977 04c0 FFF79EFD 		bl	convertToDigits
1122:pong.c        ****     buf[3] = 0x0a;
 978              		.loc 1 1122 0
 979 04c4 0A23     		mov	r3, #10
 980 04c6 6A46     		mov	r2, sp
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 41


 981 04c8 D372     		strb	r3, [r2, #11]
1123:pong.c        ****     uart1SendChars(buf, 4);
 982              		.loc 1 1123 0
 983 04ca 02A8     		add	r0, sp, #8
 984 04cc 0421     		mov	r1, #4
 985              	.L65:
 986 04ce FFF7FEFF 		bl	uart1SendChars
1126:pong.c        ****   lastStatus = ms;
 987              		.loc 1 1126 0
 988 04d2 074B     		ldr	r3, .L66+12
 989 04d4 1A68     		ldr	r2, [r3]
 990 04d6 034B     		ldr	r3, .L66
 991 04d8 DA64     		str	r2, [r3, #76]
 992 04da 0120     		mov	r0, #1
 993              	.LVL49:
 994              	.L59:
 995              	.LBE45:
 996              	.LBE44:
1129:pong.c        **** }
 997              		.loc 1 1129 0
 998 04dc 07B0     		add	sp, sp, #28
 999              		@ sp needed for prologue
 1000 04de F0BC     		pop	{r4, r5, r6, r7}
 1001 04e0 02BC     		pop	{r1}
 1002 04e2 0847     		bx	r1
 1003              	.L67:
 1004              		.align	2
 1005              	.L66:
 1006 04e4 80000000 		.word	.LANCHOR3
 1007 04e8 00000000 		.word	.LANCHOR2
 1008 04ec 07000000 		.word	.LC23
 1009 04f0 00000000 		.word	ms
 1010              		.cfi_endproc
 1011              	.LFE14:
 1012              		.size	btSendAndRecvStatus, .-btSendAndRecvStatus
 1013              		.global	__adddf3
 1014              		.global	__floatsidf
 1015              		.global	__subdf3
 1016              		.global	__nedf2
 1017              		.global	__gtdf2
 1018              		.global	__gedf2
 1019              		.global	__ltdf2
 1020              		.global	__divdf3
 1021              		.global	__muldf3
 1022              		.global	__ledf2
 1023              		.align	1
 1024              		.global	playPong
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	playPong, %function
 1028              	playPong:
 1029              	.LFB7:
 514:pong.c        **** {
 1030              		.loc 1 514 0
 1031              		.cfi_startproc
 1032 04f4 F0B5     		push	{r4, r5, r6, r7, lr}
 1033              	.LCFI8:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 42


 1034              		.cfi_def_cfa_offset 20
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 1040              	.LVL50:
 1041 04f6 B1B0     		sub	sp, sp, #196
 1042              	.LCFI9:
 1043              		.cfi_def_cfa_offset 216
 522:pong.c        ****   blockBtProc();
 1044              		.loc 1 522 0
 1045 04f8 FFF7FEFF 		bl	blockBtProc
 524:pong.c        ****   player1.score = 0;
 1046              		.loc 1 524 0
 1047 04fc CE4B     		ldr	r3, .L278
 1048 04fe 0024     		mov	r4, #0
 1049 0500 DC70     		strb	r4, [r3, #3]
 525:pong.c        ****   player2.score = 0;
 1050              		.loc 1 525 0
 1051 0502 DC74     		strb	r4, [r3, #19]
 526:pong.c        ****   paintGame();
 1052              		.loc 1 526 0
 1053 0504 FFF778FE 		bl	paintGame
 529:pong.c        ****   menu.xPos = 10;
 1054              		.loc 1 529 0
 1055 0508 15AB     		add	r3, sp, #84
 536:pong.c        ****   menu.headerTextXpos = 13;
 1056              		.loc 1 536 0
 1057 050a 0D21     		mov	r1, #13
 1058 050c 1973     		strb	r1, [r3, #12]
 537:pong.c        ****   menu.pChoice[0] = "Single player";
 1059              		.loc 1 537 0
 1060 050e CB49     		ldr	r1, .L278+4
 529:pong.c        ****   menu.xPos = 10;
 1061              		.loc 1 529 0
 1062 0510 0A22     		mov	r2, #10
 1063 0512 1A70     		strb	r2, [r3]
 537:pong.c        ****   menu.pChoice[0] = "Single player";
 1064              		.loc 1 537 0
 1065 0514 1991     		str	r1, [sp, #100]
 530:pong.c        ****   menu.yPos = 40;
 1066              		.loc 1 530 0
 1067 0516 2822     		mov	r2, #40
 538:pong.c        ****   menu.pChoice[1] = "Dual - Client";
 1068              		.loc 1 538 0
 1069 0518 C949     		ldr	r1, .L278+8
 530:pong.c        ****   menu.yPos = 40;
 1070              		.loc 1 530 0
 1071 051a 5A70     		strb	r2, [r3, #1]
 531:pong.c        ****   menu.xLen = 6+(13*8);
 1072              		.loc 1 531 0
 1073 051c 6E22     		mov	r2, #110
 1074 051e 9A70     		strb	r2, [r3, #2]
 538:pong.c        ****   menu.pChoice[1] = "Dual - Client";
 1075              		.loc 1 538 0
 1076 0520 1A91     		str	r1, [sp, #104]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 43


 532:pong.c        ****   menu.yLen = 5*14;
 1077              		.loc 1 532 0
 1078 0522 4622     		mov	r2, #70
 539:pong.c        ****   menu.pChoice[2] = "Dual - Server";
 1079              		.loc 1 539 0
 1080 0524 C749     		ldr	r1, .L278+12
 532:pong.c        ****   menu.yLen = 5*14;
 1081              		.loc 1 532 0
 1082 0526 DA70     		strb	r2, [r3, #3]
 535:pong.c        ****   menu.pHeaderText = "Type of Game?";
 1083              		.loc 1 535 0
 1084 0528 C748     		ldr	r0, .L278+16
 533:pong.c        ****   menu.noOfChoices = 3;
 1085              		.loc 1 533 0
 1086 052a 0322     		mov	r2, #3
 1087 052c 1A71     		strb	r2, [r3, #4]
 539:pong.c        ****   menu.pChoice[2] = "Dual - Server";
 1088              		.loc 1 539 0
 1089 052e 1B91     		str	r1, [sp, #108]
 541:pong.c        ****   menu.borderColor   = 0x6d;
 1090              		.loc 1 541 0
 1091 0530 6D22     		mov	r2, #109
 540:pong.c        ****   menu.bgColor       = 0;
 1092              		.loc 1 540 0
 1093 0532 1FA9     		add	r1, sp, #124
 543:pong.c        ****   menu.choicesColor  = 0xfd;
 1094              		.loc 1 543 0
 1095 0534 FD26     		mov	r6, #253
 540:pong.c        ****   menu.bgColor       = 0;
 1096              		.loc 1 540 0
 1097 0536 0C70     		strb	r4, [r1]
 541:pong.c        ****   menu.borderColor   = 0x6d;
 1098              		.loc 1 541 0
 1099 0538 4A70     		strb	r2, [r1, #1]
 535:pong.c        ****   menu.pHeaderText = "Type of Game?";
 1100              		.loc 1 535 0
 1101 053a 1790     		str	r0, [sp, #92]
 542:pong.c        ****   menu.headerColor   = 0;
 1102              		.loc 1 542 0
 1103 053c 8C70     		strb	r4, [r1, #2]
 543:pong.c        ****   menu.choicesColor  = 0xfd;
 1104              		.loc 1 543 0
 1105 053e CE70     		strb	r6, [r1, #3]
 535:pong.c        ****   menu.pHeaderText = "Type of Game?";
 1106              		.loc 1 535 0
 1107 0540 8446     		mov	ip, r0
 544:pong.c        ****   menu.selectedColor = 0xe0;
 1108              		.loc 1 544 0
 1109 0542 20A9     		add	r1, sp, #128
 1110 0544 E020     		mov	r0, #224
 1111 0546 0870     		strb	r0, [r1]
 534:pong.c        ****   menu.initialChoice = 0;
 1112              		.loc 1 534 0
 1113 0548 5C71     		strb	r4, [r3, #5]
 546:pong.c        ****   switch (drawMenu(menu))
 1114              		.loc 1 546 0
 1115 054a 19A9     		add	r1, sp, #100
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 44


 1116 054c 6846     		mov	r0, sp
 1117 054e A4C9     		ldmia	r1!, {r2, r5, r7}
 1118 0550 A4C0     		stmia	r0!, {r2, r5, r7}
 1119 0552 A4C9     		ldmia	r1!, {r2, r5, r7}
 1120 0554 A4C0     		stmia	r0!, {r2, r5, r7}
 1121 0556 6246     		mov	r2, ip
 1122 0558 A0C9     		ldmia	r1!, {r5, r7}
 1123 055a A0C0     		stmia	r0!, {r5, r7}
 1124 055c 1598     		ldr	r0, [sp, #84]
 1125 055e 1699     		ldr	r1, [sp, #88]
 1126 0560 189B     		ldr	r3, [sp, #96]
 1127 0562 FFF7FEFF 		bl	drawMenu
 1128 0566 051C     		mov	r5, r0
 1129 0568 0128     		cmp	r0, #1
 1130 056a 0BD0     		beq	.L71
 1131 056c A042     		cmp	r0, r4
 1132 056e 04D0     		beq	.L70
 1133 0570 0228     		cmp	r0, #2
 1134 0572 01D0     		beq	.LCB907
 1135 0574 00F0F8FF 		bl	.L262	@far jump
 1136              	.LCB907:
 1137 0578 6AE3     		b	.L265
 1138              	.L70:
 548:pong.c        ****   case 0: gameType = GAME_TYPE_SINGLE; break;  //Single player
 1139              		.loc 1 548 0
 1140 057a B44B     		ldr	r3, .L278+20
 1141 057c 0133     		add	r3, r3, #1
 1142 057e D877     		strb	r0, [r3, #31]
 1143 0580 00F0EFFF 		bl	.L244	@ far jump
 1144              	.L71:
 550:pong.c        ****     gameType = GAME_TYPE_DUAL_C;
 1145              		.loc 1 550 0
 1146 0584 B14B     		ldr	r3, .L278+20
 1147 0586 0133     		add	r3, r3, #1
 1148 0588 D877     		strb	r0, [r3, #31]
 552:pong.c        ****     lcdRect(2, 16, 125, 84, 0x6d);
 1149              		.loc 1 552 0
 1150 058a 6D20     		mov	r0, #109
 1151 058c 0090     		str	r0, [sp]
 1152 058e 1021     		mov	r1, #16
 1153 0590 0220     		mov	r0, #2
 1154 0592 7D22     		mov	r2, #125
 1155 0594 5423     		mov	r3, #84
 1156 0596 FFF7FEFF 		bl	lcdRect
 553:pong.c        ****     lcdRect(4, 18, 121, 80, 0x00);
 1157              		.loc 1 553 0
 1158 059a 7922     		mov	r2, #121
 1159 059c 5023     		mov	r3, #80
 1160 059e 0420     		mov	r0, #4
 1161 05a0 1221     		mov	r1, #18
 1162 05a2 0094     		str	r4, [sp]
 1163 05a4 FFF7FEFF 		bl	lcdRect
 554:pong.c        ****     lcdColor(0x00,0xfd);
 1164              		.loc 1 554 0
 1165 05a8 201C     		mov	r0, r4
 1166 05aa 311C     		mov	r1, r6
 1167 05ac FFF7FEFF 		bl	lcdColor
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 45


 1168              	.LVL51:
 1169              	.LBB65:
 1170              	.LBB66:
1165:pong.c        **** 
1166:pong.c        **** 
1167:pong.c        **** /******************************************************************************
1168:pong.c        ****  * Perform a BT inquiry after PingPong servers
1169:pong.c        ****  *****************************************************************************/
1170:pong.c        **** static tBool
1171:pong.c        **** searchServers(tU8 *pBtAddr)
1172:pong.c        **** {
1173:pong.c        ****   tU8  rxChar;
1174:pong.c        ****   tU8  done;
1175:pong.c        ****   tU8  i;
1176:pong.c        ****   tU8  anyKey;
1177:pong.c        ****   tU8  cursorPos;
1178:pong.c        ****   volatile tU32 timeStamp;
1179:pong.c        ****   tU8  recvPos;
1180:pong.c        ****   tU8  recvBuf[RECV_BUF_LEN];
1181:pong.c        ****   tU8  foundBt;
1182:pong.c        ****   tU32 cnt;
1183:pong.c        **** 
1184:pong.c        ****   for(foundBt=0; foundBt<MAX_BT_UNITS; foundBt++)
1185:pong.c        ****   {
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1171              		.loc 1 1186 0
 1172 05b0 A74B     		ldr	r3, .L278+24
 1173 05b2 5A1C     		add	r2, r3, #1
 1174 05b4 D477     		strb	r4, [r2, #31]
1187:pong.c        ****     foundBtUnits[foundBt].btName[0] = '\0';
 1175              		.loc 1 1187 0
 1176 05b6 1A1C     		mov	r2, r3
 1177 05b8 2E32     		add	r2, r2, #46
 1178 05ba 1470     		strb	r4, [r2]
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1179              		.loc 1 1186 0
 1180 05bc 1A1C     		mov	r2, r3
 1181 05be 4032     		add	r2, r2, #64
 1182 05c0 1470     		strb	r4, [r2]
 1183              		.loc 1 1187 0
 1184 05c2 1A1C     		mov	r2, r3
 1185 05c4 4E32     		add	r2, r2, #78
 1186 05c6 1470     		strb	r4, [r2]
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1187              		.loc 1 1186 0
 1188 05c8 1A1C     		mov	r2, r3
 1189 05ca 6032     		add	r2, r2, #96
 1190 05cc 1470     		strb	r4, [r2]
 1191              		.loc 1 1187 0
 1192 05ce 1A1C     		mov	r2, r3
 1193 05d0 6E32     		add	r2, r2, #110
 1194 05d2 1470     		strb	r4, [r2]
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1195              		.loc 1 1186 0
 1196 05d4 1A1C     		mov	r2, r3
 1197 05d6 1C70     		strb	r4, [r3]
 1198              		.loc 1 1187 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 46


 1199 05d8 9C73     		strb	r4, [r3, #14]
 1200              	.LVL52:
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1201              		.loc 1 1186 0
 1202 05da 8032     		add	r2, r2, #128
 1203              		.loc 1 1187 0
 1204 05dc 8E33     		add	r3, r3, #142
1186:pong.c        ****     foundBtUnits[foundBt].active = FALSE;
 1205              		.loc 1 1186 0
 1206 05de 1470     		strb	r4, [r2]
 1207              		.loc 1 1187 0
 1208 05e0 1C70     		strb	r4, [r3]
 1209              	.LVL53:
1188:pong.c        ****   }
1189:pong.c        **** 
1190:pong.c        ****   //clear menu screen
1191:pong.c        ****   lcdRect(1, 16, 126, 84, 0x00);
 1210              		.loc 1 1191 0
 1211 05e2 7E22     		mov	r2, #126
 1212 05e4 5423     		mov	r3, #84
 1213 05e6 281C     		mov	r0, r5
 1214 05e8 1021     		mov	r1, #16
 1215 05ea 0094     		str	r4, [sp]
 1216 05ec FFF7FEFF 		bl	lcdRect
1192:pong.c        ****   lcdGotoxy(18,16);
 1217              		.loc 1 1192 0
 1218 05f0 1220     		mov	r0, #18
 1219 05f2 1021     		mov	r1, #16
 1220 05f4 FFF7FEFF 		bl	lcdGotoxy
1193:pong.c        ****   lcdColor(0x00,0xfd);
 1221              		.loc 1 1193 0
 1222 05f8 311C     		mov	r1, r6
 1223 05fa 201C     		mov	r0, r4
 1224 05fc FFF7FEFF 		bl	lcdColor
1194:pong.c        ****   lcdPuts("Inquiry");
 1225              		.loc 1 1194 0
 1226 0600 9448     		ldr	r0, .L278+28
 1227 0602 FFF7FEFF 		bl	lcdPuts
1195:pong.c        **** 
1196:pong.c        ****   //*************************************************************
1197:pong.c        ****   //* Start inquiry (during 6 seconds)
1198:pong.c        ****   //*************************************************************
1199:pong.c        ****   osSleep(100);
 1228              		.loc 1 1199 0
 1229 0606 6420     		mov	r0, #100
 1230 0608 FFF7FEFF 		bl	osSleep
1200:pong.c        ****   uart1SendString("+++");
 1231              		.loc 1 1200 0
 1232 060c 9248     		ldr	r0, .L278+32
 1233 060e FFF7FEFF 		bl	uart1SendString
1201:pong.c        ****   osSleep(100);
 1234              		.loc 1 1201 0
 1235 0612 6420     		mov	r0, #100
 1236 0614 FFF7FEFF 		bl	osSleep
1202:pong.c        ****   uart1SendString("AT+BTCAN\r");
 1237              		.loc 1 1202 0
 1238 0618 9048     		ldr	r0, .L278+36
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 47


 1239 061a FFF7FEFF 		bl	uart1SendString
1203:pong.c        ****   osSleep(50);
 1240              		.loc 1 1203 0
 1241 061e 3220     		mov	r0, #50
 1242 0620 FFF7FEFF 		bl	osSleep
1204:pong.c        ****   uart1SendString("AT+BTINQ=6\r");
 1243              		.loc 1 1204 0
 1244 0624 8E48     		ldr	r0, .L278+40
 1245 0626 FFF7FEFF 		bl	uart1SendString
1205:pong.c        **** 
1206:pong.c        ****   //*************************************************************
1207:pong.c        ****   //* Get (receive and interpret) discovered units
1208:pong.c        ****   //*************************************************************
1209:pong.c        ****   timeStamp = ms;
 1246              		.loc 1 1209 0
 1247 062a 8E4B     		ldr	r3, .L278+44
 1248 062c 1A68     		ldr	r2, [r3]
 1249              	.LVL54:
1210:pong.c        ****   done = FALSE;
1211:pong.c        ****   recvPos = 0;
1212:pong.c        ****   foundBt = 0;
1213:pong.c        ****   cnt = 0;
 1250              		.loc 1 1213 0
 1251 062e 251C     		mov	r5, r4
1209:pong.c        ****   timeStamp = ms;
 1252              		.loc 1 1209 0
 1253 0630 2F92     		str	r2, [sp, #188]
 1254              	.LVL55:
1212:pong.c        ****   foundBt = 0;
 1255              		.loc 1 1212 0
 1256 0632 271C     		mov	r7, r4
 1257 0634 77E0     		b	.L73
 1258              	.LVL56:
 1259              	.L88:
1214:pong.c        ****   while((done == FALSE) && ((ms - timeStamp) < 6500))
1215:pong.c        ****   {
1216:pong.c        ****     //check if any character has been received from BT
1217:pong.c        ****     if (uart1GetChar(&rxChar) == TRUE)
 1260              		.loc 1 1217 0
 1261 0636 6846     		mov	r0, sp
 1262 0638 C330     		add	r0, r0, #195
 1263 063a FFF7FEFF 		bl	uart1GetChar
 1264 063e 0026     		mov	r6, #0
 1265 0640 0128     		cmp	r0, #1
 1266 0642 42D1     		bne	.L74
1218:pong.c        ****     {
1219:pong.c        ****       printf("%c", rxChar);
 1267              		.loc 1 1219 0
 1268 0644 C322     		mov	r2, #195
 1269 0646 6A44     		add	r2, r2, sp
 1270 0648 8748     		ldr	r0, .L278+48
 1271 064a 1178     		ldrb	r1, [r2]
 1272              	.LVL57:
 1273 064c FFF7FEFF 		bl	simplePrintf
1220:pong.c        ****       
1221:pong.c        ****       if (rxChar == 0x0a)
 1274              		.loc 1 1221 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 48


 1275 0650 C320     		mov	r0, #195
 1276 0652 6844     		add	r0, r0, sp
 1277              	.LVL58:
 1278 0654 0378     		ldrb	r3, [r0]
 1279 0656 0A2B     		cmp	r3, #10
 1280 0658 2AD1     		bne	.L75
1222:pong.c        ****       {
1223:pong.c        ****         if (recvPos > 0)
 1281              		.loc 1 1223 0
 1282 065a B442     		cmp	r4, r6
 1283 065c 03D0     		beq	.L76
1224:pong.c        ****           recvBuf[recvPos-1] = '\0';
 1284              		.loc 1 1224 0
 1285 065e 31A9     		add	r1, sp, #196
 1286 0660 0B19     		add	r3, r1, r4
 1287 0662 413B     		sub	r3, r3, #65
 1288 0664 1E70     		strb	r6, [r3]
 1289              	.L76:
1225:pong.c        **** 
1226:pong.c        ****         //evaluate received bytes
1227:pong.c        ****         if ((memcmp(recvBuf, "+BTINQ: ", 8) == 0) && (recvPos == 29))
 1290              		.loc 1 1227 0
 1291 0666 21AE     		add	r6, sp, #132
 1292 0668 301C     		mov	r0, r6
 1293 066a 8049     		ldr	r1, .L278+52
 1294 066c 0822     		mov	r2, #8
 1295 066e FFF7FEFF 		bl	memcmp
 1296 0672 0028     		cmp	r0, #0
 1297 0674 14D1     		bne	.L77
 1298 0676 1D2C     		cmp	r4, #29
 1299 0678 12D1     		bne	.L77
1228:pong.c        ****         {
1229:pong.c        ****           if (foundBt < MAX_BT_UNITS)
 1300              		.loc 1 1229 0
 1301 067a 042F     		cmp	r7, #4
 1302 067c 20D8     		bhi	.L206
 513:pong.c        **** playPong(void)
 1303              		.loc 1 513 0
 1304 067e 7449     		ldr	r1, .L278+24
 1305 0680 7A01     		lsl	r2, r7, #5
 1306              		.loc 1 1229 0
 1307 0682 0023     		mov	r3, #0
 513:pong.c        **** playPong(void)
 1308              		.loc 1 513 0
 1309 0684 8A18     		add	r2, r1, r2
 1310              	.L78:
 1311 0686 F018     		add	r0, r6, r3
1230:pong.c        ****           {
1231:pong.c        ****             for(recvPos=0; recvPos<12; recvPos++)
1232:pong.c        ****               foundBtUnits[foundBt].btAddress[recvPos] = recvBuf[recvPos + 8];
 1312              		.loc 1 1232 0
 1313 0688 007A     		ldrb	r0, [r0, #8]
 513:pong.c        **** playPong(void)
 1314              		.loc 1 513 0
 1315 068a D118     		add	r1, r2, r3
 1316              		.loc 1 1232 0
 1317 068c 0133     		add	r3, r3, #1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 49


 1318 068e 4870     		strb	r0, [r1, #1]
1231:pong.c        ****             for(recvPos=0; recvPos<12; recvPos++)
 1319              		.loc 1 1231 0
 1320 0690 0C2B     		cmp	r3, #12
 1321 0692 F8D1     		bne	.L78
1233:pong.c        ****             foundBtUnits[foundBt].btAddress[12] = '\0';
1234:pong.c        **** //            foundBtUnits[foundBt].active = TRUE;
1235:pong.c        ****             foundBt++;
 1322              		.loc 1 1235 0
 1323 0694 0137     		add	r7, r7, #1
1233:pong.c        ****             foundBtUnits[foundBt].btAddress[12] = '\0';
 1324              		.loc 1 1233 0
 1325 0696 0024     		mov	r4, #0
 1326              		.loc 1 1235 0
 1327 0698 3F06     		lsl	r7, r7, #24
1233:pong.c        ****             foundBtUnits[foundBt].btAddress[12] = '\0';
 1328              		.loc 1 1233 0
 1329 069a 5473     		strb	r4, [r2, #13]
 1330              		.loc 1 1235 0
 1331 069c 3F0E     		lsr	r7, r7, #24
 1332              	.LVL59:
 1333 069e 10E0     		b	.L249
 1334              	.LVL60:
 1335              	.L77:
1236:pong.c        **** 
1237:pong.c        ****           }
1238:pong.c        ****         }
1239:pong.c        ****         else if (memcmp(recvBuf, "+BTINQ: COMPLETE", 16) == 0)
 1336              		.loc 1 1239 0
 1337 06a0 21A8     		add	r0, sp, #132
 1338 06a2 7349     		ldr	r1, .L278+56
 1339 06a4 1022     		mov	r2, #16
 1340 06a6 FFF7FEFF 		bl	memcmp
 1341 06aa 0028     		cmp	r0, #0
 1342 06ac 0BD0     		beq	.L207
 1343 06ae 07E0     		b	.L206
 1344              	.L75:
1240:pong.c        ****         {
1241:pong.c        ****           done = TRUE;
1242:pong.c        ****         }
1243:pong.c        ****         recvPos = 0;
1244:pong.c        ****       }
1245:pong.c        ****       else if (recvPos < RECV_BUF_LEN)
 1345              		.loc 1 1245 0
 1346 06b0 272C     		cmp	r4, #39
 1347 06b2 0AD8     		bhi	.L74
1246:pong.c        ****         recvBuf[recvPos++] = rxChar;
 1348              		.loc 1 1246 0
 1349 06b4 21AA     		add	r2, sp, #132
 1350 06b6 1355     		strb	r3, [r2, r4]
 1351 06b8 0134     		add	r4, r4, #1
 1352 06ba 2406     		lsl	r4, r4, #24
 1353 06bc 240E     		lsr	r4, r4, #24
 1354              	.LVL61:
 1355 06be 04E0     		b	.L74
 1356              	.LVL62:
 1357              	.L206:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 50


1243:pong.c        ****         recvPos = 0;
 1358              		.loc 1 1243 0
 1359 06c0 0024     		mov	r4, #0
 1360              	.L249:
1229:pong.c        ****           if (foundBt < MAX_BT_UNITS)
 1361              		.loc 1 1229 0
 1362 06c2 261C     		mov	r6, r4
 1363 06c4 01E0     		b	.L74
 1364              	.L207:
1243:pong.c        ****         recvPos = 0;
 1365              		.loc 1 1243 0
 1366 06c6 041C     		mov	r4, r0
1241:pong.c        ****           done = TRUE;
 1367              		.loc 1 1241 0
 1368 06c8 0126     		mov	r6, #1
 1369              	.L74:
 1370              	.LVL63:
1247:pong.c        ****     }
1248:pong.c        ****     osSleep(1);
 1371              		.loc 1 1248 0
 1372 06ca 0120     		mov	r0, #1
 1373 06cc FFF7FEFF 		bl	osSleep
1249:pong.c        **** 
1250:pong.c        ****     //print activity indicator
1251:pong.c        ****     lcdGotoxy(74,16);
 1374              		.loc 1 1251 0
 1375 06d0 4A20     		mov	r0, #74
 1376 06d2 1021     		mov	r1, #16
 1377 06d4 FFF7FEFF 		bl	lcdGotoxy
1252:pong.c        ****     lcdColor(0x00,0xfd);
 1378              		.loc 1 1252 0
 1379 06d8 0020     		mov	r0, #0
 1380 06da FD21     		mov	r1, #253
 1381 06dc FFF7FEFF 		bl	lcdColor
1253:pong.c        ****     switch(cnt % 150)
 1382              		.loc 1 1253 0
 1383 06e0 281C     		mov	r0, r5
 1384 06e2 9621     		mov	r1, #150
 1385 06e4 FFF7FEFF 		bl	__umodsi3
 1386 06e8 3228     		cmp	r0, #50
 1387 06ea 10D0     		beq	.L82
 1388 06ec 04D8     		bhi	.L86
 1389 06ee 0028     		cmp	r0, #0
 1390 06f0 09D0     		beq	.L80
 1391 06f2 1928     		cmp	r0, #25
 1392 06f4 14D1     		bne	.L79
 1393 06f6 08E0     		b	.L266
 1394              	.L86:
 1395 06f8 6428     		cmp	r0, #100
 1396 06fa 0CD0     		beq	.L84
 1397 06fc 7D28     		cmp	r0, #125
 1398 06fe 0CD0     		beq	.L85
 1399 0700 4B28     		cmp	r0, #75
 1400 0702 0DD1     		bne	.L79
 1401 0704 05E0     		b	.L267
 1402              	.L80:
1254:pong.c        ****     {
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 51


1255:pong.c        ****       case   0: lcdPuts("   ");break;
 1403              		.loc 1 1255 0
 1404 0706 5B48     		ldr	r0, .L278+60
 1405 0708 08E0     		b	.L250
 1406              	.L266:
1256:pong.c        ****       case  25: lcdPuts(".  ");break;
 1407              		.loc 1 1256 0
 1408 070a 5B48     		ldr	r0, .L278+64
 1409 070c 06E0     		b	.L250
 1410              	.L82:
1257:pong.c        ****       case  50: lcdPuts(".. ");break;
 1411              		.loc 1 1257 0
 1412 070e 5B48     		ldr	r0, .L278+68
 1413 0710 04E0     		b	.L250
 1414              	.L267:
1258:pong.c        ****       case  75: lcdPuts("...");break;
 1415              		.loc 1 1258 0
 1416 0712 5B48     		ldr	r0, .L278+72
 1417 0714 02E0     		b	.L250
 1418              	.L84:
1259:pong.c        ****       case 100: lcdPuts(" ..");break;
 1419              		.loc 1 1259 0
 1420 0716 5B48     		ldr	r0, .L278+76
 1421 0718 00E0     		b	.L250
 1422              	.L85:
1260:pong.c        ****       case 125: lcdPuts("  .");break;
 1423              		.loc 1 1260 0
 1424 071a 5B48     		ldr	r0, .L278+80
 1425              	.L250:
 1426 071c FFF7FEFF 		bl	lcdPuts
 1427              	.L79:
1261:pong.c        ****       default: break;
1262:pong.c        ****     }
1263:pong.c        ****     cnt++;
 1428              		.loc 1 1263 0
 1429 0720 0135     		add	r5, r5, #1
 1430              	.LVL64:
1214:pong.c        ****   while((done == FALSE) && ((ms - timeStamp) < 6500))
 1431              		.loc 1 1214 0
 1432 0722 002E     		cmp	r6, #0
 1433 0724 07D1     		bne	.L87
 1434              	.LVL65:
 1435              	.L73:
 1436 0726 4F4E     		ldr	r6, .L278+44
 1437 0728 5848     		ldr	r0, .L278+84
 1438 072a 3268     		ldr	r2, [r6]
 1439 072c 2F9B     		ldr	r3, [sp, #188]
 1440 072e D31A     		sub	r3, r2, r3
 1441 0730 8342     		cmp	r3, r0
 1442 0732 00D8     		bhi	.LCB1211
 1443 0734 7FE7     		b	.L88	@long jump
 1444              	.LCB1211:
 1445              	.L87:
1264:pong.c        ****   }
1265:pong.c        **** 
1266:pong.c        ****   //*************************************************************
1267:pong.c        ****   //* Get name of discovered bt units
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 52


1268:pong.c        ****   //*************************************************************
1269:pong.c        ****   for(i=0; i<foundBt; i++)
1270:pong.c        ****   {
1271:pong.c        ****     uart1SendString("AT+BTSDP=");
1272:pong.c        ****     uart1SendString(foundBtUnits[i].btAddress);
1273:pong.c        ****     uart1SendString("\r");
1274:pong.c        **** 
1275:pong.c        ****     timeStamp = ms;
1276:pong.c        ****     done = FALSE;
1277:pong.c        ****     recvPos = 0;
 1446              		.loc 1 1277 0
 1447 0736 0024     		mov	r4, #0
 1448 0738 CCE0     		b	.L253
 1449              	.LVL66:
 1450              	.L104:
1271:pong.c        ****     uart1SendString("AT+BTSDP=");
 1451              		.loc 1 1271 0
 1452 073a 5548     		ldr	r0, .L278+88
 1453 073c FFF7FEFF 		bl	uart1SendString
1272:pong.c        ****     uart1SendString(foundBtUnits[i].btAddress);
 1454              		.loc 1 1272 0
 1455 0740 089E     		ldr	r6, [sp, #32]
 1456 0742 434C     		ldr	r4, .L278+24
 1457 0744 7001     		lsl	r0, r6, #5
 1458 0746 2018     		add	r0, r4, r0
 1459 0748 0130     		add	r0, r0, #1
 1460 074a FFF7FEFF 		bl	uart1SendString
1273:pong.c        ****     uart1SendString("\r");
 1461              		.loc 1 1273 0
 1462 074e 5148     		ldr	r0, .L278+92
 1463 0750 FFF7FEFF 		bl	uart1SendString
1275:pong.c        ****     timeStamp = ms;
 1464              		.loc 1 1275 0
 1465 0754 434B     		ldr	r3, .L278+44
 1466 0756 1A68     		ldr	r2, [r3]
 1467              	.LVL67:
 1468              		.loc 1 1277 0
 1469 0758 0024     		mov	r4, #0
1275:pong.c        ****     timeStamp = ms;
 1470              		.loc 1 1275 0
 1471 075a 2F92     		str	r2, [sp, #188]
 1472              	.LVL68:
 1473 075c B0E0     		b	.L90
 1474              	.LVL69:
 1475              	.L103:
1278:pong.c        **** 
1279:pong.c        ****     while((done == FALSE) && ((ms - timeStamp) < 100000))
1280:pong.c        ****     {
1281:pong.c        ****       //check if any character has been received from BT
1282:pong.c        ****       if (uart1GetChar(&rxChar) == TRUE)
 1476              		.loc 1 1282 0
 1477 075e 6846     		mov	r0, sp
 1478 0760 C330     		add	r0, r0, #195
 1479 0762 FFF7FEFF 		bl	uart1GetChar
 1480 0766 0026     		mov	r6, #0
 1481 0768 0128     		cmp	r0, #1
 1482 076a 41D1     		bne	.L91
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 53


1283:pong.c        ****       {
1284:pong.c        ****         printf("%c", rxChar);
 1483              		.loc 1 1284 0
 1484 076c C320     		mov	r0, #195
 1485 076e 6844     		add	r0, r0, sp
 1486 0770 0178     		ldrb	r1, [r0]
 1487              	.LVL70:
 1488 0772 3D48     		ldr	r0, .L278+48
 1489 0774 FFF7FEFF 		bl	simplePrintf
1285:pong.c        ****       
1286:pong.c        ****         if (rxChar == 0x0a)
 1490              		.loc 1 1286 0
 1491 0778 C321     		mov	r1, #195
 1492 077a 6944     		add	r1, r1, sp
 1493              	.LVL71:
 1494 077c 0B78     		ldrb	r3, [r1]
 1495 077e 0A2B     		cmp	r3, #10
 1496 0780 29D1     		bne	.L92
1287:pong.c        ****         {
1288:pong.c        ****           if (recvPos > 0)
 1497              		.loc 1 1288 0
 1498 0782 B442     		cmp	r4, r6
 1499 0784 03D0     		beq	.L93
1289:pong.c        ****             recvBuf[recvPos-1] = '\0';
 1500              		.loc 1 1289 0
 1501 0786 31AA     		add	r2, sp, #196
 1502 0788 1419     		add	r4, r2, r4
 1503 078a 413C     		sub	r4, r4, #65
 1504 078c 2670     		strb	r6, [r4]
 1505              	.L93:
1290:pong.c        **** 
1291:pong.c        ****           //evaluate received bytes
1292:pong.c        ****           if (memcmp(recvBuf, "+BTSDP: COMPLETE", 16) == 0)
 1506              		.loc 1 1292 0
 1507 078e 21A8     		add	r0, sp, #132
 1508 0790 4149     		ldr	r1, .L278+96
 1509 0792 1022     		mov	r2, #16
 1510 0794 FFF7FEFF 		bl	memcmp
 1511 0798 0028     		cmp	r0, #0
 1512 079a 24D0     		beq	.L210
1293:pong.c        ****             done = TRUE;
1294:pong.c        **** 
1295:pong.c        ****           else if (memcmp(recvBuf, "+BTSDP: ", 8) == 0)
 1513              		.loc 1 1295 0
 1514 079c 21A8     		add	r0, sp, #132
 1515 079e 3F49     		ldr	r1, .L278+100
 1516 07a0 0822     		mov	r2, #8
 1517 07a2 FFF7FEFF 		bl	memcmp
1296:pong.c        ****           {
1297:pong.c        ****             tU8 *pStr;
1298:pong.c        ****             
1299:pong.c        ****             //seach for service name
1300:pong.c        ****             pStr = strchr(&recvBuf[10], '\"');
1301:pong.c        ****             if (pStr != NULL)
1302:pong.c        ****             {
1303:pong.c        ****               pStr++;
1304:pong.c        **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 54


1305:pong.c        ****               //get string (to '"')
1306:pong.c        ****               if (0 == strncmp("PingPongServer", pStr, 14))
1307:pong.c        ****                 foundBtUnits[i].active = TRUE;
1308:pong.c        ****             }
1309:pong.c        ****           }
1310:pong.c        ****           recvPos = 0;
 1518              		.loc 1 1310 0
 1519 07a6 0024     		mov	r4, #0
1295:pong.c        ****           else if (memcmp(recvBuf, "+BTSDP: ", 8) == 0)
 1520              		.loc 1 1295 0
 1521 07a8 061E     		sub	r6, r0, #0
 1522 07aa 20D1     		bne	.L251
 1523              	.LBB67:
1300:pong.c        ****             pStr = strchr(&recvBuf[10], '\"');
 1524              		.loc 1 1300 0
 1525 07ac 6846     		mov	r0, sp
 1526 07ae 8E30     		add	r0, r0, #142
 1527 07b0 2221     		mov	r1, #34
 1528 07b2 FFF7FEFF 		bl	strchr
 1529              	.LVL72:
1301:pong.c        ****             if (pStr != NULL)
 1530              		.loc 1 1301 0
 1531 07b6 0028     		cmp	r0, #0
 1532 07b8 18D0     		beq	.L212
 1533              	.LVL73:
1303:pong.c        ****               pStr++;
 1534              		.loc 1 1303 0
 1535 07ba 411C     		add	r1, r0, #1
1306:pong.c        ****               if (0 == strncmp("PingPongServer", pStr, 14))
 1536              		.loc 1 1306 0
 1537 07bc 0E22     		mov	r2, #14
 1538 07be 3848     		ldr	r0, .L278+104
 1539              	.LVL74:
 1540 07c0 FFF7FEFF 		bl	strncmp
 1541              	.LVL75:
 1542              		.loc 1 1310 0
 1543 07c4 341C     		mov	r4, r6
1306:pong.c        ****               if (0 == strncmp("PingPongServer", pStr, 14))
 1544              		.loc 1 1306 0
 1545 07c6 0028     		cmp	r0, #0
 1546 07c8 11D1     		bne	.L251
 513:pong.c        **** playPong(void)
 1547              		.loc 1 513 0
 1548 07ca 089C     		ldr	r4, [sp, #32]
1307:pong.c        ****                 foundBtUnits[i].active = TRUE;
 1549              		.loc 1 1307 0
 1550 07cc 204B     		ldr	r3, .L278+24
 513:pong.c        **** playPong(void)
 1551              		.loc 1 513 0
 1552 07ce 6201     		lsl	r2, r4, #5
1307:pong.c        ****                 foundBtUnits[i].active = TRUE;
 1553              		.loc 1 1307 0
 1554 07d0 0121     		mov	r1, #1
 1555 07d2 D154     		strb	r1, [r2, r3]
 1556 07d4 0AE0     		b	.L212
 1557              	.L92:
 1558              	.LBE67:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 55


1311:pong.c        ****         }
1312:pong.c        ****         else if (recvPos < RECV_BUF_LEN)
 1559              		.loc 1 1312 0
 1560 07d6 272C     		cmp	r4, #39
 1561 07d8 0AD8     		bhi	.L91
1313:pong.c        ****           recvBuf[recvPos++] = rxChar;
 1562              		.loc 1 1313 0
 1563 07da 21AA     		add	r2, sp, #132
 1564 07dc 1355     		strb	r3, [r2, r4]
 1565 07de 0134     		add	r4, r4, #1
 1566 07e0 2406     		lsl	r4, r4, #24
 1567 07e2 240E     		lsr	r4, r4, #24
 1568              	.LVL76:
 1569 07e4 04E0     		b	.L91
 1570              	.LVL77:
 1571              	.L210:
1310:pong.c        ****           recvPos = 0;
 1572              		.loc 1 1310 0
 1573 07e6 041C     		mov	r4, r0
1293:pong.c        ****             done = TRUE;
 1574              		.loc 1 1293 0
 1575 07e8 0126     		mov	r6, #1
 1576 07ea 01E0     		b	.L91
 1577              	.L212:
 1578              	.LBB68:
1310:pong.c        ****           recvPos = 0;
 1579              		.loc 1 1310 0
 1580 07ec 041C     		mov	r4, r0
 1581              	.L251:
1306:pong.c        ****               if (0 == strncmp("PingPongServer", pStr, 14))
 1582              		.loc 1 1306 0
 1583 07ee 261C     		mov	r6, r4
 1584              	.L91:
 1585              	.LVL78:
 1586              	.LBE68:
1314:pong.c        ****       }
1315:pong.c        ****       osSleep(1);
 1587              		.loc 1 1315 0
 1588 07f0 0120     		mov	r0, #1
 1589 07f2 FFF7FEFF 		bl	osSleep
1316:pong.c        ****       //print activity indicator
1317:pong.c        ****       lcdGotoxy(74,16);
 1590              		.loc 1 1317 0
 1591 07f6 4A20     		mov	r0, #74
 1592 07f8 1021     		mov	r1, #16
 1593 07fa FFF7FEFF 		bl	lcdGotoxy
1318:pong.c        ****       lcdColor(0x00,0xfd);
 1594              		.loc 1 1318 0
 1595 07fe 0020     		mov	r0, #0
 1596 0800 FD21     		mov	r1, #253
 1597 0802 FFF7FEFF 		bl	lcdColor
1319:pong.c        ****       switch(cnt % 150)
 1598              		.loc 1 1319 0
 1599 0806 281C     		mov	r0, r5
 1600 0808 9621     		mov	r1, #150
 1601 080a FFF7FEFF 		bl	__umodsi3
 1602 080e 3228     		cmp	r0, #50
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 56


 1603 0810 10D0     		beq	.L97
 1604 0812 04D8     		bhi	.L101
 1605 0814 0028     		cmp	r0, #0
 1606 0816 09D0     		beq	.L95
 1607 0818 1928     		cmp	r0, #25
 1608 081a 4ED1     		bne	.L94
 1609 081c 08E0     		b	.L268
 1610              	.L101:
 1611 081e 6428     		cmp	r0, #100
 1612 0820 46D0     		beq	.L99
 1613 0822 7D28     		cmp	r0, #125
 1614 0824 46D0     		beq	.L100
 1615 0826 4B28     		cmp	r0, #75
 1616 0828 47D1     		bne	.L94
 1617 082a 3FE0     		b	.L269
 1618              	.L95:
1320:pong.c        ****       {
1321:pong.c        ****         case   0: lcdPuts("   ");break;
 1619              		.loc 1 1321 0
 1620 082c 1148     		ldr	r0, .L278+60
 1621 082e 42E0     		b	.L252
 1622              	.L268:
1322:pong.c        ****         case  25: lcdPuts("*  ");break;
 1623              		.loc 1 1322 0
 1624 0830 1C48     		ldr	r0, .L278+108
 1625 0832 40E0     		b	.L252
 1626              	.L97:
1323:pong.c        ****         case  50: lcdPuts("** ");break;
 1627              		.loc 1 1323 0
 1628 0834 1C48     		ldr	r0, .L278+112
 1629 0836 3EE0     		b	.L252
 1630              	.L279:
 1631              		.align	2
 1632              	.L278:
 1633 0838 00000000 		.word	.LANCHOR2
 1634 083c 35000000 		.word	.LC48
 1635 0840 43000000 		.word	.LC50
 1636 0844 51000000 		.word	.LC52
 1637 0848 27000000 		.word	.LC46
 1638 084c 80000000 		.word	.LANCHOR3
 1639 0850 00000000 		.word	.LANCHOR1
 1640 0854 5F000000 		.word	.LC55
 1641 0858 67000000 		.word	.LC57
 1642 085c 6B000000 		.word	.LC59
 1643 0860 75000000 		.word	.LC61
 1644 0864 00000000 		.word	ms
 1645 0868 81000000 		.word	.LC64
 1646 086c 84000000 		.word	.LC66
 1647 0870 8D000000 		.word	.LC68
 1648 0874 9E000000 		.word	.LC70
 1649 0878 A2000000 		.word	.LC72
 1650 087c A6000000 		.word	.LC74
 1651 0880 AA000000 		.word	.LC76
 1652 0884 AE000000 		.word	.LC78
 1653 0888 B2000000 		.word	.LC80
 1654 088c 63190000 		.word	6499
 1655 0890 B6000000 		.word	.LC82
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 57


 1656 0894 C0000000 		.word	.LC84
 1657 0898 C2000000 		.word	.LC86
 1658 089c D3000000 		.word	.LC88
 1659 08a0 DC000000 		.word	.LC90
 1660 08a4 EB000000 		.word	.LC92
 1661 08a8 EF000000 		.word	.LC94
 1662              	.L269:
1324:pong.c        ****         case  75: lcdPuts("***");break;
 1663              		.loc 1 1324 0
 1664 08ac C448     		ldr	r0, .L280
 1665 08ae 02E0     		b	.L252
 1666              	.L99:
1325:pong.c        ****         case 100: lcdPuts(" **");break;
 1667              		.loc 1 1325 0
 1668 08b0 C448     		ldr	r0, .L280+4
 1669 08b2 00E0     		b	.L252
 1670              	.L100:
1326:pong.c        ****         case 125: lcdPuts("  *");break;
 1671              		.loc 1 1326 0
 1672 08b4 C448     		ldr	r0, .L280+8
 1673              	.L252:
 1674 08b6 FFF7FEFF 		bl	lcdPuts
 1675              	.L94:
1327:pong.c        ****         default: break;
1328:pong.c        ****       }
1329:pong.c        ****       cnt++;
 1676              		.loc 1 1329 0
 1677 08ba 0135     		add	r5, r5, #1
 1678              	.LVL79:
1279:pong.c        ****     while((done == FALSE) && ((ms - timeStamp) < 100000))
 1679              		.loc 1 1279 0
 1680 08bc 002E     		cmp	r6, #0
 1681 08be 07D1     		bne	.L102
 1682              	.LVL80:
 1683              	.L90:
 1684 08c0 C24E     		ldr	r6, .L280+12
 1685 08c2 C348     		ldr	r0, .L280+16
 1686 08c4 3268     		ldr	r2, [r6]
 1687 08c6 2F9B     		ldr	r3, [sp, #188]
 1688 08c8 D31A     		sub	r3, r2, r3
 1689 08ca 8342     		cmp	r3, r0
 1690 08cc 00D8     		bhi	.LCB1465
 1691 08ce 46E7     		b	.L103	@long jump
 1692              	.LCB1465:
 1693              	.L102:
 1694 08d0 089C     		ldr	r4, [sp, #32]
 1695 08d2 0134     		add	r4, r4, #1
 1696              	.LVL81:
 1697              	.L253:
 1698 08d4 0894     		str	r4, [sp, #32]
 1699              	.LVL82:
1269:pong.c        ****   for(i=0; i<foundBt; i++)
 1700              		.loc 1 1269 0
 1701 08d6 089E     		ldr	r6, [sp, #32]
 1702 08d8 3306     		lsl	r3, r6, #24
 1703 08da 1B0E     		lsr	r3, r3, #24
 1704 08dc BB42     		cmp	r3, r7
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 58


 1705 08de 00D2     		bcs	.LCB1479
 1706 08e0 2BE7     		b	.L104	@long jump
 1707              	.LCB1479:
1330:pong.c        ****     }
1331:pong.c        ****   }
1332:pong.c        **** 
1333:pong.c        ****   lcdGotoxy(74,16);
 1708              		.loc 1 1333 0
 1709 08e2 4A20     		mov	r0, #74
 1710 08e4 1021     		mov	r1, #16
 1711 08e6 FFF7FEFF 		bl	lcdGotoxy
1334:pong.c        ****   lcdColor(0x00,0xfd);
 1712              		.loc 1 1334 0
 1713 08ea FD21     		mov	r1, #253
 1714 08ec 0020     		mov	r0, #0
 1715 08ee FFF7FEFF 		bl	lcdColor
1335:pong.c        ****   lcdPuts("-done");
 1716              		.loc 1 1335 0
 1717 08f2 B848     		ldr	r0, .L280+20
 1718 08f4 FFF7FEFF 		bl	lcdPuts
 1719              	.LVL83:
1336:pong.c        **** 
1337:pong.c        ****   //*************************************************************
1338:pong.c        ****   //* Handle user key inputs (move between discovered units)
1339:pong.c        ****   //*************************************************************
1340:pong.c        ****   done = FALSE;
1341:pong.c        ****   cursorPos = 0;
1342:pong.c        ****   drawBtsFound(cursorPos);
 1720              		.loc 1 1342 0
 1721 08f8 0020     		mov	r0, #0
 1722 08fa FFF7BDFB 		bl	drawBtsFound
1341:pong.c        ****   cursorPos = 0;
 1723              		.loc 1 1341 0
 1724 08fe 0025     		mov	r5, #0
 1725              	.LVL84:
 1726              	.L109:
1343:pong.c        ****   while(done == FALSE)
1344:pong.c        ****   {
1345:pong.c        ****     anyKey = checkKey();
 1727              		.loc 1 1345 0
 1728 0900 FFF7FEFF 		bl	checkKey
 1729              	.LVL85:
1346:pong.c        ****     if (anyKey != KEY_NOTHING)
 1730              		.loc 1 1346 0
 1731 0904 041E     		sub	r4, r0, #0
 1732 0906 18D0     		beq	.L105
1347:pong.c        ****     {
1348:pong.c        ****       //exit and save new name
1349:pong.c        ****       if (anyKey == KEY_CENTER)
1350:pong.c        ****       {
1351:pong.c        ****         done = TRUE;
 1733              		.loc 1 1351 0
 1734 0908 0124     		mov	r4, #1
1349:pong.c        ****       if (anyKey == KEY_CENTER)
 1735              		.loc 1 1349 0
 1736 090a 1028     		cmp	r0, #16
 1737 090c 15D0     		beq	.L105
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 59


1352:pong.c        ****       }
1353:pong.c        **** 
1354:pong.c        ****       //
1355:pong.c        ****       else if (anyKey == KEY_UP)
 1738              		.loc 1 1355 0
 1739 090e A042     		cmp	r0, r4
 1740 0910 05D1     		bne	.L106
1356:pong.c        ****       {
1357:pong.c        ****         if (cursorPos > 0)
 1741              		.loc 1 1357 0
 1742 0912 002D     		cmp	r5, #0
 1743 0914 01D0     		beq	.L217
1358:pong.c        ****           cursorPos--;
 1744              		.loc 1 1358 0
 1745 0916 013D     		sub	r5, r5, #1
 1746 0918 07E0     		b	.L263
 1747              	.L217:
1359:pong.c        ****         else
1360:pong.c        ****           cursorPos = MAX_BT_UNITS-1;
 1748              		.loc 1 1360 0
 1749 091a 0425     		mov	r5, #4
 1750              	.LVL86:
 1751 091c 09E0     		b	.L108
 1752              	.LVL87:
 1753              	.L106:
1361:pong.c        ****         drawBtsFound(cursorPos);
1362:pong.c        ****       }
1363:pong.c        ****       
1364:pong.c        ****       //
1365:pong.c        ****       else if (anyKey == KEY_DOWN)
 1754              		.loc 1 1365 0
 1755 091e 0024     		mov	r4, #0
 1756 0920 0428     		cmp	r0, #4
 1757 0922 0AD1     		bne	.L105
1366:pong.c        ****       {
1367:pong.c        ****         if (cursorPos < MAX_BT_UNITS-1)
 1758              		.loc 1 1367 0
 1759 0924 042D     		cmp	r5, #4
 1760 0926 03D0     		beq	.L219
1368:pong.c        ****           cursorPos++;
 1761              		.loc 1 1368 0
 1762 0928 0135     		add	r5, r5, #1
 1763              	.L263:
 1764 092a 2D06     		lsl	r5, r5, #24
 1765 092c 2D0E     		lsr	r5, r5, #24
 1766              	.LVL88:
 1767 092e 00E0     		b	.L108
 1768              	.LVL89:
 1769              	.L219:
1369:pong.c        ****         else
1370:pong.c        ****           cursorPos = 0;
 1770              		.loc 1 1370 0
 1771 0930 251C     		mov	r5, r4
 1772              	.L108:
 1773              	.LVL90:
1371:pong.c        ****           drawBtsFound(cursorPos);
 1774              		.loc 1 1371 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 60


 1775 0932 281C     		mov	r0, r5
 1776              	.LVL91:
 1777 0934 FFF7A0FB 		bl	drawBtsFound
 1778 0938 0024     		mov	r4, #0
 1779              	.LVL92:
 1780              	.L105:
1372:pong.c        ****       }
1373:pong.c        ****     }
1374:pong.c        ****     osSleep(1);
 1781              		.loc 1 1374 0
 1782 093a 0120     		mov	r0, #1
 1783 093c FFF7FEFF 		bl	osSleep
1343:pong.c        ****   while(done == FALSE)
 1784              		.loc 1 1343 0
 1785 0940 002C     		cmp	r4, #0
 1786 0942 DDD0     		beq	.L109
1375:pong.c        ****   }
1376:pong.c        ****   
1377:pong.c        ****   if (foundBtUnits[cursorPos].active == TRUE)
 1787              		.loc 1 1377 0
 1788 0944 A449     		ldr	r1, .L280+24
 1789 0946 6D01     		lsl	r5, r5, #5
 1790              	.LVL93:
 1791 0948 6B5C     		ldrb	r3, [r5, r1]
 582:pong.c        ****       done = TRUE;
 1792              		.loc 1 582 0
 1793 094a 0127     		mov	r7, #1
 1794 094c 0897     		str	r7, [sp, #32]
 1795              		.loc 1 1377 0
 1796 094e BB42     		cmp	r3, r7
 1797 0950 01D0     		beq	.LCB1566
 1798 0952 00F00AFE 		bl	.L242	@far jump
 1799              	.LCB1566:
1378:pong.c        ****   {
1379:pong.c        ****     strcpy(pBtAddr, foundBtUnits[cursorPos].btAddress);
 1800              		.loc 1 1379 0
 1801 0956 4919     		add	r1, r1, r5
 1802 0958 C919     		add	r1, r1, r7
 1803 095a 2BA8     		add	r0, sp, #172
 1804 095c FFF7FEFF 		bl	strcpy
 1805              	.LBE66:
 1806              	.LBE65:
 560:pong.c        ****       lcdRect(2, 16, 125, 84, 0x6d);
 1807              		.loc 1 560 0
 1808 0960 6D23     		mov	r3, #109
 1809 0962 0093     		str	r3, [sp]
 1810 0964 0220     		mov	r0, #2
 1811 0966 1021     		mov	r1, #16
 1812 0968 7D22     		mov	r2, #125
 1813 096a 5423     		mov	r3, #84
 1814 096c FFF7FEFF 		bl	lcdRect
 561:pong.c        ****       lcdRect(4, 18, 121, 80, 0x00);
 1815              		.loc 1 561 0
 1816 0970 0026     		mov	r6, #0
 1817 0972 5023     		mov	r3, #80
 1818 0974 7922     		mov	r2, #121
 1819 0976 0420     		mov	r0, #4
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 61


 1820 0978 1221     		mov	r1, #18
 1821 097a 0096     		str	r6, [sp]
 1822 097c FFF7FEFF 		bl	lcdRect
 562:pong.c        ****       lcdColor(0x00,0xfd);
 1823              		.loc 1 562 0
 1824 0980 301C     		mov	r0, r6
 1825 0982 FD21     		mov	r1, #253
 1826 0984 FFF7FEFF 		bl	lcdColor
 563:pong.c        ****       lcdGotoxy(8,18);
 1827              		.loc 1 563 0
 1828 0988 1221     		mov	r1, #18
 1829 098a 0820     		mov	r0, #8
 1830 098c FFF7FEFF 		bl	lcdGotoxy
 564:pong.c        ****       lcdPuts("Connecting");
 1831              		.loc 1 564 0
 1832 0990 9248     		ldr	r0, .L280+28
 1833 0992 FFF7FEFF 		bl	lcdPuts
 1834              	.LVL94:
 1835              	.LBB69:
 1836              	.LBB70:
 862:pong.c        ****   osSleep(100);
 1837              		.loc 1 862 0
 1838 0996 6420     		mov	r0, #100
 1839 0998 FFF7FEFF 		bl	osSleep
 863:pong.c        ****   uart1SendString("+++");
 1840              		.loc 1 863 0
 1841 099c 9048     		ldr	r0, .L280+32
 1842 099e FFF7FEFF 		bl	uart1SendString
 864:pong.c        ****   osSleep(100);
 1843              		.loc 1 864 0
 1844 09a2 6420     		mov	r0, #100
 1845 09a4 FFF7FEFF 		bl	osSleep
 865:pong.c        ****   uart1SendString("AT+BTCAN\r");
 1846              		.loc 1 865 0
 1847 09a8 8E48     		ldr	r0, .L280+36
 1848 09aa FFF7FEFF 		bl	uart1SendString
 866:pong.c        ****   osSleep(50);
 1849              		.loc 1 866 0
 1850 09ae 3220     		mov	r0, #50
 1851 09b0 FFF7FEFF 		bl	osSleep
 867:pong.c        ****   uart1SendString("AT+BTCLT=\"");
 1852              		.loc 1 867 0
 1853 09b4 8C48     		ldr	r0, .L280+40
 1854 09b6 FFF7FEFF 		bl	uart1SendString
 868:pong.c        ****   uart1SendString(pBtAddr);
 1855              		.loc 1 868 0
 1856 09ba 2BA8     		add	r0, sp, #172
 1857 09bc FFF7FEFF 		bl	uart1SendString
 869:pong.c        ****   uart1SendString("\",20,3\r");
 1858              		.loc 1 869 0
 1859 09c0 8A48     		ldr	r0, .L280+44
 1860 09c2 FFF7FEFF 		bl	uart1SendString
 870:pong.c        ****   osSleep(100);
 1861              		.loc 1 870 0
 1862 09c6 6420     		mov	r0, #100
 1863 09c8 FFF7FEFF 		bl	osSleep
 873:pong.c        ****   timeStamp = ms;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 62


 1864              		.loc 1 873 0
 1865 09cc 7F4B     		ldr	r3, .L280+12
 875:pong.c        ****   recvPos = 0;
 1866              		.loc 1 875 0
 1867 09ce 884F     		ldr	r7, .L280+48
 873:pong.c        ****   timeStamp = ms;
 1868              		.loc 1 873 0
 1869 09d0 1B68     		ldr	r3, [r3]
 1870              	.LVL95:
 1871 09d2 2F93     		str	r3, [sp, #188]
 1872              	.LVL96:
 875:pong.c        ****   recvPos = 0;
 1873              		.loc 1 875 0
 1874 09d4 3B1C     		mov	r3, r7
 1875              	.LVL97:
 1876 09d6 4933     		add	r3, r3, #73
 1877 09d8 1E70     		strb	r6, [r3]
 1878 09da 67E0     		b	.L110
 1879              	.LVL98:
 1880              	.L126:
 879:pong.c        ****     if (uart1GetChar(&rxChar) == TRUE)
 1881              		.loc 1 879 0
 1882 09dc 6D46     		mov	r5, sp
 1883 09de C335     		add	r5, r5, #195
 1884 09e0 281C     		mov	r0, r5
 1885 09e2 FFF7FEFF 		bl	uart1GetChar
 1886 09e6 0024     		mov	r4, #0
 1887 09e8 0128     		cmp	r0, #1
 1888 09ea 31D1     		bne	.L111
 881:pong.c        ****       printf("%c", rxChar);
 1889              		.loc 1 881 0
 1890 09ec 2978     		ldrb	r1, [r5]
 1891              	.LVL99:
 1892 09ee 8148     		ldr	r0, .L280+52
 1893 09f0 FFF7FEFF 		bl	simplePrintf
 1894              	.LVL100:
 883:pong.c        ****       if (rxChar == 0x0a)
 1895              		.loc 1 883 0
 1896 09f4 2A78     		ldrb	r2, [r5]
 1897 09f6 0A2A     		cmp	r2, #10
 1898 09f8 21D1     		bne	.L112
 885:pong.c        ****         if (recvPos > 0)
 1899              		.loc 1 885 0
 1900 09fa 7F48     		ldr	r0, .L280+56
 1901 09fc 0578     		ldrb	r5, [r0]
 1902 09fe A542     		cmp	r5, r4
 1903 0a00 02D0     		beq	.L113
 886:pong.c        ****           recvBuf[recvPos-1] = '\0';
 1904              		.loc 1 886 0
 1905 0a02 7B19     		add	r3, r7, r5
 1906 0a04 2033     		add	r3, r3, #32
 1907 0a06 1C70     		strb	r4, [r3]
 1908              	.L113:
 889:pong.c        ****         if ((memcmp(recvBuf, "CONNECT ", 8) == 0) && (recvPos == 21))
 1909              		.loc 1 889 0
 1910 0a08 381C     		mov	r0, r7
 1911 0a0a 2130     		add	r0, r0, #33
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 63


 1912 0a0c 7B49     		ldr	r1, .L280+60
 1913 0a0e 0822     		mov	r2, #8
 1914 0a10 FFF7FEFF 		bl	memcmp
 1915 0a14 0028     		cmp	r0, #0
 1916 0a16 01D1     		bne	.L114
 1917 0a18 152D     		cmp	r5, #21
 1918 0a1a 0AD0     		beq	.L222
 1919              	.L114:
 893:pong.c        ****         else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
 1920              		.loc 1 893 0
 1921 0a1c 7448     		ldr	r0, .L280+48
 1922 0a1e 7849     		ldr	r1, .L280+64
 1923 0a20 2130     		add	r0, r0, #33
 1924 0a22 0A22     		mov	r2, #10
 1925 0a24 FFF7FEFF 		bl	memcmp
 1926 0a28 0028     		cmp	r0, #0
 1927 0a2a 00D1     		bne	.LCB1680
 1928 0a2c B3E0     		b	.L116	@long jump
 1929              	.LCB1680:
 1930 0a2e 0024     		mov	r4, #0
 1931 0a30 00E0     		b	.L115
 1932              	.L222:
 891:pong.c        ****           connected = TRUE;
 1933              		.loc 1 891 0
 1934 0a32 0124     		mov	r4, #1
 1935              	.L115:
 1936              	.LVL101:
 897:pong.c        ****         recvPos = 0;
 1937              		.loc 1 897 0
 1938 0a34 6E4B     		ldr	r3, .L280+48
 1939 0a36 0022     		mov	r2, #0
 1940 0a38 4933     		add	r3, r3, #73
 1941 0a3a 1A70     		strb	r2, [r3]
 1942 0a3c 08E0     		b	.L111
 1943              	.LVL102:
 1944              	.L112:
 899:pong.c        ****       else if (recvPos < RECV_BUF_LEN)
 1945              		.loc 1 899 0
 1946 0a3e 6E4D     		ldr	r5, .L280+56
 1947 0a40 2B78     		ldrb	r3, [r5]
 1948 0a42 272B     		cmp	r3, #39
 1949 0a44 04D8     		bhi	.L111
 900:pong.c        ****         recvBuf[recvPos++] = rxChar;
 1950              		.loc 1 900 0
 1951 0a46 391C     		mov	r1, r7
 1952 0a48 2131     		add	r1, r1, #33
 1953 0a4a CA54     		strb	r2, [r1, r3]
 1954 0a4c 0133     		add	r3, r3, #1
 1955 0a4e 2B70     		strb	r3, [r5]
 1956              	.L111:
 1957              	.LVL103:
 902:pong.c        ****     osSleep(1);
 1958              		.loc 1 902 0
 1959 0a50 0120     		mov	r0, #1
 1960 0a52 FFF7FEFF 		bl	osSleep
 905:pong.c        ****     lcdGotoxy(88,18);
 1961              		.loc 1 905 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 64


 1962 0a56 5820     		mov	r0, #88
 1963 0a58 1221     		mov	r1, #18
 1964 0a5a FFF7FEFF 		bl	lcdGotoxy
 906:pong.c        ****     lcdColor(0x00,0xfd);
 1965              		.loc 1 906 0
 1966 0a5e 0020     		mov	r0, #0
 1967 0a60 FD21     		mov	r1, #253
 1968 0a62 FFF7FEFF 		bl	lcdColor
 907:pong.c        ****     switch (cnt % 150)
 1969              		.loc 1 907 0
 1970 0a66 301C     		mov	r0, r6
 1971 0a68 9621     		mov	r1, #150
 1972 0a6a FFF7FEFF 		bl	__umodsi3
 1973 0a6e 3228     		cmp	r0, #50
 1974 0a70 10D0     		beq	.L120
 1975 0a72 04D8     		bhi	.L124
 1976 0a74 0028     		cmp	r0, #0
 1977 0a76 09D0     		beq	.L118
 1978 0a78 1928     		cmp	r0, #25
 1979 0a7a 14D1     		bne	.L117
 1980 0a7c 08E0     		b	.L270
 1981              	.L124:
 1982 0a7e 6428     		cmp	r0, #100
 1983 0a80 0CD0     		beq	.L122
 1984 0a82 7D28     		cmp	r0, #125
 1985 0a84 0CD0     		beq	.L123
 1986 0a86 4B28     		cmp	r0, #75
 1987 0a88 0DD1     		bne	.L117
 1988 0a8a 05E0     		b	.L271
 1989              	.L118:
 909:pong.c        ****     case   0: lcdPuts("   ");break;
 1990              		.loc 1 909 0
 1991 0a8c 5D48     		ldr	r0, .L280+68
 1992 0a8e 08E0     		b	.L254
 1993              	.L270:
 910:pong.c        ****     case  25: lcdPuts(".  ");break;
 1994              		.loc 1 910 0
 1995 0a90 5D48     		ldr	r0, .L280+72
 1996 0a92 06E0     		b	.L254
 1997              	.L120:
 911:pong.c        ****     case  50: lcdPuts(".. ");break;
 1998              		.loc 1 911 0
 1999 0a94 5D48     		ldr	r0, .L280+76
 2000 0a96 04E0     		b	.L254
 2001              	.L271:
 912:pong.c        ****     case  75: lcdPuts("...");break;
 2002              		.loc 1 912 0
 2003 0a98 5D48     		ldr	r0, .L280+80
 2004 0a9a 02E0     		b	.L254
 2005              	.L122:
 913:pong.c        ****     case 100: lcdPuts(" ..");break;
 2006              		.loc 1 913 0
 2007 0a9c 5D48     		ldr	r0, .L280+84
 2008 0a9e 00E0     		b	.L254
 2009              	.L123:
 914:pong.c        ****     case 125: lcdPuts("  .");break;
 2010              		.loc 1 914 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 65


 2011 0aa0 5D48     		ldr	r0, .L280+88
 2012              	.L254:
 2013 0aa2 FFF7FEFF 		bl	lcdPuts
 2014              	.L117:
 917:pong.c        ****     cnt++;
 2015              		.loc 1 917 0
 2016 0aa6 0136     		add	r6, r6, #1
 2017              	.LVL104:
 876:pong.c        ****   while ((connected == FALSE) && ((ms - timeStamp) < 10000))
 2018              		.loc 1 876 0
 2019 0aa8 002C     		cmp	r4, #0
 2020 0aaa 07D1     		bne	.L125
 2021              	.LVL105:
 2022              	.L110:
 2023 0aac 474B     		ldr	r3, .L280+12
 2024 0aae 5B48     		ldr	r0, .L280+92
 2025 0ab0 1A68     		ldr	r2, [r3]
 2026 0ab2 2F9B     		ldr	r3, [sp, #188]
 2027 0ab4 D31A     		sub	r3, r2, r3
 2028 0ab6 8342     		cmp	r3, r0
 2029 0ab8 90D9     		bls	.L126
 2030 0aba 6CE0     		b	.L116
 2031              	.LVL106:
 2032              	.L125:
 924:pong.c        ****     timeStamp = ms;
 2033              		.loc 1 924 0
 2034 0abc 434B     		ldr	r3, .L280+12
 2035 0abe 1B68     		ldr	r3, [r3]
 2036              	.LVL107:
 2037 0ac0 2F93     		str	r3, [sp, #188]
 2038              	.LVL108:
 926:pong.c        ****     recvPos = 0;
 2039              		.loc 1 926 0
 2040 0ac2 4B4B     		ldr	r3, .L280+48
 2041              	.LVL109:
 2042 0ac4 1F1C     		mov	r7, r3
 2043 0ac6 4937     		add	r7, r7, #73
 2044 0ac8 0022     		mov	r2, #0
 2045 0aca 3A70     		strb	r2, [r7]
 2046 0acc 1D1C     		mov	r5, r3
 2047 0ace 5BE0     		b	.L127
 2048              	.L139:
 930:pong.c        ****       if (uart1GetChar(&rxChar) == TRUE)
 2049              		.loc 1 930 0
 2050 0ad0 6C46     		mov	r4, sp
 2051 0ad2 C334     		add	r4, r4, #195
 2052 0ad4 201C     		mov	r0, r4
 2053 0ad6 FFF7FEFF 		bl	uart1GetChar
 2054 0ada 0128     		cmp	r0, #1
 2055 0adc 28D1     		bne	.L128
 932:pong.c        ****         printf("%c", rxChar);
 2056              		.loc 1 932 0
 2057 0ade 2178     		ldrb	r1, [r4]
 2058              	.LVL110:
 2059 0ae0 4448     		ldr	r0, .L280+52
 2060 0ae2 FFF7FEFF 		bl	simplePrintf
 2061              	.LVL111:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 66


 934:pong.c        ****         if (rxChar == 0x0a)
 2062              		.loc 1 934 0
 2063 0ae6 2278     		ldrb	r2, [r4]
 936:pong.c        ****           if (recvPos > 0)
 2064              		.loc 1 936 0
 2065 0ae8 3B78     		ldrb	r3, [r7]
 934:pong.c        ****         if (rxChar == 0x0a)
 2066              		.loc 1 934 0
 2067 0aea 0A2A     		cmp	r2, #10
 2068 0aec 19D1     		bne	.L129
 936:pong.c        ****           if (recvPos > 0)
 2069              		.loc 1 936 0
 2070 0aee 002B     		cmp	r3, #0
 2071 0af0 03D0     		beq	.L130
 937:pong.c        ****             recvBuf[recvPos-1] = '\0';
 2072              		.loc 1 937 0
 2073 0af2 EB18     		add	r3, r5, r3
 2074 0af4 2033     		add	r3, r3, #32
 2075 0af6 0022     		mov	r2, #0
 2076 0af8 1A70     		strb	r2, [r3]
 2077              	.L130:
 940:pong.c        ****           if (memcmp(recvBuf, "LETS START PLAYING", 18) == 0)
 2078              		.loc 1 940 0
 2079 0afa 2C1C     		mov	r4, r5
 2080 0afc 2134     		add	r4, r4, #33
 2081 0afe 201C     		mov	r0, r4
 2082 0b00 4749     		ldr	r1, .L280+96
 2083 0b02 1222     		mov	r2, #18
 2084 0b04 FFF7FEFF 		bl	memcmp
 2085 0b08 0028     		cmp	r0, #0
 2086 0b0a 01D1     		bne	.LCB1845
 2087 0b0c 00F027FD 		bl	.L224	@far jump
 2088              	.LCB1845:
 944:pong.c        ****           else if ((memcmp(recvBuf, "NO CARRIER", 10) == 0))
 2089              		.loc 1 944 0
 2090 0b10 201C     		mov	r0, r4
 2091 0b12 3B49     		ldr	r1, .L280+64
 2092 0b14 0A22     		mov	r2, #10
 2093 0b16 FFF7FEFF 		bl	memcmp
 2094 0b1a 0028     		cmp	r0, #0
 2095 0b1c 3BD0     		beq	.L116
 948:pong.c        ****           recvPos = 0;
 2096              		.loc 1 948 0
 2097 0b1e 0023     		mov	r3, #0
 2098 0b20 05E0     		b	.L255
 2099              	.L129:
 950:pong.c        ****         else if (recvPos < RECV_BUF_LEN)
 2100              		.loc 1 950 0
 2101 0b22 272B     		cmp	r3, #39
 2102 0b24 04D8     		bhi	.L128
 951:pong.c        ****           recvBuf[recvPos++] = rxChar;
 2103              		.loc 1 951 0
 2104 0b26 291C     		mov	r1, r5
 2105 0b28 2131     		add	r1, r1, #33
 2106 0b2a CA54     		strb	r2, [r1, r3]
 2107 0b2c 0133     		add	r3, r3, #1
 2108              	.L255:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 67


 2109 0b2e 3B70     		strb	r3, [r7]
 2110              	.L128:
 953:pong.c        ****       osSleep(1);
 2111              		.loc 1 953 0
 2112 0b30 0120     		mov	r0, #1
 2113 0b32 FFF7FEFF 		bl	osSleep
 956:pong.c        ****       lcdGotoxy(88,18);
 2114              		.loc 1 956 0
 2115 0b36 5820     		mov	r0, #88
 2116 0b38 1221     		mov	r1, #18
 2117 0b3a FFF7FEFF 		bl	lcdGotoxy
 957:pong.c        ****       lcdColor(0x00,0xfd);
 2118              		.loc 1 957 0
 2119 0b3e 0020     		mov	r0, #0
 2120 0b40 FD21     		mov	r1, #253
 2121 0b42 FFF7FEFF 		bl	lcdColor
 958:pong.c        ****       switch (cnt % 150)
 2122              		.loc 1 958 0
 2123 0b46 301C     		mov	r0, r6
 2124 0b48 9621     		mov	r1, #150
 2125 0b4a FFF7FEFF 		bl	__umodsi3
 2126 0b4e 3228     		cmp	r0, #50
 2127 0b50 10D0     		beq	.L134
 2128 0b52 04D8     		bhi	.L138
 2129 0b54 0028     		cmp	r0, #0
 2130 0b56 09D0     		beq	.L132
 2131 0b58 1928     		cmp	r0, #25
 2132 0b5a 14D1     		bne	.L131
 2133 0b5c 08E0     		b	.L272
 2134              	.L138:
 2135 0b5e 6428     		cmp	r0, #100
 2136 0b60 0CD0     		beq	.L136
 2137 0b62 7D28     		cmp	r0, #125
 2138 0b64 0CD0     		beq	.L137
 2139 0b66 4B28     		cmp	r0, #75
 2140 0b68 0DD1     		bne	.L131
 2141 0b6a 05E0     		b	.L273
 2142              	.L132:
 960:pong.c        ****       case   0: lcdPuts("   ");break;
 2143              		.loc 1 960 0
 2144 0b6c 2548     		ldr	r0, .L280+68
 2145 0b6e 08E0     		b	.L256
 2146              	.L272:
 961:pong.c        ****       case  25: lcdPuts("*  ");break;
 2147              		.loc 1 961 0
 2148 0b70 2C48     		ldr	r0, .L280+100
 2149 0b72 06E0     		b	.L256
 2150              	.L134:
 962:pong.c        ****       case  50: lcdPuts("** ");break;
 2151              		.loc 1 962 0
 2152 0b74 2C48     		ldr	r0, .L280+104
 2153 0b76 04E0     		b	.L256
 2154              	.L273:
 963:pong.c        ****       case  75: lcdPuts("***");break;
 2155              		.loc 1 963 0
 2156 0b78 1148     		ldr	r0, .L280
 2157 0b7a 02E0     		b	.L256
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 68


 2158              	.L136:
 964:pong.c        ****       case 100: lcdPuts(" **");break;
 2159              		.loc 1 964 0
 2160 0b7c 1148     		ldr	r0, .L280+4
 2161 0b7e 00E0     		b	.L256
 2162              	.L137:
 965:pong.c        ****       case 125: lcdPuts("  *");break;
 2163              		.loc 1 965 0
 2164 0b80 1148     		ldr	r0, .L280+8
 2165              	.L256:
 2166 0b82 FFF7FEFF 		bl	lcdPuts
 2167              	.L131:
 968:pong.c        ****       cnt++;
 2168              		.loc 1 968 0
 2169 0b86 0136     		add	r6, r6, #1
 2170              	.LVL112:
 2171              	.L127:
 927:pong.c        ****     while ((connected == FALSE) && ((ms - timeStamp) < 10000))
 2172              		.loc 1 927 0
 2173 0b88 104B     		ldr	r3, .L280+12
 2174 0b8a 2449     		ldr	r1, .L280+92
 2175 0b8c 1A68     		ldr	r2, [r3]
 2176 0b8e 2F9B     		ldr	r3, [sp, #188]
 2177 0b90 D31A     		sub	r3, r2, r3
 2178 0b92 8B42     		cmp	r3, r1
 2179 0b94 9CD9     		bls	.L139
 2180              	.LVL113:
 2181              	.L116:
 2182              	.LBE70:
 2183              	.LBE69:
 571:pong.c        ****         lcdGotoxy(8,32);
 2184              		.loc 1 571 0
 2185 0b96 0820     		mov	r0, #8
 2186 0b98 2021     		mov	r1, #32
 2187 0b9a FFF7FEFF 		bl	lcdGotoxy
 2188              	.LVL114:
 2189 0b9e 234C     		ldr	r4, .L280+108
 2190 0ba0 05E0     		b	.L140
 2191              	.LVL115:
 2192              	.L141:
 2193              	.LBB72:
 2194              	.LBB73:
 496:pong.c        ****     lcdPutchar(*pMessage++);
 2195              		.loc 1 496 0
 2196 0ba2 FFF7FEFF 		bl	lcdPutchar
 497:pong.c        ****     osSleep(speed);
 2197              		.loc 1 497 0
 2198 0ba6 0320     		mov	r0, #3
 496:pong.c        ****     lcdPutchar(*pMessage++);
 2199              		.loc 1 496 0
 2200 0ba8 0134     		add	r4, r4, #1
 2201              	.LVL116:
 497:pong.c        ****     osSleep(speed);
 2202              		.loc 1 497 0
 2203 0baa FFF7FEFF 		bl	osSleep
 2204              	.LVL117:
 2205              	.L140:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 69


 494:pong.c        ****   while (*pMessage != '\0')
 2206              		.loc 1 494 0
 2207 0bae 2078     		ldrb	r0, [r4]
 2208 0bb0 0028     		cmp	r0, #0
 2209 0bb2 F6D1     		bne	.L141
 2210              	.LBE73:
 2211              	.LBE72:
 573:pong.c        ****         lcdGotoxy(8,46);
 2212              		.loc 1 573 0
 2213 0bb4 0820     		mov	r0, #8
 2214 0bb6 2E21     		mov	r1, #46
 2215 0bb8 FFF7FEFF 		bl	lcdGotoxy
 2216              	.LVL118:
 2217 0bbc 1C4C     		ldr	r4, .L280+112
 2218              	.LVL119:
 2219 0bbe 3FE0     		b	.L142
 2220              	.L281:
 2221              		.align	2
 2222              	.L280:
 2223 0bc0 F3000000 		.word	.LC96
 2224 0bc4 F7000000 		.word	.LC98
 2225 0bc8 FB000000 		.word	.LC100
 2226 0bcc 00000000 		.word	ms
 2227 0bd0 9F860100 		.word	99999
 2228 0bd4 FF000000 		.word	.LC102
 2229 0bd8 00000000 		.word	.LANCHOR1
 2230 0bdc 05010000 		.word	.LC104
 2231 0be0 67000000 		.word	.LC57
 2232 0be4 6B000000 		.word	.LC59
 2233 0be8 10010000 		.word	.LC106
 2234 0bec 1B010000 		.word	.LC108
 2235 0bf0 80000000 		.word	.LANCHOR3
 2236 0bf4 81000000 		.word	.LC64
 2237 0bf8 C9000000 		.word	.LANCHOR3+73
 2238 0bfc 23010000 		.word	.LC110
 2239 0c00 07000000 		.word	.LC23
 2240 0c04 9E000000 		.word	.LC70
 2241 0c08 A2000000 		.word	.LC72
 2242 0c0c A6000000 		.word	.LC74
 2243 0c10 AA000000 		.word	.LC76
 2244 0c14 AE000000 		.word	.LC78
 2245 0c18 B2000000 		.word	.LC80
 2246 0c1c 0F270000 		.word	9999
 2247 0c20 2C010000 		.word	.LC113
 2248 0c24 EB000000 		.word	.LC92
 2249 0c28 EF000000 		.word	.LC94
 2250 0c2c 12000000 		.word	.LC41
 2251 0c30 1C000000 		.word	.LC43
 2252              	.LVL120:
 2253              	.L143:
 2254              	.LBB74:
 2255              	.LBB75:
 496:pong.c        ****     lcdPutchar(*pMessage++);
 2256              		.loc 1 496 0
 2257 0c34 FFF7FEFF 		bl	lcdPutchar
 497:pong.c        ****     osSleep(speed);
 2258              		.loc 1 497 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 70


 2259 0c38 0320     		mov	r0, #3
 496:pong.c        ****     lcdPutchar(*pMessage++);
 2260              		.loc 1 496 0
 2261 0c3a 0134     		add	r4, r4, #1
 2262              	.LVL121:
 497:pong.c        ****     osSleep(speed);
 2263              		.loc 1 497 0
 2264 0c3c FFF7FEFF 		bl	osSleep
 2265              	.LVL122:
 2266              	.L142:
 494:pong.c        ****   while (*pMessage != '\0')
 2267              		.loc 1 494 0
 2268 0c40 2078     		ldrb	r0, [r4]
 2269 0c42 0028     		cmp	r0, #0
 2270 0c44 F6D1     		bne	.L143
 2271              	.LBE75:
 2272              	.LBE74:
 575:pong.c        ****         osSleep(150);
 2273              		.loc 1 575 0
 2274 0c46 9620     		mov	r0, #150
 2275 0c48 FFF7FEFF 		bl	osSleep
 2276              	.LVL123:
 2277 0c4c 00F08BFC 		bl	.L226	@ far jump
 2278              	.LVL124:
 2279              	.L265:
 2280              	.LBB76:
 591:pong.c        ****       lcdRect(2, 16, 125, 84, 0x6d);
 2281              		.loc 1 591 0
 2282 0c50 6D27     		mov	r7, #109
 2283 0c52 1021     		mov	r1, #16
 2284 0c54 7D22     		mov	r2, #125
 2285 0c56 5423     		mov	r3, #84
 2286 0c58 0097     		str	r7, [sp]
 2287 0c5a FFF7FEFF 		bl	lcdRect
 592:pong.c        ****       lcdRect(4, 18, 121, 80, 0x00);
 2288              		.loc 1 592 0
 2289 0c5e 7922     		mov	r2, #121
 2290 0c60 5023     		mov	r3, #80
 2291 0c62 0420     		mov	r0, #4
 2292 0c64 1221     		mov	r1, #18
 2293 0c66 0094     		str	r4, [sp]
 2294 0c68 FFF7FEFF 		bl	lcdRect
 593:pong.c        ****       lcdColor(0x00,0xfd);
 2295              		.loc 1 593 0
 2296 0c6c 201C     		mov	r0, r4
 2297 0c6e 311C     		mov	r1, r6
 2298 0c70 FFF7FEFF 		bl	lcdColor
 594:pong.c        ****       lcdGotoxy(8,18);
 2299              		.loc 1 594 0
 2300 0c74 1221     		mov	r1, #18
 2301 0c76 0820     		mov	r0, #8
 2302 0c78 FFF7FEFF 		bl	lcdGotoxy
 595:pong.c        ****       lcdPuts("Waiting for");
 2303              		.loc 1 595 0
 2304 0c7c C148     		ldr	r0, .L282
 2305 0c7e FFF7FEFF 		bl	lcdPuts
 596:pong.c        ****       lcdGotoxy(8,32);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 71


 2306              		.loc 1 596 0
 2307 0c82 2021     		mov	r1, #32
 2308 0c84 0820     		mov	r0, #8
 2309 0c86 FFF7FEFF 		bl	lcdGotoxy
 597:pong.c        ****       lcdPuts("client conn");
 2310              		.loc 1 597 0
 2311 0c8a BF48     		ldr	r0, .L282+4
 2312 0c8c FFF7FEFF 		bl	lcdPuts
 599:pong.c        ****       gameType = GAME_TYPE_DUAL_S;
 2313              		.loc 1 599 0
 2314 0c90 BE4E     		ldr	r6, .L282+8
 2315 0c92 731C     		add	r3, r6, #1
 2316 0c94 DD77     		strb	r5, [r3, #31]
 2317              	.LBB77:
 2318              	.LBB78:
 799:pong.c        ****   osSleep(100);
 2319              		.loc 1 799 0
 2320 0c96 6420     		mov	r0, #100
 2321 0c98 FFF7FEFF 		bl	osSleep
 800:pong.c        ****   uart1SendString("+++");
 2322              		.loc 1 800 0
 2323 0c9c BC48     		ldr	r0, .L282+12
 2324 0c9e FFF7FEFF 		bl	uart1SendString
 801:pong.c        ****   osSleep(100);
 2325              		.loc 1 801 0
 2326 0ca2 6420     		mov	r0, #100
 2327 0ca4 FFF7FEFF 		bl	osSleep
 802:pong.c        ****   uart1SendString("AT+BTCAN\r");
 2328              		.loc 1 802 0
 2329 0ca8 BA48     		ldr	r0, .L282+16
 2330 0caa FFF7FEFF 		bl	uart1SendString
 805:pong.c        ****   recvPos = 0;
 2331              		.loc 1 805 0
 2332 0cae 371C     		mov	r7, r6
 803:pong.c        ****   osSleep(50);
 2333              		.loc 1 803 0
 2334 0cb0 3220     		mov	r0, #50
 2335 0cb2 FFF7FEFF 		bl	osSleep
 805:pong.c        ****   recvPos = 0;
 2336              		.loc 1 805 0
 2337 0cb6 4937     		add	r7, r7, #73
 804:pong.c        ****   uart1SendString("AT+BTSRV=20,\"PingPongServer\"\r");
 2338              		.loc 1 804 0
 2339 0cb8 B748     		ldr	r0, .L282+20
 2340 0cba FFF7FEFF 		bl	uart1SendString
 805:pong.c        ****   recvPos = 0;
 2341              		.loc 1 805 0
 2342 0cbe 3C70     		strb	r4, [r7]
 2343              	.LVL125:
 587:pong.c        ****       tU32 cnt = 0;
 2344              		.loc 1 587 0
 2345 0cc0 0894     		str	r4, [sp, #32]
 2346 0cc2 341C     		mov	r4, r6
 2347              	.LVL126:
 2348              	.L161:
 2349              	.LBE78:
 2350              	.LBE77:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 72


 605:pong.c        ****         key = checkKey();
 2351              		.loc 1 605 0
 2352 0cc4 FFF7FEFF 		bl	checkKey
 2353              	.LBB79:
 2354              	.LBB80:
 818:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 2355              		.loc 1 818 0
 2356 0cc8 6D46     		mov	r5, sp
 2357 0cca C335     		add	r5, r5, #195
 2358              	.LBE80:
 2359              	.LBE79:
 605:pong.c        ****         key = checkKey();
 2360              		.loc 1 605 0
 2361 0ccc 0D90     		str	r0, [sp, #52]
 2362              	.LVL127:
 2363              	.LBB83:
 2364              	.LBB81:
 818:pong.c        ****   if (uart1GetChar(&rxChar) == TRUE)
 2365              		.loc 1 818 0
 2366 0cce 281C     		mov	r0, r5
 2367 0cd0 FFF7FEFF 		bl	uart1GetChar
 2368 0cd4 0128     		cmp	r0, #1
 2369 0cd6 7BD1     		bne	.L144
 820:pong.c        ****     printf("%c", rxChar);
 2370              		.loc 1 820 0
 2371 0cd8 2978     		ldrb	r1, [r5]
 2372              	.LVL128:
 2373 0cda B048     		ldr	r0, .L282+24
 2374 0cdc FFF7FEFF 		bl	simplePrintf
 2375              	.LVL129:
 822:pong.c        ****     if (rxChar == 0x0a)
 2376              		.loc 1 822 0
 2377 0ce0 2A78     		ldrb	r2, [r5]
 2378 0ce2 0A2A     		cmp	r2, #10
 2379 0ce4 6CD1     		bne	.L145
 824:pong.c        ****       if (recvPos > 0)
 2380              		.loc 1 824 0
 2381 0ce6 3D78     		ldrb	r5, [r7]
 2382 0ce8 002D     		cmp	r5, #0
 2383 0cea 03D0     		beq	.L146
 825:pong.c        ****         recvBuf[recvPos-1] = '\0';
 2384              		.loc 1 825 0
 2385 0cec 6319     		add	r3, r4, r5
 2386 0cee 2033     		add	r3, r3, #32
 2387 0cf0 0022     		mov	r2, #0
 2388 0cf2 1A70     		strb	r2, [r3]
 2389              	.L146:
 828:pong.c        ****       if ((memcmp(recvBuf, "CONNECT ", 8) == 0) && (recvPos == 21))
 2390              		.loc 1 828 0
 2391 0cf4 261C     		mov	r6, r4
 2392 0cf6 2136     		add	r6, r6, #33
 2393 0cf8 301C     		mov	r0, r6
 2394 0cfa A949     		ldr	r1, .L282+28
 2395 0cfc 0822     		mov	r2, #8
 2396 0cfe FFF7FEFF 		bl	memcmp
 2397 0d02 0028     		cmp	r0, #0
 2398 0d04 57D1     		bne	.L147
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 73


 2399 0d06 152D     		cmp	r5, #21
 2400 0d08 55D1     		bne	.L147
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2401              		.loc 1 830 0
 2402 0d0a 4934     		add	r4, r4, #73
 832:pong.c        ****           *pBtAddr = recvBuf[recvPos + 8];
 2403              		.loc 1 832 0
 2404 0d0c 321C     		mov	r2, r6
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2405              		.loc 1 830 0
 2406 0d0e 2070     		strb	r0, [r4]
 607:pong.c        ****         if (TRUE == checkIfClinetConnected(btAddress))
 2407              		.loc 1 607 0
 2408 0d10 2BAB     		add	r3, sp, #172
 2409              	.LVL130:
 832:pong.c        ****           *pBtAddr = recvBuf[recvPos + 8];
 2410              		.loc 1 832 0
 2411 0d12 213A     		sub	r2, r2, #33
 2412              	.L148:
 2413 0d14 3118     		add	r1, r6, r0
 2414 0d16 097A     		ldrb	r1, [r1, #8]
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2415              		.loc 1 830 0
 2416 0d18 0130     		add	r0, r0, #1
 2417 0d1a 0006     		lsl	r0, r0, #24
 832:pong.c        ****           *pBtAddr = recvBuf[recvPos + 8];
 2418              		.loc 1 832 0
 2419 0d1c 1970     		strb	r1, [r3]
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2420              		.loc 1 830 0
 2421 0d1e 000E     		lsr	r0, r0, #24
 833:pong.c        ****           pBtAddr++;
 2422              		.loc 1 833 0
 2423 0d20 0133     		add	r3, r3, #1
 2424              	.LVL131:
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2425              		.loc 1 830 0
 2426 0d22 0B28     		cmp	r0, #11
 2427 0d24 F6D9     		bls	.L148
 2428 0d26 4932     		add	r2, r2, #73
 835:pong.c        ****         *pBtAddr = '\0';
 2429              		.loc 1 835 0
 2430 0d28 0025     		mov	r5, #0
 830:pong.c        ****         for (recvPos=0; recvPos<12; recvPos++)
 2431              		.loc 1 830 0
 2432 0d2a 1070     		strb	r0, [r2]
 835:pong.c        ****         *pBtAddr = '\0';
 2433              		.loc 1 835 0
 2434 0d2c 1D70     		strb	r5, [r3]
 2435              	.LBE81:
 2436              	.LBE83:
 610:pong.c        ****           lcdGotoxy(8,18);
 2437              		.loc 1 610 0
 2438 0d2e 1221     		mov	r1, #18
 2439 0d30 0820     		mov	r0, #8
 2440 0d32 FFF7FEFF 		bl	lcdGotoxy
 2441              	.LVL132:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 74


 611:pong.c        ****           lcdPuts("Request from");
 2442              		.loc 1 611 0
 2443 0d36 9B48     		ldr	r0, .L282+32
 2444 0d38 FFF7FEFF 		bl	lcdPuts
 612:pong.c        ****           lcdGotoxy(8,32);
 2445              		.loc 1 612 0
 2446 0d3c 2021     		mov	r1, #32
 2447 0d3e 0820     		mov	r0, #8
 2448 0d40 FFF7FEFF 		bl	lcdGotoxy
 613:pong.c        ****           lcdPuts(btAddress);
 2449              		.loc 1 613 0
 2450 0d44 2BA8     		add	r0, sp, #172
 2451 0d46 FFF7FEFF 		bl	lcdPuts
 614:pong.c        ****           lcdPuts("  ");
 2452              		.loc 1 614 0
 2453 0d4a 9748     		ldr	r0, .L282+36
 2454 0d4c FFF7FEFF 		bl	lcdPuts
 617:pong.c        ****           menu.xPos = 10;
 2455              		.loc 1 617 0
 2456 0d50 15AB     		add	r3, sp, #84
 624:pong.c        ****           menu.headerTextXpos = 17;
 2457              		.loc 1 624 0
 2458 0d52 1121     		mov	r1, #17
 2459 0d54 1973     		strb	r1, [r3, #12]
 617:pong.c        ****           menu.xPos = 10;
 2460              		.loc 1 617 0
 2461 0d56 0A22     		mov	r2, #10
 625:pong.c        ****           menu.pChoice[0] = "Start playing";
 2462              		.loc 1 625 0
 2463 0d58 9449     		ldr	r1, .L282+40
 617:pong.c        ****           menu.xPos = 10;
 2464              		.loc 1 617 0
 2465 0d5a 1A70     		strb	r2, [r3]
 618:pong.c        ****           menu.yPos = 50;
 2466              		.loc 1 618 0
 2467 0d5c 3222     		mov	r2, #50
 2468 0d5e 5A70     		strb	r2, [r3, #1]
 625:pong.c        ****           menu.pChoice[0] = "Start playing";
 2469              		.loc 1 625 0
 2470 0d60 1991     		str	r1, [sp, #100]
 619:pong.c        ****           menu.xLen = 6+(13*8);
 2471              		.loc 1 619 0
 2472 0d62 6E22     		mov	r2, #110
 626:pong.c        ****           menu.pChoice[1] = "Refuse";
 2473              		.loc 1 626 0
 2474 0d64 9249     		ldr	r1, .L282+44
 619:pong.c        ****           menu.xLen = 6+(13*8);
 2475              		.loc 1 619 0
 2476 0d66 9A70     		strb	r2, [r3, #2]
 620:pong.c        ****           menu.yLen = 5*14;
 2477              		.loc 1 620 0
 2478 0d68 4622     		mov	r2, #70
 2479 0d6a DA70     		strb	r2, [r3, #3]
 626:pong.c        ****           menu.pChoice[1] = "Refuse";
 2480              		.loc 1 626 0
 2481 0d6c 1A91     		str	r1, [sp, #104]
 621:pong.c        ****           menu.noOfChoices = 2;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 75


 2482              		.loc 1 621 0
 2483 0d6e 0222     		mov	r2, #2
 627:pong.c        ****           menu.bgColor       = 0;
 2484              		.loc 1 627 0
 2485 0d70 1FA9     		add	r1, sp, #124
 628:pong.c        ****           menu.borderColor   = 0x6d;
 2486              		.loc 1 628 0
 2487 0d72 6D20     		mov	r0, #109
 621:pong.c        ****           menu.noOfChoices = 2;
 2488              		.loc 1 621 0
 2489 0d74 1A71     		strb	r2, [r3, #4]
 628:pong.c        ****           menu.borderColor   = 0x6d;
 2490              		.loc 1 628 0
 2491 0d76 4870     		strb	r0, [r1, #1]
 623:pong.c        ****           menu.pHeaderText = "Accept conn?";
 2492              		.loc 1 623 0
 2493 0d78 8E4A     		ldr	r2, .L282+48
 630:pong.c        ****           menu.choicesColor  = 0xfd;
 2494              		.loc 1 630 0
 2495 0d7a FD20     		mov	r0, #253
 627:pong.c        ****           menu.bgColor       = 0;
 2496              		.loc 1 627 0
 2497 0d7c 0D70     		strb	r5, [r1]
 630:pong.c        ****           menu.choicesColor  = 0xfd;
 2498              		.loc 1 630 0
 2499 0d7e C870     		strb	r0, [r1, #3]
 629:pong.c        ****           menu.headerColor   = 0;
 2500              		.loc 1 629 0
 2501 0d80 8D70     		strb	r5, [r1, #2]
 631:pong.c        ****           menu.selectedColor = 0xe0;
 2502              		.loc 1 631 0
 2503 0d82 E020     		mov	r0, #224
 2504 0d84 20A9     		add	r1, sp, #128
 622:pong.c        ****           menu.initialChoice = 0;
 2505              		.loc 1 622 0
 2506 0d86 5D71     		strb	r5, [r3, #5]
 631:pong.c        ****           menu.selectedColor = 0xe0;
 2507              		.loc 1 631 0
 2508 0d88 0870     		strb	r0, [r1]
 623:pong.c        ****           menu.pHeaderText = "Accept conn?";
 2509              		.loc 1 623 0
 2510 0d8a 1792     		str	r2, [sp, #92]
 633:pong.c        ****           switch (drawMenu(menu))
 2511              		.loc 1 633 0
 2512 0d8c 19A9     		add	r1, sp, #100
 2513 0d8e 6846     		mov	r0, sp
 2514 0d90 D0C9     		ldmia	r1!, {r4, r6, r7}
 2515 0d92 D0C0     		stmia	r0!, {r4, r6, r7}
 2516 0d94 D0C9     		ldmia	r1!, {r4, r6, r7}
 2517 0d96 D0C0     		stmia	r0!, {r4, r6, r7}
 2518 0d98 50C9     		ldmia	r1!, {r4, r6}
 2519 0d9a 50C0     		stmia	r0!, {r4, r6}
 2520 0d9c 1598     		ldr	r0, [sp, #84]
 2521 0d9e 1699     		ldr	r1, [sp, #88]
 2522 0da0 189B     		ldr	r3, [sp, #96]
 2523 0da2 FFF7FEFF 		bl	drawMenu
 2524 0da6 041C     		mov	r4, r0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 76


 2525 0da8 A842     		cmp	r0, r5
 2526 0daa 16D0     		beq	.L149
 2527 0dac 0128     		cmp	r0, #1
 2528 0dae 01D0     		beq	.LCB2252
 2529 0db0 00F0D7FB 		bl	.L244	@far jump
 2530              	.LCB2252:
 2531 0db4 13E0     		b	.L274
 2532              	.LVL133:
 2533              	.L147:
 2534              	.LBB84:
 2535              	.LBB82:
 839:pong.c        ****       recvPos = 0;
 2536              		.loc 1 839 0
 2537 0db6 754B     		ldr	r3, .L282+8
 2538 0db8 0022     		mov	r2, #0
 2539 0dba 4933     		add	r3, r3, #73
 2540 0dbc 1A70     		strb	r2, [r3]
 2541 0dbe 07E0     		b	.L144
 2542              	.L145:
 841:pong.c        ****     else if (recvPos < RECV_BUF_LEN)
 2543              		.loc 1 841 0
 2544 0dc0 3B78     		ldrb	r3, [r7]
 2545 0dc2 272B     		cmp	r3, #39
 2546 0dc4 04D8     		bhi	.L144
 842:pong.c        ****       recvBuf[recvPos++] = rxChar;
 2547              		.loc 1 842 0
 2548 0dc6 211C     		mov	r1, r4
 2549 0dc8 2131     		add	r1, r1, #33
 2550 0dca CA54     		strb	r2, [r1, r3]
 2551 0dcc 0133     		add	r3, r3, #1
 2552 0dce 3B70     		strb	r3, [r7]
 2553              	.L144:
 2554              	.LBE82:
 2555              	.LBE84:
 643:pong.c        ****         else if (key != KEY_NOTHING)
 2556              		.loc 1 643 0
 2557 0dd0 0D9D     		ldr	r5, [sp, #52]
 2558 0dd2 002D     		cmp	r5, #0
 2559 0dd4 07D0     		beq	.L245
 2560 0dd6 00F0C6FB 		bl	.L226	@ far jump
 2561              	.LVL134:
 2562              	.L149:
 635:pong.c        ****           case 0: uart1SendString("\nLETS START PLAYING\n"); done = FALSE; break;  //start playing 
 2563              		.loc 1 635 0
 2564 0dda 7748     		ldr	r0, .L282+52
 2565 0ddc 00E0     		b	.L264
 2566              	.L274:
 636:pong.c        ****           case 1: uart1SendString("+++"); done = TRUE; break;                      //refuse connect
 2567              		.loc 1 636 0
 2568 0dde 6C48     		ldr	r0, .L282+12
 2569              	.L264:
 2570 0de0 FFF7FEFF 		bl	uart1SendString
 2571              	.LVL135:
 2572 0de4 C0E3     		b	.L262
 2573              	.LVL136:
 2574              	.L245:
 653:pong.c        ****           lcdGotoxy(96,30);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 77


 2575              		.loc 1 653 0
 2576 0de6 6020     		mov	r0, #96
 2577 0de8 1E21     		mov	r1, #30
 2578 0dea FFF7FEFF 		bl	lcdGotoxy
 654:pong.c        ****           lcdColor(0x00,0xfd);
 2579              		.loc 1 654 0
 2580 0dee 0D98     		ldr	r0, [sp, #52]
 2581 0df0 FD21     		mov	r1, #253
 2582 0df2 FFF7FEFF 		bl	lcdColor
 655:pong.c        ****           switch (cnt % 150)
 2583              		.loc 1 655 0
 2584 0df6 0898     		ldr	r0, [sp, #32]
 2585 0df8 9621     		mov	r1, #150
 2586 0dfa FFF7FEFF 		bl	__umodsi3
 2587 0dfe 3228     		cmp	r0, #50
 2588 0e00 10D0     		beq	.L156
 2589 0e02 04D8     		bhi	.L160
 2590 0e04 0028     		cmp	r0, #0
 2591 0e06 09D0     		beq	.L154
 2592 0e08 1928     		cmp	r0, #25
 2593 0e0a 14D1     		bne	.L153
 2594 0e0c 08E0     		b	.L275
 2595              	.L160:
 2596 0e0e 6428     		cmp	r0, #100
 2597 0e10 0CD0     		beq	.L158
 2598 0e12 7D28     		cmp	r0, #125
 2599 0e14 0CD0     		beq	.L159
 2600 0e16 4B28     		cmp	r0, #75
 2601 0e18 0DD1     		bne	.L153
 2602 0e1a 05E0     		b	.L276
 2603              	.L154:
 657:pong.c        ****           case   0: lcdPuts("   ");break;
 2604              		.loc 1 657 0
 2605 0e1c 6748     		ldr	r0, .L282+56
 2606 0e1e 08E0     		b	.L257
 2607              	.L275:
 658:pong.c        ****           case  25: lcdPuts(".  ");break;
 2608              		.loc 1 658 0
 2609 0e20 6748     		ldr	r0, .L282+60
 2610 0e22 06E0     		b	.L257
 2611              	.L156:
 659:pong.c        ****           case  50: lcdPuts(".. ");break;
 2612              		.loc 1 659 0
 2613 0e24 6748     		ldr	r0, .L282+64
 2614 0e26 04E0     		b	.L257
 2615              	.L276:
 660:pong.c        ****           case  75: lcdPuts("...");break;
 2616              		.loc 1 660 0
 2617 0e28 6748     		ldr	r0, .L282+68
 2618 0e2a 02E0     		b	.L257
 2619              	.L158:
 661:pong.c        ****           case 100: lcdPuts(" ..");break;
 2620              		.loc 1 661 0
 2621 0e2c 6748     		ldr	r0, .L282+72
 2622 0e2e 00E0     		b	.L257
 2623              	.L159:
 662:pong.c        ****           case 125: lcdPuts("  .");break;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 78


 2624              		.loc 1 662 0
 2625 0e30 6748     		ldr	r0, .L282+76
 2626              	.L257:
 2627 0e32 FFF7FEFF 		bl	lcdPuts
 2628              	.L153:
 665:pong.c        ****           cnt++;
 2629              		.loc 1 665 0
 2630 0e36 089E     		ldr	r6, [sp, #32]
 666:pong.c        ****           osSleep(1);
 2631              		.loc 1 666 0
 2632 0e38 0120     		mov	r0, #1
 665:pong.c        ****           cnt++;
 2633              		.loc 1 665 0
 2634 0e3a 0136     		add	r6, r6, #1
 2635 0e3c 0896     		str	r6, [sp, #32]
 2636              	.LVL137:
 666:pong.c        ****           osSleep(1);
 2637              		.loc 1 666 0
 2638 0e3e FFF7FEFF 		bl	osSleep
 2639              	.LVL138:
 2640 0e42 3FE7     		b	.L161
 2641              	.LVL139:
 2642              	.L202:
 2643              	.LBE76:
 676:pong.c        ****     player1.score = 0;
 2644              		.loc 1 676 0
 2645 0e44 08AF     		add	r7, sp, #32
 2646              	.LVL140:
 2647 0e46 6348     		ldr	r0, .L282+80
 2648 0e48 3F78     		ldrb	r7, [r7]
 2649              	.LVL141:
 2650 0e4a C770     		strb	r7, [r0, #3]
 677:pong.c        ****     player2.score = 0;
 2651              		.loc 1 677 0
 2652 0e4c C774     		strb	r7, [r0, #19]
 2653              	.LVL142:
 680:pong.c        ****     startNewServ(&player1);
 2654              		.loc 1 680 0
 2655 0e4e FFF7A9F9 		bl	startNewServ
 681:pong.c        ****     paintGame();
 2656              		.loc 1 681 0
 2657 0e52 FFF7D1F9 		bl	paintGame
 2658              	.LVL143:
 2659 0e56 089C     		ldr	r4, [sp, #32]
 2660 0e58 0F94     		str	r4, [sp, #60]
 2661              	.LVL144:
 2662              	.L200:
 2663              	.LBB85:
 685:pong.c        ****       volatile tU8 key = checkKey2();
 2664              		.loc 1 685 0
 2665 0e5a FFF7FEFF 		bl	checkKey2
 687:pong.c        ****       if (gameType == GAME_TYPE_SINGLE)
 2666              		.loc 1 687 0
 2667 0e5e 4B4A     		ldr	r2, .L282+8
 2668 0e60 0132     		add	r2, r2, #1
 685:pong.c        ****       volatile tU8 key = checkKey2();
 2669              		.loc 1 685 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 79


 2670 0e62 6B46     		mov	r3, sp
 687:pong.c        ****       if (gameType == GAME_TYPE_SINGLE)
 2671              		.loc 1 687 0
 2672 0e64 D47F     		ldrb	r4, [r2, #31]
 685:pong.c        ****       volatile tU8 key = checkKey2();
 2673              		.loc 1 685 0
 2674 0e66 C333     		add	r3, r3, #195
 2675 0e68 1870     		strb	r0, [r3]
 2676              	.LVL145:
 687:pong.c        ****       if (gameType == GAME_TYPE_SINGLE)
 2677              		.loc 1 687 0
 2678 0e6a 002C     		cmp	r4, #0
 2679 0e6c 0AD1     		bne	.L162
 689:pong.c        ****         player1.key = key;
 2680              		.loc 1 689 0
 2681 0e6e 1978     		ldrb	r1, [r3]
 2682              	.LVL146:
 2683 0e70 584A     		ldr	r2, .L282+80
 2684 0e72 1173     		strb	r1, [r2, #12]
 690:pong.c        ****         player2.key = key;
 2685              		.loc 1 690 0
 2686 0e74 1978     		ldrb	r1, [r3]
 691:pong.c        ****         movePlayer(pActivePlayer, key);
 2687              		.loc 1 691 0
 2688 0e76 D06D     		ldr	r0, [r2, #92]
 690:pong.c        ****         player2.key = key;
 2689              		.loc 1 690 0
 2690 0e78 1177     		strb	r1, [r2, #28]
 691:pong.c        ****         movePlayer(pActivePlayer, key);
 2691              		.loc 1 691 0
 2692 0e7a 1978     		ldrb	r1, [r3]
 2693 0e7c FFF7E6F9 		bl	movePlayer
 2694              	.LVL147:
 2695 0e80 0D94     		str	r4, [sp, #52]
 2696 0e82 52E0     		b	.L163
 2697              	.LVL148:
 2698              	.L162:
 696:pong.c        ****         if (FALSE == btSendAndRecvStatus(key, FALSE))
 2699              		.loc 1 696 0
 2700 0e84 1878     		ldrb	r0, [r3]
 2701              	.LVL149:
 2702 0e86 0021     		mov	r1, #0
 2703 0e88 FFF744FA 		bl	btSendAndRecvStatus
 2704              	.LVL150:
 2705 0e8c 0025     		mov	r5, #0
 2706 0e8e 0D95     		str	r5, [sp, #52]
 2707 0e90 A842     		cmp	r0, r5
 2708 0e92 2ED1     		bne	.L164
 2709              	.LVL151:
 700:pong.c        ****           menu.xPos = 2;
 2710              		.loc 1 700 0
 2711 0e94 15AB     		add	r3, sp, #84
 2712 0e96 0222     		mov	r2, #2
 707:pong.c        ****           menu.headerTextXpos = 4;
 2713              		.loc 1 707 0
 2714 0e98 0421     		mov	r1, #4
 700:pong.c        ****           menu.xPos = 2;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 80


 2715              		.loc 1 700 0
 2716 0e9a 1A70     		strb	r2, [r3]
 707:pong.c        ****           menu.headerTextXpos = 4;
 2717              		.loc 1 707 0
 2718 0e9c 1973     		strb	r1, [r3, #12]
 701:pong.c        ****           menu.yPos = 40;
 2719              		.loc 1 701 0
 2720 0e9e 2822     		mov	r2, #40
 708:pong.c        ****           menu.pChoice[0] = "End game";
 2721              		.loc 1 708 0
 2722 0ea0 4D49     		ldr	r1, .L282+84
 701:pong.c        ****           menu.yPos = 40;
 2723              		.loc 1 701 0
 2724 0ea2 5A70     		strb	r2, [r3, #1]
 709:pong.c        ****           menu.bgColor       = 0;
 2725              		.loc 1 709 0
 2726 0ea4 0DAF     		add	r7, sp, #52
 702:pong.c        ****           menu.xLen = 6+(15*8);
 2727              		.loc 1 702 0
 2728 0ea6 7E22     		mov	r2, #126
 2729 0ea8 9A70     		strb	r2, [r3, #2]
 709:pong.c        ****           menu.bgColor       = 0;
 2730              		.loc 1 709 0
 2731 0eaa 3F78     		ldrb	r7, [r7]
 708:pong.c        ****           menu.pChoice[0] = "End game";
 2732              		.loc 1 708 0
 2733 0eac 1991     		str	r1, [sp, #100]
 703:pong.c        ****           menu.yLen = 3*14;
 2734              		.loc 1 703 0
 2735 0eae 2A22     		mov	r2, #42
 709:pong.c        ****           menu.bgColor       = 0;
 2736              		.loc 1 709 0
 2737 0eb0 1FA9     		add	r1, sp, #124
 710:pong.c        ****           menu.borderColor   = 0x6d;
 2738              		.loc 1 710 0
 2739 0eb2 6D20     		mov	r0, #109
 703:pong.c        ****           menu.yLen = 3*14;
 2740              		.loc 1 703 0
 2741 0eb4 DA70     		strb	r2, [r3, #3]
 710:pong.c        ****           menu.borderColor   = 0x6d;
 2742              		.loc 1 710 0
 2743 0eb6 4870     		strb	r0, [r1, #1]
 706:pong.c        ****           menu.pHeaderText = "Lost connection";
 2744              		.loc 1 706 0
 2745 0eb8 484A     		ldr	r2, .L282+88
 712:pong.c        ****           menu.choicesColor  = 0xfd;
 2746              		.loc 1 712 0
 2747 0eba FD20     		mov	r0, #253
 709:pong.c        ****           menu.bgColor       = 0;
 2748              		.loc 1 709 0
 2749 0ebc 0F70     		strb	r7, [r1]
 712:pong.c        ****           menu.choicesColor  = 0xfd;
 2750              		.loc 1 712 0
 2751 0ebe C870     		strb	r0, [r1, #3]
 711:pong.c        ****           menu.headerColor   = 0;
 2752              		.loc 1 711 0
 2753 0ec0 8F70     		strb	r7, [r1, #2]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 81


 713:pong.c        ****           menu.selectedColor = 0xe0;
 2754              		.loc 1 713 0
 2755 0ec2 E020     		mov	r0, #224
 2756 0ec4 20A9     		add	r1, sp, #128
 704:pong.c        ****           menu.noOfChoices = 1;
 2757              		.loc 1 704 0
 2758 0ec6 0124     		mov	r4, #1
 2759 0ec8 1C71     		strb	r4, [r3, #4]
 705:pong.c        ****           menu.initialChoice = 0;
 2760              		.loc 1 705 0
 2761 0eca 5D71     		strb	r5, [r3, #5]
 713:pong.c        ****           menu.selectedColor = 0xe0;
 2762              		.loc 1 713 0
 2763 0ecc 0870     		strb	r0, [r1]
 706:pong.c        ****           menu.pHeaderText = "Lost connection";
 2764              		.loc 1 706 0
 2765 0ece 1792     		str	r2, [sp, #92]
 715:pong.c        ****           switch (drawMenu(menu)) {
 2766              		.loc 1 715 0
 2767 0ed0 19A9     		add	r1, sp, #100
 2768 0ed2 6846     		mov	r0, sp
 2769 0ed4 E0C9     		ldmia	r1!, {r5, r6, r7}
 2770 0ed6 E0C0     		stmia	r0!, {r5, r6, r7}
 2771 0ed8 E0C9     		ldmia	r1!, {r5, r6, r7}
 2772 0eda E0C0     		stmia	r0!, {r5, r6, r7}
 2773 0edc 60C9     		ldmia	r1!, {r5, r6}
 2774 0ede 60C0     		stmia	r0!, {r5, r6}
 2775 0ee0 1598     		ldr	r0, [sp, #84]
 2776 0ee2 1699     		ldr	r1, [sp, #88]
 2777 0ee4 189B     		ldr	r3, [sp, #96]
 2778 0ee6 FFF7FEFF 		bl	drawMenu
 2779 0eea 0028     		cmp	r0, #0
 2780 0eec 00D1     		bne	.L258
 2781              	.L228:
 716:pong.c        ****           case 0: done = TRUE; break;   //End game
 2782              		.loc 1 716 0
 2783 0eee 0F94     		str	r4, [sp, #60]
 2784              	.L258:
 698:pong.c        ****           gameOver = TRUE;
 2785              		.loc 1 698 0
 2786 0ef0 0D94     		str	r4, [sp, #52]
 2787              	.LVL152:
 2788              	.L164:
 723:pong.c        ****           player2.key = key;
 2789              		.loc 1 723 0
 2790 0ef2 6B46     		mov	r3, sp
 2791 0ef4 C333     		add	r3, r3, #195
 2792 0ef6 1B78     		ldrb	r3, [r3]
 2793              	.LVL153:
 2794 0ef8 364C     		ldr	r4, .L282+80
 2795 0efa 2377     		strb	r3, [r4, #28]
 726:pong.c        ****         player1.key = remoteClientKey;
 2796              		.loc 1 726 0
 2797 0efc 234B     		ldr	r3, .L282+8
 2798              	.LVL154:
 2799 0efe 1A1C     		mov	r2, r3
 2800 0f00 4A32     		add	r2, r2, #74
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 82


 728:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C 
 2801              		.loc 1 728 0
 2802 0f02 0133     		add	r3, r3, #1
 726:pong.c        ****         player1.key = remoteClientKey;
 2803              		.loc 1 726 0
 2804 0f04 1178     		ldrb	r1, [r2]
 728:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C 
 2805              		.loc 1 728 0
 2806 0f06 DB7F     		ldrb	r3, [r3, #31]
 726:pong.c        ****         player1.key = remoteClientKey;
 2807              		.loc 1 726 0
 2808 0f08 2173     		strb	r1, [r4, #12]
 728:pong.c        ****         if (gameType == GAME_TYPE_DUAL_C 
 2809              		.loc 1 728 0
 2810 0f0a 012B     		cmp	r3, #1
 2811 0f0c 03D0     		beq	.L166
 729:pong.c        ****             || remoteClientKey == KEY_UP || remoteClientKey == KEY_DOWN)
 2812              		.loc 1 729 0
 2813 0f0e 0129     		cmp	r1, #1
 2814 0f10 01D0     		beq	.L166
 729:pong.c        ****             || remoteClientKey == KEY_UP || remoteClientKey == KEY_DOWN)
 2815              		.loc 1 729 0 is_stmt 0 discriminator 1
 2816 0f12 0429     		cmp	r1, #4
 2817 0f14 02D1     		bne	.L167
 2818              	.L166:
 731:pong.c        ****           movePlayer(&player1, remoteClientKey);
 2819              		.loc 1 731 0 is_stmt 1
 2820 0f16 201C     		mov	r0, r4
 2821 0f18 FFF798F9 		bl	movePlayer
 2822              	.L167:
 734:pong.c        ****         movePlayer(&player2, key);
 2823              		.loc 1 734 0
 2824 0f1c 6B46     		mov	r3, sp
 2825 0f1e C333     		add	r3, r3, #195
 2826 0f20 201C     		mov	r0, r4
 2827 0f22 1978     		ldrb	r1, [r3]
 2828              	.LVL155:
 2829 0f24 1030     		add	r0, r0, #16
 2830 0f26 FFF791F9 		bl	movePlayer
 2831              	.LVL156:
 2832              	.L163:
 737:pong.c        ****       moveBall(key);
 2833              		.loc 1 737 0
 2834 0f2a 6B46     		mov	r3, sp
 2835 0f2c C333     		add	r3, r3, #195
 2836 0f2e 1B78     		ldrb	r3, [r3]
 2837              	.LVL157:
 2838              	.LBB86:
 2839              	.LBB87:
 285:pong.c        ****   if (serving &&
 2840              		.loc 1 285 0
 2841 0f30 284B     		ldr	r3, .L282+80
 2842              	.LVL158:
 2843 0f32 5833     		add	r3, r3, #88
 2844 0f34 1B78     		ldrb	r3, [r3]
 2845 0f36 002B     		cmp	r3, #0
 2846 0f38 00D1     		bne	.LCB2557
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 83


 2847 0f3a ACE0     		b	.L168	@long jump
 2848              	.LCB2557:
 286:pong.c        ****       (gameType == GAME_TYPE_SINGLE || gameType == GAME_TYPE_DUAL_S))
 2849              		.loc 1 286 0
 2850 0f3c 134B     		ldr	r3, .L282+8
 2851 0f3e 0133     		add	r3, r3, #1
 2852 0f40 DB7F     		ldrb	r3, [r3, #31]
 285:pong.c        ****   if (serving &&
 2853              		.loc 1 285 0
 2854 0f42 022B     		cmp	r3, #2
 2855 0f44 02D0     		beq	.L230
 2856 0f46 002B     		cmp	r3, #0
 2857 0f48 00D0     		beq	.LCB2571
 2858 0f4a A4E0     		b	.L168	@long jump
 2859              	.LCB2571:
 2860              	.L230:
 2861              	.LBB88:
 288:pong.c        ****     tU8 midPos = pServingPlayer->yPos + pServingPlayer->size/2 - ball.size/2;
 2862              		.loc 1 288 0
 2863 0f4c 214D     		ldr	r5, .L282+80
 2864 0f4e 2C6A     		ldr	r4, [r5, #32]
 2865 0f50 2B1C     		mov	r3, r5
 2866 0f52 3433     		add	r3, r3, #52
 2867 0f54 A778     		ldrb	r7, [r4, #2]
 2868 0f56 1E78     		ldrb	r6, [r3]
 2869 0f58 6378     		ldrb	r3, [r4, #1]
 2870 0f5a 7F08     		lsr	r7, r7, #1
 2871 0f5c FF18     		add	r7, r7, r3
 290:pong.c        ****     ball.xPos = pServingPlayer->xPos;
 2872              		.loc 1 290 0
 2873 0f5e 2078     		ldrb	r0, [r4]
 288:pong.c        ****     tU8 midPos = pServingPlayer->yPos + pServingPlayer->size/2 - ball.size/2;
 2874              		.loc 1 288 0
 2875 0f60 7308     		lsr	r3, r6, #1
 2876 0f62 FF1A     		sub	r7, r7, r3
 290:pong.c        ****     ball.xPos = pServingPlayer->xPos;
 2877              		.loc 1 290 0
 2878 0f64 FFF7FEFF 		bl	__floatunsidf
 288:pong.c        ****     tU8 midPos = pServingPlayer->yPos + pServingPlayer->size/2 - ball.size/2;
 2879              		.loc 1 288 0
 2880 0f68 3F06     		lsl	r7, r7, #24
 2881 0f6a 3F0E     		lsr	r7, r7, #24
 2882              	.LVL159:
 290:pong.c        ****     ball.xPos = pServingPlayer->xPos;
 2883              		.loc 1 290 0
 2884 0f6c 0990     		str	r0, [sp, #36]
 2885 0f6e 0A91     		str	r1, [sp, #40]
 291:pong.c        ****     if (pServingPlayer == &player1)
 2886              		.loc 1 291 0
 2887 0f70 AC42     		cmp	r4, r5
 2888 0f72 39D1     		bne	.L170
 292:pong.c        ****       ball.xPos+=PLAYER_WIDTH;
 2889              		.loc 1 292 0
 2890 0f74 0998     		ldr	r0, [sp, #36]
 2891 0f76 0A99     		ldr	r1, [sp, #40]
 2892 0f78 194A     		ldr	r2, .L282+92
 2893 0f7a 1A4B     		ldr	r3, .L282+96
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 84


 2894 0f7c FFF7FEFF 		bl	__adddf3
 2895 0f80 3BE0     		b	.L259
 2896              	.L283:
 2897 0f82 C046     		.align	2
 2898              	.L282:
 2899 0f84 3F010000 		.word	.LC115
 2900 0f88 4B010000 		.word	.LC117
 2901 0f8c 80000000 		.word	.LANCHOR3
 2902 0f90 67000000 		.word	.LC57
 2903 0f94 6B000000 		.word	.LC59
 2904 0f98 57010000 		.word	.LC119
 2905 0f9c 81000000 		.word	.LC64
 2906 0fa0 23010000 		.word	.LC110
 2907 0fa4 75010000 		.word	.LC121
 2908 0fa8 82010000 		.word	.LC123
 2909 0fac 92010000 		.word	.LC127
 2910 0fb0 A0010000 		.word	.LC129
 2911 0fb4 85010000 		.word	.LC125
 2912 0fb8 A7010000 		.word	.LC131
 2913 0fbc 9E000000 		.word	.LC70
 2914 0fc0 A2000000 		.word	.LC72
 2915 0fc4 A6000000 		.word	.LC74
 2916 0fc8 AA000000 		.word	.LC76
 2917 0fcc AE000000 		.word	.LC78
 2918 0fd0 B2000000 		.word	.LC80
 2919 0fd4 00000000 		.word	.LANCHOR2
 2920 0fd8 CC010000 		.word	.LC135
 2921 0fdc BC010000 		.word	.LC133
 2922 0fe0 00000840 		.word	1074266112
 2923 0fe4 00000000 		.word	0
 2924              	.L170:
 294:pong.c        ****       ball.xPos-=ball.size;
 2925              		.loc 1 294 0
 2926 0fe8 301C     		mov	r0, r6
 2927 0fea FFF7FEFF 		bl	__floatsidf
 2928 0fee 021C     		mov	r2, r0
 2929 0ff0 0B1C     		mov	r3, r1
 2930 0ff2 0998     		ldr	r0, [sp, #36]
 2931 0ff4 0A99     		ldr	r1, [sp, #40]
 2932 0ff6 FFF7FEFF 		bl	__subdf3
 2933              	.L259:
 2934 0ffa 6862     		str	r0, [r5, #36]
 2935 0ffc A962     		str	r1, [r5, #40]
 296:pong.c        ****     if (ball.yPos != midPos)
 2936              		.loc 1 296 0
 2937 0ffe E96A     		ldr	r1, [r5, #44]
 2938 1000 2A6B     		ldr	r2, [r5, #48]
 2939 1002 381C     		mov	r0, r7
 2940 1004 0991     		str	r1, [sp, #36]
 2941 1006 0A92     		str	r2, [sp, #40]
 2942 1008 FFF7FEFF 		bl	__floatsidf
 2943 100c 021C     		mov	r2, r0
 2944 100e 0B1C     		mov	r3, r1
 2945 1010 0998     		ldr	r0, [sp, #36]
 2946 1012 0A99     		ldr	r1, [sp, #40]
 2947 1014 FFF7FEFF 		bl	__nedf2
 2948 1018 0028     		cmp	r0, #0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 85


 2949 101a 32D0     		beq	.L172
 299:pong.c        ****       lcdRect(ball.xPos, ball.yPos, ball.size, ball.size, BACKGROUND_COLOR);
 2950              		.loc 1 299 0
 2951 101c 686A     		ldr	r0, [r5, #36]
 2952 101e A96A     		ldr	r1, [r5, #40]
 2953 1020 FFF7FEFF 		bl	__fixunsdfsi
 2954 1024 0406     		lsl	r4, r0, #24
 2955 1026 0998     		ldr	r0, [sp, #36]
 2956 1028 0A99     		ldr	r1, [sp, #40]
 2957 102a FFF7FEFF 		bl	__fixunsdfsi
 2958 102e 240E     		lsr	r4, r4, #24
 2959 1030 0106     		lsl	r1, r0, #24
 2960 1032 0023     		mov	r3, #0
 2961 1034 321C     		mov	r2, r6
 2962 1036 201C     		mov	r0, r4
 2963 1038 090E     		lsr	r1, r1, #24
 2964 103a 0093     		str	r3, [sp]
 2965 103c 331C     		mov	r3, r6
 2966 103e FFF7FEFF 		bl	lcdRect
 301:pong.c        ****       ball.yPos = midPos;
 2967              		.loc 1 301 0
 2968 1042 381C     		mov	r0, r7
 2969 1044 FFF7FEFF 		bl	__floatunsidf
 2970 1048 061C     		mov	r6, r0
 2971 104a 0F1C     		mov	r7, r1
 2972              	.LVL160:
 2973 104c EE62     		str	r6, [r5, #44]
 2974 104e 2F63     		str	r7, [r5, #48]
 304:pong.c        ****       lcdRect(ball.xPos, ball.yPos, ball.size, ball.size, ball.color);
 2975              		.loc 1 304 0
 2976 1050 C14B     		ldr	r3, .L284
 2977 1052 3433     		add	r3, r3, #52
 2978 1054 1B78     		ldrb	r3, [r3]
 2979 1056 686A     		ldr	r0, [r5, #36]
 2980 1058 A96A     		ldr	r1, [r5, #40]
 2981 105a 0993     		str	r3, [sp, #36]
 2982 105c FFF7FEFF 		bl	__fixunsdfsi
 2983 1060 391C     		mov	r1, r7
 2984 1062 0406     		lsl	r4, r0, #24
 2985 1064 301C     		mov	r0, r6
 2986 1066 FFF7FEFF 		bl	__fixunsdfsi
 2987 106a BB4B     		ldr	r3, .L284
 2988 106c 3533     		add	r3, r3, #53
 2989 106e 1B78     		ldrb	r3, [r3]
 2990 1070 099A     		ldr	r2, [sp, #36]
 2991 1072 0106     		lsl	r1, r0, #24
 2992 1074 240E     		lsr	r4, r4, #24
 2993 1076 0093     		str	r3, [sp]
 2994 1078 090E     		lsr	r1, r1, #24
 2995 107a 201C     		mov	r0, r4
 2996 107c 131C     		mov	r3, r2
 2997 107e FFF7FEFF 		bl	lcdRect
 2998              	.L172:
 307:pong.c        ****     if (/*key*/pServingPlayer->key == KEY_CENTER)
 2999              		.loc 1 307 0
 3000 1082 B54B     		ldr	r3, .L284
 3001 1084 1A6A     		ldr	r2, [r3, #32]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 86


 3002 1086 127B     		ldrb	r2, [r2, #12]
 3003 1088 102A     		cmp	r2, #16
 3004 108a 00D0     		beq	.LCB2700
 3005 108c 22E2     		b	.L174	@long jump
 3006              	.LCB2700:
 309:pong.c        ****       serving = FALSE;
 3007              		.loc 1 309 0
 3008 108e 5833     		add	r3, r3, #88
 3009 1090 0022     		mov	r2, #0
 3010 1092 1A70     		strb	r2, [r3]
 3011 1094 1EE2     		b	.L174
 3012              	.L168:
 3013              	.LBE88:
 315:pong.c        ****   if (lastMove + BALL_MOVE_TIME > ms)
 3014              		.loc 1 315 0
 3015 1096 B14E     		ldr	r6, .L284+4
 3016 1098 B14B     		ldr	r3, .L284+8
 3017 109a 326D     		ldr	r2, [r6, #80]
 3018 109c 1B68     		ldr	r3, [r3]
 3019 109e 6432     		add	r2, r2, #100
 3020 10a0 9A42     		cmp	r2, r3
 3021 10a2 00D9     		bls	.LCB2716
 3022 10a4 16E2     		b	.L174	@long jump
 3023              	.LCB2716:
 319:pong.c        ****   lcdRect((tU8)floor(ball.xPos), (tU8)floor(ball.yPos), ball.size, ball.size, BACKGROUND_COLOR);
 3024              		.loc 1 319 0
 3025 10a6 AC4C     		ldr	r4, .L284
 3026 10a8 606A     		ldr	r0, [r4, #36]
 3027 10aa A16A     		ldr	r1, [r4, #40]
 3028 10ac FFF7FEFF 		bl	floor
 3029 10b0 0990     		str	r0, [sp, #36]
 3030 10b2 0A91     		str	r1, [sp, #40]
 3031 10b4 E06A     		ldr	r0, [r4, #44]
 3032 10b6 216B     		ldr	r1, [r4, #48]
 3033 10b8 FFF7FEFF 		bl	floor
 3034 10bc 0B90     		str	r0, [sp, #44]
 3035 10be 0C91     		str	r1, [sp, #48]
 3036 10c0 0998     		ldr	r0, [sp, #36]
 3037 10c2 0A99     		ldr	r1, [sp, #40]
 3038 10c4 FFF7FEFF 		bl	__fixunsdfsi
 3039 10c8 A64D     		ldr	r5, .L284+12
 3040 10ca 2F78     		ldrb	r7, [r5]
 3041 10cc 0506     		lsl	r5, r0, #24
 3042 10ce 0B98     		ldr	r0, [sp, #44]
 3043 10d0 0C99     		ldr	r1, [sp, #48]
 3044 10d2 FFF7FEFF 		bl	__fixunsdfsi
 3045 10d6 2D0E     		lsr	r5, r5, #24
 3046 10d8 0106     		lsl	r1, r0, #24
 3047 10da 0023     		mov	r3, #0
 3048 10dc 0093     		str	r3, [sp]
 3049 10de 281C     		mov	r0, r5
 3050 10e0 3B1C     		mov	r3, r7
 3051 10e2 090E     		lsr	r1, r1, #24
 3052 10e4 3A1C     		mov	r2, r7
 323:pong.c        ****       || gameType == GAME_TYPE_DUAL_S)
 3053              		.loc 1 323 0
 3054 10e6 0136     		add	r6, r6, #1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 87


 319:pong.c        ****   lcdRect((tU8)floor(ball.xPos), (tU8)floor(ball.yPos), ball.size, ball.size, BACKGROUND_COLOR);
 3055              		.loc 1 319 0
 3056 10e8 FFF7FEFF 		bl	lcdRect
 323:pong.c        ****       || gameType == GAME_TYPE_DUAL_S)
 3057              		.loc 1 323 0
 3058 10ec F37F     		ldrb	r3, [r6, #31]
 3059 10ee 251C     		mov	r5, r4
 322:pong.c        ****   if (gameType == GAME_TYPE_SINGLE 
 3060              		.loc 1 322 0
 3061 10f0 022B     		cmp	r3, #2
 3062 10f2 02D0     		beq	.L232
 3063 10f4 002B     		cmp	r3, #0
 3064 10f6 00D0     		beq	.LCB2756
 3065 10f8 C0E1     		b	.L175	@long jump
 3066              	.LCB2756:
 3067              	.L232:
 326:pong.c        ****     if (ball.xSpeed > 0)
 3068              		.loc 1 326 0
 3069 10fa A66B     		ldr	r6, [r4, #56]
 3070 10fc E76B     		ldr	r7, [r4, #60]
 3071 10fe 9A4A     		ldr	r2, .L284+16
 3072 1100 9A4B     		ldr	r3, .L284+20
 3073 1102 301C     		mov	r0, r6
 3074 1104 391C     		mov	r1, r7
 3075 1106 0996     		str	r6, [sp, #36]
 3076 1108 0A97     		str	r7, [sp, #40]
 3077 110a FFF7FEFF 		bl	__gtdf2
 3078 110e 0028     		cmp	r0, #0
 3079 1110 23DD     		ble	.L246
 3080              	.LVL161:
 330:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed+ball.size >= player2.xPos);
 3081              		.loc 1 330 0
 3082 1112 626A     		ldr	r2, [r4, #36]
 3083 1114 A36A     		ldr	r3, [r4, #40]
 3084 1116 0998     		ldr	r0, [sp, #36]
 3085 1118 0A99     		ldr	r1, [sp, #40]
 3086 111a FFF7FEFF 		bl	__adddf3
 3087 111e 3435     		add	r5, r5, #52
 3088 1120 061C     		mov	r6, r0
 3089 1122 2878     		ldrb	r0, [r5]
 3090 1124 0F1C     		mov	r7, r1
 3091 1126 FFF7FEFF 		bl	__floatsidf
 3092 112a 021C     		mov	r2, r0
 3093 112c 0B1C     		mov	r3, r1
 3094 112e 301C     		mov	r0, r6
 3095 1130 391C     		mov	r1, r7
 3096 1132 FFF7FEFF 		bl	__adddf3
 3097 1136 061C     		mov	r6, r0
 3098 1138 207C     		ldrb	r0, [r4, #16]
 3099 113a 0F1C     		mov	r7, r1
 3100 113c FFF7FEFF 		bl	__floatsidf
 3101 1140 021C     		mov	r2, r0
 3102 1142 0B1C     		mov	r3, r1
 3103 1144 301C     		mov	r0, r6
 3104 1146 391C     		mov	r1, r7
 3105 1148 FFF7FEFF 		bl	__gedf2
 328:pong.c        ****       dir = -1;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 88


 3106              		.loc 1 328 0
 3107 114c FF24     		mov	r4, #255
 330:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed+ball.size >= player2.xPos);
 3108              		.loc 1 330 0
 3109 114e C743     		mvn	r7, r0
 329:pong.c        ****       pDefending = &player2;
 3110              		.loc 1 329 0
 3111 1150 243D     		sub	r5, r5, #36
 330:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed+ball.size >= player2.xPos);
 3112              		.loc 1 330 0
 3113 1152 FF0F     		lsr	r7, r7, #31
 3114              	.LVL162:
 328:pong.c        ****       dir = -1;
 3115              		.loc 1 328 0
 3116 1154 1294     		str	r4, [sp, #72]
 329:pong.c        ****       pDefending = &player2;
 3117              		.loc 1 329 0
 3118 1156 0E95     		str	r5, [sp, #56]
 3119 1158 16E0     		b	.L180
 3120              	.LVL163:
 3121              	.L246:
 336:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed < player1.xPos+PLAYER_WIDTH);
 3122              		.loc 1 336 0
 3123 115a 626A     		ldr	r2, [r4, #36]
 3124 115c A36A     		ldr	r3, [r4, #40]
 3125 115e 0998     		ldr	r0, [sp, #36]
 3126 1160 0A99     		ldr	r1, [sp, #40]
 3127 1162 FFF7FEFF 		bl	__adddf3
 3128 1166 061C     		mov	r6, r0
 3129 1168 2078     		ldrb	r0, [r4]
 3130 116a 0330     		add	r0, r0, #3
 3131 116c 0F1C     		mov	r7, r1
 3132 116e FFF7FEFF 		bl	__floatsidf
 3133 1172 021C     		mov	r2, r0
 3134 1174 0B1C     		mov	r3, r1
 3135 1176 301C     		mov	r0, r6
 3136 1178 391C     		mov	r1, r7
 3137 117a FFF7FEFF 		bl	__ltdf2
 335:pong.c        ****       pDefending = &player1;
 3138              		.loc 1 335 0
 3139 117e 764E     		ldr	r6, .L284
 334:pong.c        ****       dir = 1;
 3140              		.loc 1 334 0
 3141 1180 0125     		mov	r5, #1
 3142 1182 1295     		str	r5, [sp, #72]
 335:pong.c        ****       pDefending = &player1;
 3143              		.loc 1 335 0
 3144 1184 0E96     		str	r6, [sp, #56]
 336:pong.c        ****       riskForHit = (ball.xPos+ball.xSpeed < player1.xPos+PLAYER_WIDTH);
 3145              		.loc 1 336 0
 3146 1186 C70F     		lsr	r7, r0, #31
 3147              	.LVL164:
 3148              	.L180:
 340:pong.c        ****     if (ball.yPos+ball.ySpeed < BOARD_TOP_Y 
 3149              		.loc 1 340 0
 3150 1188 734C     		ldr	r4, .L284
 3151 118a E56A     		ldr	r5, [r4, #44]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 89


 3152 118c 266B     		ldr	r6, [r4, #48]
 3153 118e 0B95     		str	r5, [sp, #44]
 3154 1190 0C96     		str	r6, [sp, #48]
 3155 1192 256C     		ldr	r5, [r4, #64]
 3156 1194 666C     		ldr	r6, [r4, #68]
 3157 1196 2A1C     		mov	r2, r5
 3158 1198 331C     		mov	r3, r6
 3159 119a 0B98     		ldr	r0, [sp, #44]
 3160 119c 0C99     		ldr	r1, [sp, #48]
 3161 119e FFF7FEFF 		bl	__adddf3
 3162 11a2 734A     		ldr	r2, .L284+24
 3163 11a4 734B     		ldr	r3, .L284+28
 3164 11a6 FFF7FEFF 		bl	__ltdf2
 3165 11aa 0028     		cmp	r0, #0
 3166 11ac 13DB     		blt	.L182
 341:pong.c        ****         || ball.yPos+ball.size+ball.ySpeed > BOARD_BOTTOM_Y)
 3167              		.loc 1 341 0
 3168 11ae 3434     		add	r4, r4, #52
 3169 11b0 2078     		ldrb	r0, [r4]
 3170 11b2 FFF7FEFF 		bl	__floatsidf
 3171 11b6 021C     		mov	r2, r0
 3172 11b8 0B1C     		mov	r3, r1
 3173 11ba 0B98     		ldr	r0, [sp, #44]
 3174 11bc 0C99     		ldr	r1, [sp, #48]
 3175 11be FFF7FEFF 		bl	__adddf3
 3176 11c2 2A1C     		mov	r2, r5
 3177 11c4 331C     		mov	r3, r6
 3178 11c6 FFF7FEFF 		bl	__adddf3
 3179 11ca 6B4A     		ldr	r2, .L284+32
 3180 11cc 6B4B     		ldr	r3, .L284+36
 3181 11ce FFF7FEFF 		bl	__gtdf2
 3182 11d2 0028     		cmp	r0, #0
 3183 11d4 05DD     		ble	.L183
 3184              	.L182:
 343:pong.c        ****       ball.ySpeed = -ball.ySpeed;
 3185              		.loc 1 343 0
 3186 11d6 8020     		mov	r0, #128
 3187 11d8 5F4B     		ldr	r3, .L284
 3188 11da 0006     		lsl	r0, r0, #24
 3189 11dc 2D18     		add	r5, r5, r0
 3190 11de 1D64     		str	r5, [r3, #64]
 3191 11e0 5E64     		str	r6, [r3, #68]
 3192              	.L183:
 348:pong.c        ****     if (riskForHit)
 3193              		.loc 1 348 0
 3194 11e2 002F     		cmp	r7, #0
 3195 11e4 00D1     		bne	.LCB2882
 3196 11e6 FFE0     		b	.L185	@long jump
 3197              	.LCB2882:
 3198              	.LVL165:
 3199              	.LBB89:
 354:pong.c        ****       tU8 yPos = (ball.ySpeed/ball.xSpeed)
 3200              		.loc 1 354 0
 3201 11e8 5B4D     		ldr	r5, .L284
 3202 11ea 2C6C     		ldr	r4, [r5, #64]
 3203 11ec 6D6C     		ldr	r5, [r5, #68]
 3204 11ee 099A     		ldr	r2, [sp, #36]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 90


 3205 11f0 0A9B     		ldr	r3, [sp, #40]
 3206 11f2 201C     		mov	r0, r4
 3207 11f4 291C     		mov	r1, r5
 3208 11f6 1094     		str	r4, [sp, #64]
 3209 11f8 1195     		str	r5, [sp, #68]
 3210 11fa FFF7FEFF 		bl	__divdf3
 355:pong.c        ****                  * (pDefending->xPos - ball.xPos) + ball.yPos;
 3211              		.loc 1 355 0
 3212 11fe 0E9E     		ldr	r6, [sp, #56]
 354:pong.c        ****       tU8 yPos = (ball.ySpeed/ball.xSpeed)
 3213              		.loc 1 354 0
 3214 1200 041C     		mov	r4, r0
 355:pong.c        ****                  * (pDefending->xPos - ball.xPos) + ball.yPos;
 3215              		.loc 1 355 0
 3216 1202 3078     		ldrb	r0, [r6]
 354:pong.c        ****       tU8 yPos = (ball.ySpeed/ball.xSpeed)
 3217              		.loc 1 354 0
 3218 1204 0D1C     		mov	r5, r1
 355:pong.c        ****                  * (pDefending->xPos - ball.xPos) + ball.yPos;
 3219              		.loc 1 355 0
 3220 1206 FFF7FEFF 		bl	__floatsidf
 3221 120a 534F     		ldr	r7, .L284
 3222              	.LVL166:
 3223 120c 7A6A     		ldr	r2, [r7, #36]
 3224 120e BB6A     		ldr	r3, [r7, #40]
 3225 1210 FFF7FEFF 		bl	__subdf3
 3226 1214 021C     		mov	r2, r0
 3227 1216 0B1C     		mov	r3, r1
 3228 1218 201C     		mov	r0, r4
 3229 121a 291C     		mov	r1, r5
 3230 121c FFF7FEFF 		bl	__muldf3
 3231 1220 0B9A     		ldr	r2, [sp, #44]
 3232 1222 0C9B     		ldr	r3, [sp, #48]
 3233 1224 FFF7FEFF 		bl	__adddf3
 354:pong.c        ****       tU8 yPos = (ball.ySpeed/ball.xSpeed)
 3234              		.loc 1 354 0
 3235 1228 FFF7FEFF 		bl	__fixunsdfsi
 357:pong.c        ****       if (yPos+ball.size >= pDefending->yPos && yPos <= pDefending->yPos+pDefending->size)
 3236              		.loc 1 357 0
 3237 122c 3A1C     		mov	r2, r7
 3238 122e 3432     		add	r2, r2, #52
 3239 1230 0306     		lsl	r3, r0, #24
 3240 1232 1078     		ldrb	r0, [r2]
 3241 1234 1B0E     		lsr	r3, r3, #24
 3242 1236 7478     		ldrb	r4, [r6, #1]
 3243 1238 1A18     		add	r2, r3, r0
 3244 123a A242     		cmp	r2, r4
 3245 123c 00DA     		bge	.LCB2921
 3246 123e D3E0     		b	.L185	@long jump
 3247              	.LCB2921:
 3248 1240 B578     		ldrb	r5, [r6, #2]
 3249 1242 6219     		add	r2, r4, r5
 3250 1244 9342     		cmp	r3, r2
 3251 1246 00DD     		ble	.LCB2925
 3252 1248 CEE0     		b	.L185	@long jump
 3253              	.LCB2925:
 3254              	.LVL167:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 91


 360:pong.c        ****         percIntoPad = (ball.yPos+(ball.size/2)-pDefending->yPos)
 3255              		.loc 1 360 0
 3256 124a 4008     		lsr	r0, r0, #1
 3257              	.LVL168:
 3258 124c FFF7FEFF 		bl	__floatsidf
 3259 1250 021C     		mov	r2, r0
 3260 1252 0B1C     		mov	r3, r1
 3261 1254 0B98     		ldr	r0, [sp, #44]
 3262 1256 0C99     		ldr	r1, [sp, #48]
 3263 1258 FFF7FEFF 		bl	__adddf3
 3264 125c 061C     		mov	r6, r0
 3265 125e 201C     		mov	r0, r4
 3266 1260 0F1C     		mov	r7, r1
 3267 1262 FFF7FEFF 		bl	__floatsidf
 3268 1266 021C     		mov	r2, r0
 3269 1268 0B1C     		mov	r3, r1
 3270 126a 301C     		mov	r0, r6
 3271 126c 391C     		mov	r1, r7
 3272 126e FFF7FEFF 		bl	__subdf3
 3273 1272 061C     		mov	r6, r0
 361:pong.c        ****                       / pDefending->size;
 3274              		.loc 1 361 0
 3275 1274 281C     		mov	r0, r5
 360:pong.c        ****         percIntoPad = (ball.yPos+(ball.size/2)-pDefending->yPos)
 3276              		.loc 1 360 0
 3277 1276 0F1C     		mov	r7, r1
 361:pong.c        ****                       / pDefending->size;
 3278              		.loc 1 361 0
 3279 1278 FFF7FEFF 		bl	__floatsidf
 3280 127c 021C     		mov	r2, r0
 3281 127e 0B1C     		mov	r3, r1
 360:pong.c        ****         percIntoPad = (ball.yPos+(ball.size/2)-pDefending->yPos)
 3282              		.loc 1 360 0
 3283 1280 301C     		mov	r0, r6
 3284 1282 391C     		mov	r1, r7
 3285 1284 FFF7FEFF 		bl	__divdf3
 363:pong.c        ****         angle = (-5*M_PI/12) + (10*percIntoPad*M_PI/12);
 3286              		.loc 1 363 0
 3287 1288 3D4A     		ldr	r2, .L284+40
 3288 128a 3E4B     		ldr	r3, .L284+44
 3289 128c FFF7FEFF 		bl	__muldf3
 3290 1290 3D4A     		ldr	r2, .L284+48
 3291 1292 3E4B     		ldr	r3, .L284+52
 3292 1294 FFF7FEFF 		bl	__muldf3
 3293 1298 3D4A     		ldr	r2, .L284+56
 3294 129a 3E4B     		ldr	r3, .L284+60
 3295 129c FFF7FEFF 		bl	__divdf3
 3296 12a0 3D4A     		ldr	r2, .L284+64
 3297 12a2 3E4B     		ldr	r3, .L284+68
 3298 12a4 FFF7FEFF 		bl	__subdf3
 3299 12a8 1390     		str	r0, [sp, #76]
 3300 12aa 1491     		str	r1, [sp, #80]
 3301              	.LVL169:
 364:pong.c        ****         absSpeed = sqrt(ball.xSpeed*ball.xSpeed+ball.ySpeed*ball.ySpeed);
 3302              		.loc 1 364 0
 3303 12ac 0998     		ldr	r0, [sp, #36]
 3304 12ae 0A99     		ldr	r1, [sp, #40]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 92


 3305              	.LVL170:
 3306 12b0 021C     		mov	r2, r0
 3307 12b2 0B1C     		mov	r3, r1
 3308 12b4 FFF7FEFF 		bl	__muldf3
 3309 12b8 041C     		mov	r4, r0
 3310 12ba 0D1C     		mov	r5, r1
 3311 12bc 1098     		ldr	r0, [sp, #64]
 3312 12be 1199     		ldr	r1, [sp, #68]
 3313 12c0 021C     		mov	r2, r0
 3314 12c2 0B1C     		mov	r3, r1
 3315 12c4 FFF7FEFF 		bl	__muldf3
 3316 12c8 021C     		mov	r2, r0
 3317 12ca 0B1C     		mov	r3, r1
 3318 12cc 201C     		mov	r0, r4
 3319 12ce 291C     		mov	r1, r5
 3320 12d0 FFF7FEFF 		bl	__adddf3
 3321 12d4 FFF7FEFF 		bl	sqrt
 3322 12d8 061C     		mov	r6, r0
 3323 12da 0F1C     		mov	r7, r1
 3324              	.LVL171:
 365:pong.c        ****         ball.xSpeed = dir*absSpeed*cos(angle);
 3325              		.loc 1 365 0
 3326 12dc 1398     		ldr	r0, [sp, #76]
 3327 12de 1499     		ldr	r1, [sp, #80]
 3328 12e0 FFF7FEFF 		bl	cos
 3329 12e4 0D1C     		mov	r5, r1
 3330 12e6 1299     		ldr	r1, [sp, #72]
 3331 12e8 041C     		mov	r4, r0
 3332 12ea 0806     		lsl	r0, r1, #24
 3333 12ec 0016     		asr	r0, r0, #24
 3334 12ee FFF7FEFF 		bl	__floatsidf
 3335 12f2 321C     		mov	r2, r6
 3336 12f4 3B1C     		mov	r3, r7
 3337 12f6 FFF7FEFF 		bl	__muldf3
 3338 12fa 2B1C     		mov	r3, r5
 3339 12fc 221C     		mov	r2, r4
 3340 12fe FFF7FEFF 		bl	__muldf3
 3341 1302 154A     		ldr	r2, .L284
 3342 1304 041C     		mov	r4, r0
 3343 1306 0D1C     		mov	r5, r1
 3344 1308 9463     		str	r4, [r2, #56]
 3345 130a D563     		str	r5, [r2, #60]
 366:pong.c        ****         ball.ySpeed = absSpeed*sin(angle);
 3346              		.loc 1 366 0
 3347 130c 1398     		ldr	r0, [sp, #76]
 3348 130e 1499     		ldr	r1, [sp, #80]
 3349 1310 FFF7FEFF 		bl	sin
 3350 1314 0B1C     		mov	r3, r1
 3351 1316 021C     		mov	r2, r0
 3352 1318 391C     		mov	r1, r7
 3353 131a 301C     		mov	r0, r6
 3354 131c FFF7FEFF 		bl	__muldf3
 3355 1320 0D4B     		ldr	r3, .L284
 3356 1322 061C     		mov	r6, r0
 3357              	.LVL172:
 3358 1324 0F1C     		mov	r7, r1
 3359 1326 1E64     		str	r6, [r3, #64]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 93


 3360 1328 5F64     		str	r7, [r3, #68]
 369:pong.c        ****         if (pDefending->key == KEY_CENTER)
 3361              		.loc 1 369 0
 3362 132a 0E98     		ldr	r0, [sp, #56]
 3363 132c 037B     		ldrb	r3, [r0, #12]
 371:pong.c        ****           ball.xSpeed *= SPEED_INCR;
 3364              		.loc 1 371 0
 3365 132e 291C     		mov	r1, r5
 3366 1330 201C     		mov	r0, r4
 369:pong.c        ****         if (pDefending->key == KEY_CENTER)
 3367              		.loc 1 369 0
 3368 1332 102B     		cmp	r3, #16
 3369 1334 38D1     		bne	.L186
 371:pong.c        ****           ball.xSpeed *= SPEED_INCR;
 3370              		.loc 1 371 0
 3371 1336 1A4A     		ldr	r2, .L284+72
 3372 1338 1A4B     		ldr	r3, .L284+76
 3373 133a FFF7FEFF 		bl	__muldf3
 3374 133e 064C     		ldr	r4, .L284
 372:pong.c        ****           ball.ySpeed *= SPEED_INCR;
 3375              		.loc 1 372 0
 3376 1340 174A     		ldr	r2, .L284+72
 3377 1342 184B     		ldr	r3, .L284+76
 371:pong.c        ****           ball.xSpeed *= SPEED_INCR;
 3378              		.loc 1 371 0
 3379 1344 A063     		str	r0, [r4, #56]
 3380 1346 E163     		str	r1, [r4, #60]
 372:pong.c        ****           ball.ySpeed *= SPEED_INCR;
 3381              		.loc 1 372 0
 3382 1348 301C     		mov	r0, r6
 3383 134a 391C     		mov	r1, r7
 3384 134c FFF7FEFF 		bl	__muldf3
 3385 1350 2064     		str	r0, [r4, #64]
 3386 1352 6164     		str	r1, [r4, #68]
 3387 1354 48E0     		b	.L185
 3388              	.L285:
 3389 1356 C046     		.align	2
 3390              	.L284:
 3391 1358 00000000 		.word	.LANCHOR2
 3392 135c 80000000 		.word	.LANCHOR3
 3393 1360 00000000 		.word	ms
 3394 1364 34000000 		.word	.LANCHOR2+52
 3395 1368 00000000 		.word	0
 3396 136c 00000000 		.word	0
 3397 1370 00003040 		.word	1076887552
 3398 1374 00000000 		.word	0
 3399 1378 00206040 		.word	1080041472
 3400 137c 00000000 		.word	0
 3401 1380 00002440 		.word	1076101120
 3402 1384 00000000 		.word	0
 3403 1388 FB210940 		.word	1074340347
 3404 138c 182D4454 		.word	1413754136
 3405 1390 00002840 		.word	1076363264
 3406 1394 00000000 		.word	0
 3407 1398 A6F1F43F 		.word	1073017254
 3408 139c 3FD038C6 		.word	-969355201
 3409 13a0 CCCCF43F 		.word	1073007820
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 94


 3410 13a4 CDCCCCCC 		.word	-858993459
 3411              	.L186:
 377:pong.c        ****           if (ball.xSpeed >= 2.0)
 3412              		.loc 1 377 0
 3413 13a8 854B     		ldr	r3, .L286+4
 3414 13aa 844A     		ldr	r2, .L286
 3415 13ac FFF7FEFF 		bl	__gedf2
 3416 13b0 0028     		cmp	r0, #0
 3417 13b2 08DB     		blt	.L187
 378:pong.c        ****             ball.xSpeed *= SPEED_DECR;
 3418              		.loc 1 378 0
 3419 13b4 201C     		mov	r0, r4
 3420 13b6 291C     		mov	r1, r5
 3421 13b8 824A     		ldr	r2, .L286+8
 3422 13ba 834B     		ldr	r3, .L286+12
 3423 13bc FFF7FEFF 		bl	__muldf3
 3424 13c0 824C     		ldr	r4, .L286+16
 3425 13c2 A063     		str	r0, [r4, #56]
 3426 13c4 E163     		str	r1, [r4, #60]
 3427              	.L187:
 379:pong.c        ****           if (ball.ySpeed >= 2.0)
 3428              		.loc 1 379 0
 3429 13c6 301C     		mov	r0, r6
 3430 13c8 391C     		mov	r1, r7
 3431 13ca 7D4B     		ldr	r3, .L286+4
 3432 13cc 7B4A     		ldr	r2, .L286
 3433 13ce FFF7FEFF 		bl	__gedf2
 3434 13d2 0028     		cmp	r0, #0
 3435 13d4 08DB     		blt	.L185
 380:pong.c        ****             ball.ySpeed *= SPEED_DECR;
 3436              		.loc 1 380 0
 3437 13d6 7B4A     		ldr	r2, .L286+8
 3438 13d8 7B4B     		ldr	r3, .L286+12
 3439 13da 301C     		mov	r0, r6
 3440 13dc 391C     		mov	r1, r7
 3441 13de FFF7FEFF 		bl	__muldf3
 3442 13e2 7A4B     		ldr	r3, .L286+16
 3443 13e4 1864     		str	r0, [r3, #64]
 3444 13e6 5964     		str	r1, [r3, #68]
 3445              	.LVL173:
 3446              	.L185:
 3447              	.LBE89:
 385:pong.c        ****     ball.xPos += ball.xSpeed;
 3448              		.loc 1 385 0
 3449 13e8 784C     		ldr	r4, .L286+16
 3450 13ea 606A     		ldr	r0, [r4, #36]
 3451 13ec A16A     		ldr	r1, [r4, #40]
 3452 13ee A26B     		ldr	r2, [r4, #56]
 3453 13f0 E36B     		ldr	r3, [r4, #60]
 3454 13f2 FFF7FEFF 		bl	__adddf3
 3455 13f6 061C     		mov	r6, r0
 3456 13f8 0F1C     		mov	r7, r1
 386:pong.c        ****     ball.yPos += ball.ySpeed;
 3457              		.loc 1 386 0
 3458 13fa 226C     		ldr	r2, [r4, #64]
 3459 13fc 636C     		ldr	r3, [r4, #68]
 385:pong.c        ****     ball.xPos += ball.xSpeed;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 95


 3460              		.loc 1 385 0
 3461 13fe 6662     		str	r6, [r4, #36]
 3462 1400 A762     		str	r7, [r4, #40]
 386:pong.c        ****     ball.yPos += ball.ySpeed;
 3463              		.loc 1 386 0
 3464 1402 0B98     		ldr	r0, [sp, #44]
 3465 1404 0C99     		ldr	r1, [sp, #48]
 3466 1406 FFF7FEFF 		bl	__adddf3
 389:pong.c        ****     if (ball.xPos <= 0)
 3467              		.loc 1 389 0
 3468 140a 714A     		ldr	r2, .L286+20
 3469 140c 714B     		ldr	r3, .L286+24
 386:pong.c        ****     ball.yPos += ball.ySpeed;
 3470              		.loc 1 386 0
 3471 140e 0990     		str	r0, [sp, #36]
 3472 1410 0A91     		str	r1, [sp, #40]
 3473 1412 E062     		str	r0, [r4, #44]
 3474 1414 2163     		str	r1, [r4, #48]
 389:pong.c        ****     if (ball.xPos <= 0)
 3475              		.loc 1 389 0
 3476 1416 301C     		mov	r0, r6
 3477 1418 391C     		mov	r1, r7
 3478 141a FFF7FEFF 		bl	__ledf2
 3479 141e 0028     		cmp	r0, #0
 3480 1420 05DC     		bgt	.L247
 391:pong.c        ****       player2.score++;
 3481              		.loc 1 391 0
 3482 1422 E37C     		ldrb	r3, [r4, #19]
 392:pong.c        ****       startNewServ(&player2);          
 3483              		.loc 1 392 0
 3484 1424 201C     		mov	r0, r4
 391:pong.c        ****       player2.score++;
 3485              		.loc 1 391 0
 3486 1426 0133     		add	r3, r3, #1
 3487 1428 E374     		strb	r3, [r4, #19]
 392:pong.c        ****       startNewServ(&player2);          
 3488              		.loc 1 392 0
 3489 142a 1030     		add	r0, r0, #16
 3490 142c 0BE0     		b	.L260
 3491              	.L247:
 394:pong.c        ****     else if (ball.xPos >= BOARD_WIDTH-1)
 3492              		.loc 1 394 0
 3493 142e 301C     		mov	r0, r6
 3494 1430 391C     		mov	r1, r7
 3495 1432 694A     		ldr	r2, .L286+28
 3496 1434 694B     		ldr	r3, .L286+32
 3497 1436 FFF7FEFF 		bl	__gedf2
 3498 143a 0028     		cmp	r0, #0
 3499 143c 06DB     		blt	.L248
 396:pong.c        ****       player1.score++;
 3500              		.loc 1 396 0
 3501 143e E378     		ldrb	r3, [r4, #3]
 3502 1440 0133     		add	r3, r3, #1
 3503 1442 E370     		strb	r3, [r4, #3]
 397:pong.c        ****       startNewServ(&player1);          
 3504              		.loc 1 397 0
 3505 1444 201C     		mov	r0, r4
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 96


 3506              	.L260:
 3507 1446 FEF7ADFE 		bl	startNewServ
 3508 144a 3FE0     		b	.L192
 3509              	.L248:
 403:pong.c        ****       lcdRect(floor(ball.xPos), floor(ball.yPos), ball.size, ball.size, ball.color);
 3510              		.loc 1 403 0
 3511 144c 301C     		mov	r0, r6
 3512 144e 391C     		mov	r1, r7
 3513 1450 FFF7FEFF 		bl	floor
 3514 1454 0B90     		str	r0, [sp, #44]
 3515 1456 0C91     		str	r1, [sp, #48]
 3516 1458 0998     		ldr	r0, [sp, #36]
 3517 145a 0A99     		ldr	r1, [sp, #40]
 3518 145c FFF7FEFF 		bl	floor
 3519 1460 0990     		str	r0, [sp, #36]
 3520 1462 0A91     		str	r1, [sp, #40]
 3521 1464 231C     		mov	r3, r4
 3522 1466 3433     		add	r3, r3, #52
 3523 1468 0B98     		ldr	r0, [sp, #44]
 3524 146a 0C99     		ldr	r1, [sp, #48]
 3525 146c 1E78     		ldrb	r6, [r3]
 3526 146e FFF7FEFF 		bl	__fixunsdfsi
 3527 1472 0506     		lsl	r5, r0, #24
 3528 1474 2D0E     		lsr	r5, r5, #24
 3529 1476 0998     		ldr	r0, [sp, #36]
 3530 1478 0A99     		ldr	r1, [sp, #40]
 3531 147a 1BE0     		b	.L261
 3532              	.LVL174:
 3533              	.L175:
 412:pong.c        ****     ball.yPos = ball.sYPos;
 3534              		.loc 1 412 0
 3535 147c 266D     		ldr	r6, [r4, #80]
 3536 147e 676D     		ldr	r7, [r4, #84]
 411:pong.c        ****     ball.xPos = ball.sXPos;
 3537              		.loc 1 411 0
 3538 1480 A06C     		ldr	r0, [r4, #72]
 3539 1482 E16C     		ldr	r1, [r4, #76]
 412:pong.c        ****     ball.yPos = ball.sYPos;
 3540              		.loc 1 412 0
 3541 1484 E662     		str	r6, [r4, #44]
 3542 1486 2763     		str	r7, [r4, #48]
 411:pong.c        ****     ball.xPos = ball.sXPos;
 3543              		.loc 1 411 0
 3544 1488 6062     		str	r0, [r4, #36]
 3545 148a A162     		str	r1, [r4, #40]
 414:pong.c        ****     lcdRect(floor(ball.xPos), floor(ball.yPos), ball.size, ball.size, ball.color);
 3546              		.loc 1 414 0
 3547 148c FFF7FEFF 		bl	floor
 3548 1490 0990     		str	r0, [sp, #36]
 3549 1492 0A91     		str	r1, [sp, #40]
 3550 1494 301C     		mov	r0, r6
 3551 1496 391C     		mov	r1, r7
 3552 1498 FFF7FEFF 		bl	floor
 3553 149c 0B90     		str	r0, [sp, #44]
 3554 149e 0C91     		str	r1, [sp, #48]
 3555 14a0 0998     		ldr	r0, [sp, #36]
 3556 14a2 0A99     		ldr	r1, [sp, #40]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 97


 3557 14a4 FFF7FEFF 		bl	__fixunsdfsi
 3558 14a8 4D4D     		ldr	r5, .L286+36
 3559 14aa 2E78     		ldrb	r6, [r5]
 3560 14ac 0506     		lsl	r5, r0, #24
 3561 14ae 0B98     		ldr	r0, [sp, #44]
 3562 14b0 0C99     		ldr	r1, [sp, #48]
 3563 14b2 2D0E     		lsr	r5, r5, #24
 3564              	.LVL175:
 3565              	.L261:
 3566 14b4 FFF7FEFF 		bl	__fixunsdfsi
 3567 14b8 3534     		add	r4, r4, #53
 3568 14ba 2378     		ldrb	r3, [r4]
 3569 14bc 0106     		lsl	r1, r0, #24
 3570 14be 0093     		str	r3, [sp]
 3571 14c0 090E     		lsr	r1, r1, #24
 3572 14c2 281C     		mov	r0, r5
 3573 14c4 321C     		mov	r2, r6
 3574 14c6 331C     		mov	r3, r6
 3575 14c8 FFF7FEFF 		bl	lcdRect
 3576              	.L192:
 418:pong.c        ****   lastMove = ms;
 3577              		.loc 1 418 0
 3578 14cc 454B     		ldr	r3, .L286+40
 3579 14ce 1A68     		ldr	r2, [r3]
 3580 14d0 454B     		ldr	r3, .L286+44
 3581 14d2 1A65     		str	r2, [r3, #80]
 3582              	.L174:
 3583              	.LBE87:
 3584              	.LBE86:
 739:pong.c        ****       if (player1.score == WIN_SCORE || player2.score == WIN_SCORE)
 3585              		.loc 1 739 0
 3586 14d4 3D4B     		ldr	r3, .L286+16
 3587 14d6 DA78     		ldrb	r2, [r3, #3]
 3588 14d8 032A     		cmp	r2, #3
 3589 14da 02D0     		beq	.L195
 739:pong.c        ****       if (player1.score == WIN_SCORE || player2.score == WIN_SCORE)
 3590              		.loc 1 739 0 is_stmt 0 discriminator 1
 3591 14dc DB7C     		ldrb	r3, [r3, #19]
 3592 14de 032B     		cmp	r3, #3
 3593 14e0 36D1     		bne	.L196
 3594              	.L195:
 742:pong.c        ****         btSendAndRecvStatus(0, TRUE);
 3595              		.loc 1 742 0 is_stmt 1
 3596 14e2 0121     		mov	r1, #1
 3597 14e4 0020     		mov	r0, #0
 3598 14e6 FEF715FF 		bl	btSendAndRecvStatus
 3599              	.LVL176:
 746:pong.c        ****         menu.xPos = 10;
 3600              		.loc 1 746 0
 3601 14ea 15AB     		add	r3, sp, #84
 753:pong.c        ****         menu.headerTextXpos = 20;
 3602              		.loc 1 753 0
 3603 14ec 1420     		mov	r0, #20
 3604 14ee 1873     		strb	r0, [r3, #12]
 754:pong.c        ****         menu.pChoice[0] = "Restart game";
 3605              		.loc 1 754 0
 3606 14f0 3E48     		ldr	r0, .L286+48
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 98


 746:pong.c        ****         menu.xPos = 10;
 3607              		.loc 1 746 0
 3608 14f2 0A22     		mov	r2, #10
 3609 14f4 1A70     		strb	r2, [r3]
 754:pong.c        ****         menu.pChoice[0] = "Restart game";
 3610              		.loc 1 754 0
 3611 14f6 1990     		str	r0, [sp, #100]
 747:pong.c        ****         menu.yPos = 40;
 3612              		.loc 1 747 0
 3613 14f8 2822     		mov	r2, #40
 755:pong.c        ****         menu.pChoice[1] = "End game";
 3614              		.loc 1 755 0
 3615 14fa 3D48     		ldr	r0, .L286+52
 747:pong.c        ****         menu.yPos = 40;
 3616              		.loc 1 747 0
 3617 14fc 5A70     		strb	r2, [r3, #1]
 748:pong.c        ****         menu.xLen = 6+(12*8);
 3618              		.loc 1 748 0
 3619 14fe 6622     		mov	r2, #102
 3620 1500 9A70     		strb	r2, [r3, #2]
 751:pong.c        ****         menu.initialChoice = 0;
 3621              		.loc 1 751 0
 3622 1502 0021     		mov	r1, #0
 755:pong.c        ****         menu.pChoice[1] = "End game";
 3623              		.loc 1 755 0
 3624 1504 1A90     		str	r0, [sp, #104]
 749:pong.c        ****         menu.yLen = 4*14;
 3625              		.loc 1 749 0
 3626 1506 3822     		mov	r2, #56
 756:pong.c        ****         menu.bgColor       = 0;
 3627              		.loc 1 756 0
 3628 1508 1FA8     		add	r0, sp, #124
 749:pong.c        ****         menu.yLen = 4*14;
 3629              		.loc 1 749 0
 3630 150a DA70     		strb	r2, [r3, #3]
 751:pong.c        ****         menu.initialChoice = 0;
 3631              		.loc 1 751 0
 3632 150c 5971     		strb	r1, [r3, #5]
 756:pong.c        ****         menu.bgColor       = 0;
 3633              		.loc 1 756 0
 3634 150e 0170     		strb	r1, [r0]
 758:pong.c        ****         menu.headerColor   = 0;
 3635              		.loc 1 758 0
 3636 1510 8170     		strb	r1, [r0, #2]
 757:pong.c        ****         menu.borderColor   = 0x6d;
 3637              		.loc 1 757 0
 3638 1512 6D24     		mov	r4, #109
 750:pong.c        ****         menu.noOfChoices = 2;
 3639              		.loc 1 750 0
 3640 1514 0222     		mov	r2, #2
 759:pong.c        ****         menu.choicesColor  = 0xfd;
 3641              		.loc 1 759 0
 3642 1516 6946     		mov	r1, sp
 750:pong.c        ****         menu.noOfChoices = 2;
 3643              		.loc 1 750 0
 3644 1518 1A71     		strb	r2, [r3, #4]
 757:pong.c        ****         menu.borderColor   = 0x6d;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 99


 3645              		.loc 1 757 0
 3646 151a 4470     		strb	r4, [r0, #1]
 759:pong.c        ****         menu.choicesColor  = 0xfd;
 3647              		.loc 1 759 0
 3648 151c 7F31     		add	r1, r1, #127
 3649 151e FD20     		mov	r0, #253
 752:pong.c        ****         menu.pHeaderText = "Game over!";
 3650              		.loc 1 752 0
 3651 1520 344A     		ldr	r2, .L286+56
 759:pong.c        ****         menu.choicesColor  = 0xfd;
 3652              		.loc 1 759 0
 3653 1522 0870     		strb	r0, [r1]
 760:pong.c        ****         menu.selectedColor = 0xe0;
 3654              		.loc 1 760 0
 3655 1524 E020     		mov	r0, #224
 3656 1526 20A9     		add	r1, sp, #128
 3657 1528 0870     		strb	r0, [r1]
 752:pong.c        ****         menu.pHeaderText = "Game over!";
 3658              		.loc 1 752 0
 3659 152a 1792     		str	r2, [sp, #92]
 762:pong.c        ****         switch (drawMenu(menu))
 3660              		.loc 1 762 0
 3661 152c 19A9     		add	r1, sp, #100
 3662 152e 6846     		mov	r0, sp
 3663 1530 D0C9     		ldmia	r1!, {r4, r6, r7}
 3664 1532 D0C0     		stmia	r0!, {r4, r6, r7}
 3665 1534 E0C9     		ldmia	r1!, {r5, r6, r7}
 3666 1536 E0C0     		stmia	r0!, {r5, r6, r7}
 3667 1538 30C9     		ldmia	r1!, {r4, r5}
 3668 153a 30C0     		stmia	r0!, {r4, r5}
 3669 153c 1598     		ldr	r0, [sp, #84]
 3670 153e 1699     		ldr	r1, [sp, #88]
 3671 1540 189B     		ldr	r3, [sp, #96]
 3672 1542 FFF7FEFF 		bl	drawMenu
 3673 1546 0028     		cmp	r0, #0
 3674 1548 35D0     		beq	.L199
 3675 154a 0128     		cmp	r0, #1
 3676 154c 04D1     		bne	.L203
 3677 154e 31E0     		b	.L277
 3678              	.LVL177:
 3679              	.L196:
 3680              	.LBE85:
 683:pong.c        ****     while (!gameOver)
 3681              		.loc 1 683 0 discriminator 1
 3682 1550 0D9E     		ldr	r6, [sp, #52]
 3683 1552 002E     		cmp	r6, #0
 3684 1554 00D1     		bne	.LCB3259
 3685 1556 80E4     		b	.L200	@long jump
 3686              	.LCB3259:
 3687              	.LVL178:
 3688              	.L203:
 3689              	.LBB92:
 646:pong.c        ****           done = TRUE;
 3690              		.loc 1 646 0
 3691 1558 0F9F     		ldr	r7, [sp, #60]
 3692 155a 0897     		str	r7, [sp, #32]
 3693 155c 05E0     		b	.L242
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 100


 3694              	.LVL179:
 3695              	.L224:
 3696              	.LBE92:
 3697              	.LBB93:
 3698              	.LBB71:
 568:pong.c        ****         done = FALSE; //start playing as client
 3699              		.loc 1 568 0
 3700 155e 0890     		str	r0, [sp, #32]
 3701 1560 03E0     		b	.L242
 3702              	.LVL180:
 3703              	.L244:
 3704              	.LBE71:
 3705              	.LBE93:
 3706              	.LBB94:
 633:pong.c        ****           switch (drawMenu(menu))
 3707              		.loc 1 633 0
 3708 1562 0895     		str	r5, [sp, #32]
 3709 1564 01E0     		b	.L242
 3710              	.LVL181:
 3711              	.L226:
 646:pong.c        ****           done = TRUE;
 3712              		.loc 1 646 0
 3713 1566 0124     		mov	r4, #1
 3714              	.L262:
 3715 1568 0894     		str	r4, [sp, #32]
 3716              	.LVL182:
 3717              	.L242:
 3718              	.LBE94:
 674:pong.c        ****   while (done == FALSE)
 3719              		.loc 1 674 0 discriminator 1
 3720 156a 089D     		ldr	r5, [sp, #32]
 3721 156c 002D     		cmp	r5, #0
 3722 156e 00D1     		bne	.LCB3322
 3723 1570 68E4     		b	.L202	@long jump
 3724              	.LCB3322:
 772:pong.c        ****   lcdRect(2, 16, 125, 84, 0x6d);
 3725              		.loc 1 772 0
 3726 1572 6D23     		mov	r3, #109
 3727 1574 0093     		str	r3, [sp]
 3728 1576 0220     		mov	r0, #2
 3729 1578 1021     		mov	r1, #16
 3730 157a 7D22     		mov	r2, #125
 3731 157c 5423     		mov	r3, #84
 3732 157e FFF7FEFF 		bl	lcdRect
 773:pong.c        ****   lcdRect(4, 18, 121, 80, 0x00);
 3733              		.loc 1 773 0
 3734 1582 0024     		mov	r4, #0
 3735 1584 7922     		mov	r2, #121
 3736 1586 5023     		mov	r3, #80
 3737 1588 0420     		mov	r0, #4
 3738 158a 1221     		mov	r1, #18
 3739 158c 0094     		str	r4, [sp]
 3740 158e FFF7FEFF 		bl	lcdRect
 774:pong.c        ****   lcdColor(0x00,0xfd);
 3741              		.loc 1 774 0
 3742 1592 201C     		mov	r0, r4
 3743 1594 FD21     		mov	r1, #253
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 101


 3744 1596 FFF7FEFF 		bl	lcdColor
 775:pong.c        ****   lcdGotoxy(8,18);
 3745              		.loc 1 775 0
 3746 159a 1221     		mov	r1, #18
 3747 159c 0820     		mov	r0, #8
 3748 159e FFF7FEFF 		bl	lcdGotoxy
 776:pong.c        ****   lcdPuts("Exiting...");
 3749              		.loc 1 776 0
 3750 15a2 1548     		ldr	r0, .L286+60
 3751 15a4 FFF7FEFF 		bl	lcdPuts
 778:pong.c        ****   activateBtProc();
 3752              		.loc 1 778 0
 3753 15a8 FFF7FEFF 		bl	activateBtProc
 779:pong.c        **** }
 3754              		.loc 1 779 0
 3755 15ac 31B0     		add	sp, sp, #196
 3756              		@ sp needed for prologue
 3757 15ae F0BC     		pop	{r4, r5, r6, r7}
 3758 15b0 01BC     		pop	{r0}
 3759 15b2 0047     		bx	r0
 3760              	.LVL183:
 3761              	.L277:
 3762              	.LBB95:
 765:pong.c        ****         case 1: done = TRUE; break;   //End game
 3763              		.loc 1 765 0
 3764 15b4 0890     		str	r0, [sp, #32]
 3765              	.L199:
 3766              	.LVL184:
 3767              	.LBB91:
 3768              	.LBB90:
 335:pong.c        ****       pDefending = &player1;
 3769              		.loc 1 335 0
 3770 15b6 089E     		ldr	r6, [sp, #32]
 3771 15b8 0F96     		str	r6, [sp, #60]
 3772 15ba CDE7     		b	.L203
 3773              	.L287:
 3774              		.align	2
 3775              	.L286:
 3776 15bc 00000040 		.word	1073741824
 3777 15c0 00000000 		.word	0
 3778 15c4 9999E93F 		.word	1072273817
 3779 15c8 9A999999 		.word	-1717986918
 3780 15cc 00000000 		.word	.LANCHOR2
 3781 15d0 00000000 		.word	0
 3782 15d4 00000000 		.word	0
 3783 15d8 00206040 		.word	1080041472
 3784 15dc 00000000 		.word	0
 3785 15e0 34000000 		.word	.LANCHOR2+52
 3786 15e4 00000000 		.word	ms
 3787 15e8 80000000 		.word	.LANCHOR3
 3788 15ec E0010000 		.word	.LC139
 3789 15f0 CC010000 		.word	.LC135
 3790 15f4 D5010000 		.word	.LC137
 3791 15f8 ED010000 		.word	.LC141
 3792              	.LBE90:
 3793              	.LBE91:
 3794              	.LBE95:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 102


 3795              		.cfi_endproc
 3796              	.LFE7:
 3797              		.size	playPong, .-playPong
 3798              		.section	.rodata
 3799              		.set	.LANCHOR0,. + 0
 3800              		.type	toHex.3480, %object
 3801              		.size	toHex.3480, 16
 3802              	toHex.3480:
 3803 0000 30       		.byte	48
 3804 0001 31       		.byte	49
 3805 0002 32       		.byte	50
 3806 0003 33       		.byte	51
 3807 0004 34       		.byte	52
 3808 0005 35       		.byte	53
 3809 0006 36       		.byte	54
 3810 0007 37       		.byte	55
 3811 0008 38       		.byte	56
 3812 0009 39       		.byte	57
 3813 000a 41       		.byte	65
 3814 000b 42       		.byte	66
 3815 000c 43       		.byte	67
 3816 000d 44       		.byte	68
 3817 000e 45       		.byte	69
 3818 000f 46       		.byte	70
 3819              		.section	.rodata.str1.1,"aMS",%progbits,1
 3820              	.LC4:
 3821 0000 2D00     		.ascii	"-\000"
 3822              	.LC7:
 3823 0002 506F6E67 		.ascii	"Pong\000"
 3823      00
 3824              	.LC23:
 3825 0007 4E4F2043 		.ascii	"NO CARRIER\000"
 3825      41525249 
 3825      455200
 3826              	.LC41:
 3827 0012 4661696C 		.ascii	"Failed to\000"
 3827      65642074 
 3827      6F00
 3828              	.LC43:
 3829 001c 636F6E6E 		.ascii	"connect...\000"
 3829      6563742E 
 3829      2E2E00
 3830              	.LC46:
 3831 0027 54797065 		.ascii	"Type of Game?\000"
 3831      206F6620 
 3831      47616D65 
 3831      3F00
 3832              	.LC48:
 3833 0035 53696E67 		.ascii	"Single player\000"
 3833      6C652070 
 3833      6C617965 
 3833      7200
 3834              	.LC50:
 3835 0043 4475616C 		.ascii	"Dual - Client\000"
 3835      202D2043 
 3835      6C69656E 
 3835      7400
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 103


 3836              	.LC52:
 3837 0051 4475616C 		.ascii	"Dual - Server\000"
 3837      202D2053 
 3837      65727665 
 3837      7200
 3838              	.LC55:
 3839 005f 496E7175 		.ascii	"Inquiry\000"
 3839      69727900 
 3840              	.LC57:
 3841 0067 2B2B2B00 		.ascii	"+++\000"
 3842              	.LC59:
 3843 006b 41542B42 		.ascii	"AT+BTCAN\015\000"
 3843      5443414E 
 3843      0D00
 3844              	.LC61:
 3845 0075 41542B42 		.ascii	"AT+BTINQ=6\015\000"
 3845      54494E51 
 3845      3D360D00 
 3846              	.LC64:
 3847 0081 256300   		.ascii	"%c\000"
 3848              	.LC66:
 3849 0084 2B425449 		.ascii	"+BTINQ: \000"
 3849      4E513A20 
 3849      00
 3850              	.LC68:
 3851 008d 2B425449 		.ascii	"+BTINQ: COMPLETE\000"
 3851      4E513A20 
 3851      434F4D50 
 3851      4C455445 
 3851      00
 3852              	.LC70:
 3853 009e 20202000 		.ascii	"   \000"
 3854              	.LC72:
 3855 00a2 2E202000 		.ascii	".  \000"
 3856              	.LC74:
 3857 00a6 2E2E2000 		.ascii	".. \000"
 3858              	.LC76:
 3859 00aa 2E2E2E00 		.ascii	"...\000"
 3860              	.LC78:
 3861 00ae 202E2E00 		.ascii	" ..\000"
 3862              	.LC80:
 3863 00b2 20202E00 		.ascii	"  .\000"
 3864              	.LC82:
 3865 00b6 41542B42 		.ascii	"AT+BTSDP=\000"
 3865      54534450 
 3865      3D00
 3866              	.LC84:
 3867 00c0 0D00     		.ascii	"\015\000"
 3868              	.LC86:
 3869 00c2 2B425453 		.ascii	"+BTSDP: COMPLETE\000"
 3869      44503A20 
 3869      434F4D50 
 3869      4C455445 
 3869      00
 3870              	.LC88:
 3871 00d3 2B425453 		.ascii	"+BTSDP: \000"
 3871      44503A20 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 104


 3871      00
 3872              	.LC90:
 3873 00dc 50696E67 		.ascii	"PingPongServer\000"
 3873      506F6E67 
 3873      53657276 
 3873      657200
 3874              	.LC92:
 3875 00eb 2A202000 		.ascii	"*  \000"
 3876              	.LC94:
 3877 00ef 2A2A2000 		.ascii	"** \000"
 3878              	.LC96:
 3879 00f3 2A2A2A00 		.ascii	"***\000"
 3880              	.LC98:
 3881 00f7 202A2A00 		.ascii	" **\000"
 3882              	.LC100:
 3883 00fb 20202A00 		.ascii	"  *\000"
 3884              	.LC102:
 3885 00ff 2D646F6E 		.ascii	"-done\000"
 3885      6500
 3886              	.LC104:
 3887 0105 436F6E6E 		.ascii	"Connecting\000"
 3887      65637469 
 3887      6E6700
 3888              	.LC106:
 3889 0110 41542B42 		.ascii	"AT+BTCLT=\"\000"
 3889      54434C54 
 3889      3D2200
 3890              	.LC108:
 3891 011b 222C3230 		.ascii	"\",20,3\015\000"
 3891      2C330D00 
 3892              	.LC110:
 3893 0123 434F4E4E 		.ascii	"CONNECT \000"
 3893      45435420 
 3893      00
 3894              	.LC113:
 3895 012c 4C455453 		.ascii	"LETS START PLAYING\000"
 3895      20535441 
 3895      52542050 
 3895      4C415949 
 3895      4E4700
 3896              	.LC115:
 3897 013f 57616974 		.ascii	"Waiting for\000"
 3897      696E6720 
 3897      666F7200 
 3898              	.LC117:
 3899 014b 636C6965 		.ascii	"client conn\000"
 3899      6E742063 
 3899      6F6E6E00 
 3900              	.LC119:
 3901 0157 41542B42 		.ascii	"AT+BTSRV=20,\"PingPongServer\"\015\000"
 3901      54535256 
 3901      3D32302C 
 3901      2250696E 
 3901      67506F6E 
 3902              	.LC121:
 3903 0175 52657175 		.ascii	"Request from\000"
 3903      65737420 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 105


 3903      66726F6D 
 3903      00
 3904              	.LC123:
 3905 0182 202000   		.ascii	"  \000"
 3906              	.LC125:
 3907 0185 41636365 		.ascii	"Accept conn?\000"
 3907      70742063 
 3907      6F6E6E3F 
 3907      00
 3908              	.LC127:
 3909 0192 53746172 		.ascii	"Start playing\000"
 3909      7420706C 
 3909      6179696E 
 3909      6700
 3910              	.LC129:
 3911 01a0 52656675 		.ascii	"Refuse\000"
 3911      736500
 3912              	.LC131:
 3913 01a7 0A4C4554 		.ascii	"\012LETS START PLAYING\012\000"
 3913      53205354 
 3913      41525420 
 3913      504C4159 
 3913      494E470A 
 3914              	.LC133:
 3915 01bc 4C6F7374 		.ascii	"Lost connection\000"
 3915      20636F6E 
 3915      6E656374 
 3915      696F6E00 
 3916              	.LC135:
 3917 01cc 456E6420 		.ascii	"End game\000"
 3917      67616D65 
 3917      00
 3918              	.LC137:
 3919 01d5 47616D65 		.ascii	"Game over!\000"
 3919      206F7665 
 3919      722100
 3920              	.LC139:
 3921 01e0 52657374 		.ascii	"Restart game\000"
 3921      61727420 
 3921      67616D65 
 3921      00
 3922              	.LC141:
 3923 01ed 45786974 		.ascii	"Exiting...\000"
 3923      696E672E 
 3923      2E2E00
 3924              		.data
 3925              		.align	2
 3926              		.set	.LANCHOR2,. + 0
 3927              		.type	player1, %object
 3928              		.size	player1, 16
 3929              	player1:
 3930 0000 00       		.byte	0
 3931 0001 41       		.byte	65
 3932 0002 10       		.byte	16
 3933 0003 00       		.byte	0
 3934 0004 E0       		.byte	-32
 3935 0005 00       		.byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 106


 3936 0006 00000000 		.space	10
 3936      00000000 
 3936      0000
 3937              		.type	player2, %object
 3938              		.size	player2, 16
 3939              	player2:
 3940 0010 7E       		.byte	126
 3941 0011 41       		.byte	65
 3942 0012 10       		.byte	16
 3943 0013 00       		.byte	0
 3944 0014 1C       		.byte	28
 3945 0015 01       		.byte	1
 3946 0016 00000000 		.space	10
 3946      00000000 
 3946      0000
 3947              		.type	pServingPlayer, %object
 3948              		.size	pServingPlayer, 4
 3949              	pServingPlayer:
 3950 0020 00000000 		.word	player1
 3951              		.type	ball, %object
 3952              		.size	ball, 52
 3953              	ball:
 3954 0024 00000000 		.word	0
 3955 0028 00000000 		.word	0
 3956 002c 00000000 		.word	0
 3957 0030 00000000 		.word	0
 3958 0034 02       		.byte	2
 3959 0035 FF       		.byte	-1
 3960 0036 0000     		.space	2
 3961 0038 CCCC0440 		.word	1074056396
 3962 003c CDCCCCCC 		.word	-858993459
 3963 0040 0000F03F 		.word	1072693248
 3964 0044 00000000 		.word	0
 3965 0048 00000000 		.space	16
 3965      00000000 
 3965      00000000 
 3965      00000000 
 3966              		.type	serving, %object
 3967              		.size	serving, 1
 3968              	serving:
 3969 0058 01       		.byte	1
 3970 0059 000000   		.space	3
 3971              		.type	pActivePlayer, %object
 3972              		.size	pActivePlayer, 4
 3973              	pActivePlayer:
 3974 005c 00000000 		.word	player1
 3975              		.bss
 3976              		.align	2
 3977              		.set	.LANCHOR1,. + 0
 3978              		.set	.LANCHOR3,. + 128
 3979              		.type	foundBtUnits, %object
 3980              		.size	foundBtUnits, 160
 3981              	foundBtUnits:
 3982 0000 00000000 		.space	160
 3982      00000000 
 3982      00000000 
 3982      00000000 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 107


 3982      00000000 
 3983              		.type	gameType, %object
 3984              		.size	gameType, 1
 3985              	gameType:
 3986 00a0 00       		.space	1
 3987              		.type	recvBuf, %object
 3988              		.size	recvBuf, 40
 3989              	recvBuf:
 3990 00a1 00000000 		.space	40
 3990      00000000 
 3990      00000000 
 3990      00000000 
 3990      00000000 
 3991              		.type	recvPos, %object
 3992              		.size	recvPos, 1
 3993              	recvPos:
 3994 00c9 00       		.space	1
 3995              		.type	remoteClientKey, %object
 3996              		.size	remoteClientKey, 1
 3997              	remoteClientKey:
 3998 00ca 00       		.space	1
 3999 00cb 00       		.space	1
 4000              		.type	lastStatus, %object
 4001              		.size	lastStatus, 4
 4002              	lastStatus:
 4003 00cc 00000000 		.space	4
 4004              		.type	lastMove, %object
 4005              		.size	lastMove, 4
 4006              	lastMove:
 4007 00d0 00000000 		.space	4
 4008              		.text
 4009              	.Letext0:
 4010              		.file 2 "./startup/../pre_emptive_os/api/../api/general.h"
 4011              		.file 3 "select.h"
 4012              		.section	.debug_info,"",%progbits
 4013              	.Ldebug_info0:
 4014 0000 C30B0000 		.4byte	0xbc3
 4015 0004 0200     		.2byte	0x2
 4016 0006 00000000 		.4byte	.Ldebug_abbrev0
 4017 000a 04       		.byte	0x4
 4018 000b 01       		.uleb128 0x1
 4019 000c 66030000 		.4byte	.LASF102
 4020 0010 01       		.byte	0x1
 4021 0011 D9020000 		.4byte	.LASF103
 4022 0015 71000000 		.4byte	.LASF104
 4023 0019 00000000 		.4byte	.Ltext0
 4024 001d FC150000 		.4byte	.Letext0
 4025 0021 00000000 		.4byte	.Ldebug_line0
 4026 0025 02       		.uleb128 0x2
 4027 0026 74553800 		.ascii	"tU8\000"
 4028 002a 02       		.byte	0x2
 4029 002b 47       		.byte	0x47
 4030 002c 30000000 		.4byte	0x30
 4031 0030 03       		.uleb128 0x3
 4032 0031 01       		.byte	0x1
 4033 0032 08       		.byte	0x8
 4034 0033 1E030000 		.4byte	.LASF0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 108


 4035 0037 03       		.uleb128 0x3
 4036 0038 02       		.byte	0x2
 4037 0039 07       		.byte	0x7
 4038 003a 1C020000 		.4byte	.LASF1
 4039 003e 04       		.uleb128 0x4
 4040 003f 55020000 		.4byte	.LASF2
 4041 0043 02       		.byte	0x2
 4042 0044 49       		.byte	0x49
 4043 0045 49000000 		.4byte	0x49
 4044 0049 03       		.uleb128 0x3
 4045 004a 04       		.byte	0x4
 4046 004b 07       		.byte	0x7
 4047 004c BE010000 		.4byte	.LASF3
 4048 0050 02       		.uleb128 0x2
 4049 0051 74533800 		.ascii	"tS8\000"
 4050 0055 02       		.byte	0x2
 4051 0056 4A       		.byte	0x4a
 4052 0057 5B000000 		.4byte	0x5b
 4053 005b 03       		.uleb128 0x3
 4054 005c 01       		.byte	0x1
 4055 005d 06       		.byte	0x6
 4056 005e E8000000 		.4byte	.LASF4
 4057 0062 03       		.uleb128 0x3
 4058 0063 02       		.byte	0x2
 4059 0064 05       		.byte	0x5
 4060 0065 2C030000 		.4byte	.LASF5
 4061 0069 05       		.uleb128 0x5
 4062 006a 04       		.byte	0x4
 4063 006b 05       		.byte	0x5
 4064 006c 696E7400 		.ascii	"int\000"
 4065 0070 04       		.uleb128 0x4
 4066 0071 F4000000 		.4byte	.LASF6
 4067 0075 02       		.byte	0x2
 4068 0076 4D       		.byte	0x4d
 4069 0077 30000000 		.4byte	0x30
 4070 007b 06       		.uleb128 0x6
 4071 007c 04       		.byte	0x4
 4072 007d 25000000 		.4byte	0x25
 4073 0081 03       		.uleb128 0x3
 4074 0082 04       		.byte	0x4
 4075 0083 07       		.byte	0x7
 4076 0084 F0010000 		.4byte	.LASF7
 4077 0088 03       		.uleb128 0x3
 4078 0089 08       		.byte	0x8
 4079 008a 05       		.byte	0x5
 4080 008b DA000000 		.4byte	.LASF8
 4081 008f 03       		.uleb128 0x3
 4082 0090 08       		.byte	0x8
 4083 0091 07       		.byte	0x7
 4084 0092 54000000 		.4byte	.LASF9
 4085 0096 03       		.uleb128 0x3
 4086 0097 04       		.byte	0x4
 4087 0098 05       		.byte	0x5
 4088 0099 FA000000 		.4byte	.LASF10
 4089 009d 03       		.uleb128 0x3
 4090 009e 01       		.byte	0x1
 4091 009f 08       		.byte	0x8
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 109


 4092 00a0 78030000 		.4byte	.LASF11
 4093 00a4 03       		.uleb128 0x3
 4094 00a5 08       		.byte	0x8
 4095 00a6 04       		.byte	0x4
 4096 00a7 35010000 		.4byte	.LASF12
 4097 00ab 03       		.uleb128 0x3
 4098 00ac 04       		.byte	0x4
 4099 00ad 04       		.byte	0x4
 4100 00ae C3020000 		.4byte	.LASF13
 4101 00b2 07       		.uleb128 0x7
 4102 00b3 30       		.byte	0x30
 4103 00b4 03       		.byte	0x3
 4104 00b5 19       		.byte	0x19
 4105 00b6 7F010000 		.4byte	0x17f
 4106 00ba 08       		.uleb128 0x8
 4107 00bb 06040000 		.4byte	.LASF14
 4108 00bf 03       		.byte	0x3
 4109 00c0 1B       		.byte	0x1b
 4110 00c1 25000000 		.4byte	0x25
 4111 00c5 02       		.byte	0x2
 4112 00c6 23       		.byte	0x23
 4113 00c7 00       		.uleb128 0
 4114 00c8 08       		.uleb128 0x8
 4115 00c9 B7030000 		.4byte	.LASF15
 4116 00cd 03       		.byte	0x3
 4117 00ce 1C       		.byte	0x1c
 4118 00cf 25000000 		.4byte	0x25
 4119 00d3 02       		.byte	0x2
 4120 00d4 23       		.byte	0x23
 4121 00d5 01       		.uleb128 0x1
 4122 00d6 08       		.uleb128 0x8
 4123 00d7 D5010000 		.4byte	.LASF16
 4124 00db 03       		.byte	0x3
 4125 00dc 1D       		.byte	0x1d
 4126 00dd 25000000 		.4byte	0x25
 4127 00e1 02       		.byte	0x2
 4128 00e2 23       		.byte	0x23
 4129 00e3 02       		.uleb128 0x2
 4130 00e4 08       		.uleb128 0x8
 4131 00e5 30010000 		.4byte	.LASF17
 4132 00e9 03       		.byte	0x3
 4133 00ea 1E       		.byte	0x1e
 4134 00eb 25000000 		.4byte	0x25
 4135 00ef 02       		.byte	0x2
 4136 00f0 23       		.byte	0x23
 4137 00f1 03       		.uleb128 0x3
 4138 00f2 08       		.uleb128 0x8
 4139 00f3 79010000 		.4byte	.LASF18
 4140 00f7 03       		.byte	0x3
 4141 00f8 1F       		.byte	0x1f
 4142 00f9 25000000 		.4byte	0x25
 4143 00fd 02       		.byte	0x2
 4144 00fe 23       		.byte	0x23
 4145 00ff 04       		.uleb128 0x4
 4146 0100 08       		.uleb128 0x8
 4147 0101 AA010000 		.4byte	.LASF19
 4148 0105 03       		.byte	0x3
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 110


 4149 0106 20       		.byte	0x20
 4150 0107 25000000 		.4byte	0x25
 4151 010b 02       		.byte	0x2
 4152 010c 23       		.byte	0x23
 4153 010d 05       		.uleb128 0x5
 4154 010e 08       		.uleb128 0x8
 4155 010f 37040000 		.4byte	.LASF20
 4156 0113 03       		.byte	0x3
 4157 0114 21       		.byte	0x21
 4158 0115 7B000000 		.4byte	0x7b
 4159 0119 02       		.byte	0x2
 4160 011a 23       		.byte	0x23
 4161 011b 08       		.uleb128 0x8
 4162 011c 08       		.uleb128 0x8
 4163 011d E1010000 		.4byte	.LASF21
 4164 0121 03       		.byte	0x3
 4165 0122 22       		.byte	0x22
 4166 0123 25000000 		.4byte	0x25
 4167 0127 02       		.byte	0x2
 4168 0128 23       		.byte	0x23
 4169 0129 0C       		.uleb128 0xc
 4170 012a 08       		.uleb128 0x8
 4171 012b 72020000 		.4byte	.LASF22
 4172 012f 03       		.byte	0x3
 4173 0130 23       		.byte	0x23
 4174 0131 7F010000 		.4byte	0x17f
 4175 0135 02       		.byte	0x2
 4176 0136 23       		.byte	0x23
 4177 0137 10       		.uleb128 0x10
 4178 0138 08       		.uleb128 0x8
 4179 0139 7A020000 		.4byte	.LASF23
 4180 013d 03       		.byte	0x3
 4181 013e 24       		.byte	0x24
 4182 013f 25000000 		.4byte	0x25
 4183 0143 02       		.byte	0x2
 4184 0144 23       		.byte	0x23
 4185 0145 28       		.uleb128 0x28
 4186 0146 08       		.uleb128 0x8
 4187 0147 C4000000 		.4byte	.LASF24
 4188 014b 03       		.byte	0x3
 4189 014c 25       		.byte	0x25
 4190 014d 25000000 		.4byte	0x25
 4191 0151 02       		.byte	0x2
 4192 0152 23       		.byte	0x23
 4193 0153 29       		.uleb128 0x29
 4194 0154 08       		.uleb128 0x8
 4195 0155 E0030000 		.4byte	.LASF25
 4196 0159 03       		.byte	0x3
 4197 015a 26       		.byte	0x26
 4198 015b 25000000 		.4byte	0x25
 4199 015f 02       		.byte	0x2
 4200 0160 23       		.byte	0x23
 4201 0161 2A       		.uleb128 0x2a
 4202 0162 08       		.uleb128 0x8
 4203 0163 85010000 		.4byte	.LASF26
 4204 0167 03       		.byte	0x3
 4205 0168 27       		.byte	0x27
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 111


 4206 0169 25000000 		.4byte	0x25
 4207 016d 02       		.byte	0x2
 4208 016e 23       		.byte	0x23
 4209 016f 2B       		.uleb128 0x2b
 4210 0170 08       		.uleb128 0x8
 4211 0171 A6000000 		.4byte	.LASF27
 4212 0175 03       		.byte	0x3
 4213 0176 28       		.byte	0x28
 4214 0177 25000000 		.4byte	0x25
 4215 017b 02       		.byte	0x2
 4216 017c 23       		.byte	0x23
 4217 017d 2C       		.uleb128 0x2c
 4218 017e 00       		.byte	0
 4219 017f 09       		.uleb128 0x9
 4220 0180 7B000000 		.4byte	0x7b
 4221 0184 8F010000 		.4byte	0x18f
 4222 0188 0A       		.uleb128 0xa
 4223 0189 81000000 		.4byte	0x81
 4224 018d 05       		.byte	0x5
 4225 018e 00       		.byte	0
 4226 018f 04       		.uleb128 0x4
 4227 0190 04030000 		.4byte	.LASF28
 4228 0194 03       		.byte	0x3
 4229 0195 29       		.byte	0x29
 4230 0196 B2000000 		.4byte	0xb2
 4231 019a 0B       		.uleb128 0xb
 4232 019b 9E010000 		.4byte	.LASF35
 4233 019f 10       		.byte	0x10
 4234 01a0 01       		.byte	0x1
 4235 01a1 45       		.byte	0x45
 4236 01a2 17020000 		.4byte	0x217
 4237 01a6 08       		.uleb128 0x8
 4238 01a7 06040000 		.4byte	.LASF14
 4239 01ab 01       		.byte	0x1
 4240 01ac 47       		.byte	0x47
 4241 01ad 25000000 		.4byte	0x25
 4242 01b1 02       		.byte	0x2
 4243 01b2 23       		.byte	0x23
 4244 01b3 00       		.uleb128 0
 4245 01b4 08       		.uleb128 0x8
 4246 01b5 B7030000 		.4byte	.LASF15
 4247 01b9 01       		.byte	0x1
 4248 01ba 48       		.byte	0x48
 4249 01bb 25000000 		.4byte	0x25
 4250 01bf 02       		.byte	0x2
 4251 01c0 23       		.byte	0x23
 4252 01c1 01       		.uleb128 0x1
 4253 01c2 08       		.uleb128 0x8
 4254 01c3 17020000 		.4byte	.LASF29
 4255 01c7 01       		.byte	0x1
 4256 01c8 49       		.byte	0x49
 4257 01c9 25000000 		.4byte	0x25
 4258 01cd 02       		.byte	0x2
 4259 01ce 23       		.byte	0x23
 4260 01cf 02       		.uleb128 0x2
 4261 01d0 08       		.uleb128 0x8
 4262 01d1 56010000 		.4byte	.LASF30
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 112


 4263 01d5 01       		.byte	0x1
 4264 01d6 4A       		.byte	0x4a
 4265 01d7 25000000 		.4byte	0x25
 4266 01db 02       		.byte	0x2
 4267 01dc 23       		.byte	0x23
 4268 01dd 03       		.uleb128 0x3
 4269 01de 08       		.uleb128 0x8
 4270 01df 72030000 		.4byte	.LASF31
 4271 01e3 01       		.byte	0x1
 4272 01e4 4B       		.byte	0x4b
 4273 01e5 25000000 		.4byte	0x25
 4274 01e9 02       		.byte	0x2
 4275 01ea 23       		.byte	0x23
 4276 01eb 04       		.uleb128 0x4
 4277 01ec 08       		.uleb128 0x8
 4278 01ed 4A000000 		.4byte	.LASF32
 4279 01f1 01       		.byte	0x1
 4280 01f2 4C       		.byte	0x4c
 4281 01f3 25000000 		.4byte	0x25
 4282 01f7 02       		.byte	0x2
 4283 01f8 23       		.byte	0x23
 4284 01f9 05       		.uleb128 0x5
 4285 01fa 08       		.uleb128 0x8
 4286 01fb 41000000 		.4byte	.LASF33
 4287 01ff 01       		.byte	0x1
 4288 0200 4D       		.byte	0x4d
 4289 0201 3E000000 		.4byte	0x3e
 4290 0205 02       		.byte	0x2
 4291 0206 23       		.byte	0x23
 4292 0207 08       		.uleb128 0x8
 4293 0208 0C       		.uleb128 0xc
 4294 0209 6B657900 		.ascii	"key\000"
 4295 020d 01       		.byte	0x1
 4296 020e 4E       		.byte	0x4e
 4297 020f 25000000 		.4byte	0x25
 4298 0213 02       		.byte	0x2
 4299 0214 23       		.byte	0x23
 4300 0215 0C       		.uleb128 0xc
 4301 0216 00       		.byte	0
 4302 0217 04       		.uleb128 0x4
 4303 0218 CA030000 		.4byte	.LASF34
 4304 021c 01       		.byte	0x1
 4305 021d 4F       		.byte	0x4f
 4306 021e 9A010000 		.4byte	0x19a
 4307 0222 0B       		.uleb128 0xb
 4308 0223 D0000000 		.4byte	.LASF36
 4309 0227 34       		.byte	0x34
 4310 0228 01       		.byte	0x1
 4311 0229 51       		.byte	0x51
 4312 022a 9F020000 		.4byte	0x29f
 4313 022e 08       		.uleb128 0x8
 4314 022f 06040000 		.4byte	.LASF14
 4315 0233 01       		.byte	0x1
 4316 0234 53       		.byte	0x53
 4317 0235 A4000000 		.4byte	0xa4
 4318 0239 02       		.byte	0x2
 4319 023a 23       		.byte	0x23
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 113


 4320 023b 00       		.uleb128 0
 4321 023c 08       		.uleb128 0x8
 4322 023d B7030000 		.4byte	.LASF15
 4323 0241 01       		.byte	0x1
 4324 0242 54       		.byte	0x54
 4325 0243 A4000000 		.4byte	0xa4
 4326 0247 02       		.byte	0x2
 4327 0248 23       		.byte	0x23
 4328 0249 08       		.uleb128 0x8
 4329 024a 08       		.uleb128 0x8
 4330 024b 17020000 		.4byte	.LASF29
 4331 024f 01       		.byte	0x1
 4332 0250 55       		.byte	0x55
 4333 0251 25000000 		.4byte	0x25
 4334 0255 02       		.byte	0x2
 4335 0256 23       		.byte	0x23
 4336 0257 10       		.uleb128 0x10
 4337 0258 08       		.uleb128 0x8
 4338 0259 72030000 		.4byte	.LASF31
 4339 025d 01       		.byte	0x1
 4340 025e 56       		.byte	0x56
 4341 025f 25000000 		.4byte	0x25
 4342 0263 02       		.byte	0x2
 4343 0264 23       		.byte	0x23
 4344 0265 11       		.uleb128 0x11
 4345 0266 08       		.uleb128 0x8
 4346 0267 65010000 		.4byte	.LASF37
 4347 026b 01       		.byte	0x1
 4348 026c 57       		.byte	0x57
 4349 026d A4000000 		.4byte	0xa4
 4350 0271 02       		.byte	0x2
 4351 0272 23       		.byte	0x23
 4352 0273 14       		.uleb128 0x14
 4353 0274 08       		.uleb128 0x8
 4354 0275 2F020000 		.4byte	.LASF38
 4355 0279 01       		.byte	0x1
 4356 027a 58       		.byte	0x58
 4357 027b A4000000 		.4byte	0xa4
 4358 027f 02       		.byte	0x2
 4359 0280 23       		.byte	0x23
 4360 0281 1C       		.uleb128 0x1c
 4361 0282 08       		.uleb128 0x8
 4362 0283 4B030000 		.4byte	.LASF39
 4363 0287 01       		.byte	0x1
 4364 0288 59       		.byte	0x59
 4365 0289 A4000000 		.4byte	0xa4
 4366 028d 02       		.byte	0x2
 4367 028e 23       		.byte	0x23
 4368 028f 24       		.uleb128 0x24
 4369 0290 08       		.uleb128 0x8
 4370 0291 D3020000 		.4byte	.LASF40
 4371 0295 01       		.byte	0x1
 4372 0296 5A       		.byte	0x5a
 4373 0297 A4000000 		.4byte	0xa4
 4374 029b 02       		.byte	0x2
 4375 029c 23       		.byte	0x23
 4376 029d 2C       		.uleb128 0x2c
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 114


 4377 029e 00       		.byte	0
 4378 029f 04       		.uleb128 0x4
 4379 02a0 CB010000 		.4byte	.LASF41
 4380 02a4 01       		.byte	0x1
 4381 02a5 5B       		.byte	0x5b
 4382 02a6 22020000 		.4byte	0x222
 4383 02aa 07       		.uleb128 0x7
 4384 02ab 20       		.byte	0x20
 4385 02ac 01       		.byte	0x1
 4386 02ad 63       		.byte	0x63
 4387 02ae DD020000 		.4byte	0x2dd
 4388 02b2 08       		.uleb128 0x8
 4389 02b3 DA010000 		.4byte	.LASF42
 4390 02b7 01       		.byte	0x1
 4391 02b8 65       		.byte	0x65
 4392 02b9 25000000 		.4byte	0x25
 4393 02bd 02       		.byte	0x2
 4394 02be 23       		.byte	0x23
 4395 02bf 00       		.uleb128 0
 4396 02c0 08       		.uleb128 0x8
 4397 02c1 C9020000 		.4byte	.LASF43
 4398 02c5 01       		.byte	0x1
 4399 02c6 66       		.byte	0x66
 4400 02c7 DD020000 		.4byte	0x2dd
 4401 02cb 02       		.byte	0x2
 4402 02cc 23       		.byte	0x23
 4403 02cd 01       		.uleb128 0x1
 4404 02ce 08       		.uleb128 0x8
 4405 02cf 5F030000 		.4byte	.LASF44
 4406 02d3 01       		.byte	0x1
 4407 02d4 67       		.byte	0x67
 4408 02d5 ED020000 		.4byte	0x2ed
 4409 02d9 02       		.byte	0x2
 4410 02da 23       		.byte	0x23
 4411 02db 0E       		.uleb128 0xe
 4412 02dc 00       		.byte	0
 4413 02dd 09       		.uleb128 0x9
 4414 02de 25000000 		.4byte	0x25
 4415 02e2 ED020000 		.4byte	0x2ed
 4416 02e6 0A       		.uleb128 0xa
 4417 02e7 81000000 		.4byte	0x81
 4418 02eb 0C       		.byte	0xc
 4419 02ec 00       		.byte	0
 4420 02ed 09       		.uleb128 0x9
 4421 02ee 25000000 		.4byte	0x25
 4422 02f2 FD020000 		.4byte	0x2fd
 4423 02f6 0A       		.uleb128 0xa
 4424 02f7 81000000 		.4byte	0x81
 4425 02fb 10       		.byte	0x10
 4426 02fc 00       		.byte	0
 4427 02fd 04       		.uleb128 0x4
 4428 02fe 37000000 		.4byte	.LASF45
 4429 0302 01       		.byte	0x1
 4430 0303 68       		.byte	0x68
 4431 0304 AA020000 		.4byte	0x2aa
 4432 0308 0D       		.uleb128 0xd
 4433 0309 92010000 		.4byte	.LASF46
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 115


 4434 030d 01       		.byte	0x1
 4435 030e B0       		.byte	0xb0
 4436 030f 01       		.byte	0x1
 4437 0310 01       		.byte	0x1
 4438 0311 21030000 		.4byte	0x321
 4439 0315 0E       		.uleb128 0xe
 4440 0316 57030000 		.4byte	.LASF48
 4441 031a 01       		.byte	0x1
 4442 031b B0       		.byte	0xb0
 4443 031c 21030000 		.4byte	0x321
 4444 0320 00       		.byte	0
 4445 0321 06       		.uleb128 0x6
 4446 0322 04       		.byte	0x4
 4447 0323 17020000 		.4byte	0x217
 4448 0327 0F       		.uleb128 0xf
 4449 0328 3C010000 		.4byte	.LASF47
 4450 032c 01       		.byte	0x1
 4451 032d AD01     		.2byte	0x1ad
 4452 032f 01       		.byte	0x1
 4453 0330 01       		.byte	0x1
 4454 0331 4E030000 		.4byte	0x34e
 4455 0335 10       		.uleb128 0x10
 4456 0336 57030000 		.4byte	.LASF48
 4457 033a 01       		.byte	0x1
 4458 033b AD01     		.2byte	0x1ad
 4459 033d 21030000 		.4byte	0x321
 4460 0341 11       		.uleb128 0x11
 4461 0342 6B657900 		.ascii	"key\000"
 4462 0346 01       		.byte	0x1
 4463 0347 AD01     		.2byte	0x1ad
 4464 0349 25000000 		.4byte	0x25
 4465 034d 00       		.byte	0
 4466 034e 0F       		.uleb128 0xf
 4467 034f 15030000 		.4byte	.LASF49
 4468 0353 01       		.byte	0x1
 4469 0354 1701     		.2byte	0x117
 4470 0356 01       		.byte	0x1
 4471 0357 01       		.byte	0x1
 4472 0358 D1030000 		.4byte	0x3d1
 4473 035c 11       		.uleb128 0x11
 4474 035d 6B657900 		.ascii	"key\000"
 4475 0361 01       		.byte	0x1
 4476 0362 1701     		.2byte	0x117
 4477 0364 25000000 		.4byte	0x25
 4478 0368 12       		.uleb128 0x12
 4479 0369 AF020000 		.4byte	.LASF50
 4480 036d 01       		.byte	0x1
 4481 036e 1901     		.2byte	0x119
 4482 0370 21030000 		.4byte	0x321
 4483 0374 12       		.uleb128 0x12
 4484 0375 0A030000 		.4byte	.LASF51
 4485 0379 01       		.byte	0x1
 4486 037a 1A01     		.2byte	0x11a
 4487 037c 70000000 		.4byte	0x70
 4488 0380 13       		.uleb128 0x13
 4489 0381 64697200 		.ascii	"dir\000"
 4490 0385 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 116


 4491 0386 1B01     		.2byte	0x11b
 4492 0388 50000000 		.4byte	0x50
 4493 038c 14       		.uleb128 0x14
 4494 038d 9E030000 		.4byte	0x39e
 4495 0391 12       		.uleb128 0x12
 4496 0392 00000000 		.4byte	.LASF52
 4497 0396 01       		.byte	0x1
 4498 0397 2001     		.2byte	0x120
 4499 0399 25000000 		.4byte	0x25
 4500 039d 00       		.byte	0
 4501 039e 15       		.uleb128 0x15
 4502 039f 12       		.uleb128 0x12
 4503 03a0 02020000 		.4byte	.LASF53
 4504 03a4 01       		.byte	0x1
 4505 03a5 5E01     		.2byte	0x15e
 4506 03a7 A4000000 		.4byte	0xa4
 4507 03ab 12       		.uleb128 0x12
 4508 03ac 6B000000 		.4byte	.LASF54
 4509 03b0 01       		.byte	0x1
 4510 03b1 5F01     		.2byte	0x15f
 4511 03b3 A4000000 		.4byte	0xa4
 4512 03b7 12       		.uleb128 0x12
 4513 03b8 5C010000 		.4byte	.LASF55
 4514 03bc 01       		.byte	0x1
 4515 03bd 6001     		.2byte	0x160
 4516 03bf A4000000 		.4byte	0xa4
 4517 03c3 12       		.uleb128 0x12
 4518 03c4 B7030000 		.4byte	.LASF15
 4519 03c8 01       		.byte	0x1
 4520 03c9 6201     		.2byte	0x162
 4521 03cb 25000000 		.4byte	0x25
 4522 03cf 00       		.byte	0
 4523 03d0 00       		.byte	0
 4524 03d1 16       		.uleb128 0x16
 4525 03d2 E0020000 		.4byte	.LASF73
 4526 03d6 01       		.byte	0x1
 4527 03d7 4004     		.2byte	0x440
 4528 03d9 01       		.byte	0x1
 4529 03da 70000000 		.4byte	0x70
 4530 03de 01       		.byte	0x1
 4531 03df 08040000 		.4byte	0x408
 4532 03e3 11       		.uleb128 0x11
 4533 03e4 6B657900 		.ascii	"key\000"
 4534 03e8 01       		.byte	0x1
 4535 03e9 4004     		.2byte	0x440
 4536 03eb 25000000 		.4byte	0x25
 4537 03ef 10       		.uleb128 0x10
 4538 03f0 21040000 		.4byte	.LASF56
 4539 03f4 01       		.byte	0x1
 4540 03f5 4004     		.2byte	0x440
 4541 03f7 70000000 		.4byte	0x70
 4542 03fb 13       		.uleb128 0x13
 4543 03fc 62756600 		.ascii	"buf\000"
 4544 0400 01       		.byte	0x1
 4545 0401 4204     		.2byte	0x442
 4546 0403 08040000 		.4byte	0x408
 4547 0407 00       		.byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 117


 4548 0408 09       		.uleb128 0x9
 4549 0409 25000000 		.4byte	0x25
 4550 040d 18040000 		.4byte	0x418
 4551 0411 0A       		.uleb128 0xa
 4552 0412 81000000 		.4byte	0x81
 4553 0416 0D       		.byte	0xd
 4554 0417 00       		.byte	0
 4555 0418 0F       		.uleb128 0xf
 4556 0419 47010000 		.4byte	.LASF57
 4557 041d 01       		.byte	0x1
 4558 041e EC01     		.2byte	0x1ec
 4559 0420 01       		.byte	0x1
 4560 0421 01       		.byte	0x1
 4561 0422 3F040000 		.4byte	0x43f
 4562 0426 10       		.uleb128 0x10
 4563 0427 99030000 		.4byte	.LASF58
 4564 042b 01       		.byte	0x1
 4565 042c EC01     		.2byte	0x1ec
 4566 042e 7B000000 		.4byte	0x7b
 4567 0432 10       		.uleb128 0x10
 4568 0433 00040000 		.4byte	.LASF59
 4569 0437 01       		.byte	0x1
 4570 0438 EC01     		.2byte	0x1ec
 4571 043a 25000000 		.4byte	0x25
 4572 043e 00       		.byte	0
 4573 043f 17       		.uleb128 0x17
 4574 0440 36020000 		.4byte	.LASF105
 4575 0444 01       		.byte	0x1
 4576 0445 1D03     		.2byte	0x31d
 4577 0447 01       		.byte	0x1
 4578 0448 01       		.byte	0x1
 4579 0449 18       		.uleb128 0x18
 4580 044a 0B040000 		.4byte	.LASF66
 4581 044e 01       		.byte	0x1
 4582 044f D103     		.2byte	0x3d1
 4583 0451 01       		.byte	0x1
 4584 0452 00000000 		.4byte	.LFB11
 4585 0456 1C000000 		.4byte	.LFE11
 4586 045a 02       		.byte	0x2
 4587 045b 7D       		.byte	0x7d
 4588 045c 00       		.sleb128 0
 4589 045d 94040000 		.4byte	0x494
 4590 0461 19       		.uleb128 0x19
 4591 0462 AD030000 		.4byte	.LASF60
 4592 0466 01       		.byte	0x1
 4593 0467 D103     		.2byte	0x3d1
 4594 0469 7B000000 		.4byte	0x7b
 4595 046d 00000000 		.4byte	.LLST0
 4596 0471 19       		.uleb128 0x19
 4597 0472 B8010000 		.4byte	.LASF61
 4598 0476 01       		.byte	0x1
 4599 0477 D103     		.2byte	0x3d1
 4600 0479 25000000 		.4byte	0x25
 4601 047d 20000000 		.4byte	.LLST1
 4602 0481 1A       		.uleb128 0x1a
 4603 0482 1B040000 		.4byte	.LASF63
 4604 0486 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 118


 4605 0487 D303     		.2byte	0x3d3
 4606 0489 A4040000 		.4byte	0x4a4
 4607 048d 05       		.byte	0x5
 4608 048e 03       		.byte	0x3
 4609 048f 00000000 		.4byte	toHex.3480
 4610 0493 00       		.byte	0
 4611 0494 09       		.uleb128 0x9
 4612 0495 25000000 		.4byte	0x25
 4613 0499 A4040000 		.4byte	0x4a4
 4614 049d 0A       		.uleb128 0xa
 4615 049e 81000000 		.4byte	0x81
 4616 04a2 0F       		.byte	0xf
 4617 04a3 00       		.byte	0
 4618 04a4 1B       		.uleb128 0x1b
 4619 04a5 94040000 		.4byte	0x494
 4620 04a9 1C       		.uleb128 0x1c
 4621 04aa 0F000000 		.4byte	.LASF106
 4622 04ae 01       		.byte	0x1
 4623 04af DA03     		.2byte	0x3da
 4624 04b1 01       		.byte	0x1
 4625 04b2 70000000 		.4byte	0x70
 4626 04b6 1C000000 		.4byte	.LFB12
 4627 04ba 78000000 		.4byte	.LFE12
 4628 04be 33000000 		.4byte	.LLST2
 4629 04c2 05050000 		.4byte	0x505
 4630 04c6 19       		.uleb128 0x19
 4631 04c7 AD030000 		.4byte	.LASF60
 4632 04cb 01       		.byte	0x1
 4633 04cc DA03     		.2byte	0x3da
 4634 04ce 7B000000 		.4byte	0x7b
 4635 04d2 53000000 		.4byte	.LLST3
 4636 04d6 1D       		.uleb128 0x1d
 4637 04d7 7D030000 		.4byte	.LASF62
 4638 04db 01       		.byte	0x1
 4639 04dc DA03     		.2byte	0x3da
 4640 04de 7B000000 		.4byte	0x7b
 4641 04e2 01       		.byte	0x1
 4642 04e3 51       		.byte	0x51
 4643 04e4 1E       		.uleb128 0x1e
 4644 04e5 30040000 		.4byte	.LASF64
 4645 04e9 01       		.byte	0x1
 4646 04ea DC03     		.2byte	0x3dc
 4647 04ec 25000000 		.4byte	0x25
 4648 04f0 71000000 		.4byte	.LLST4
 4649 04f4 1E       		.uleb128 0x1e
 4650 04f5 51030000 		.4byte	.LASF65
 4651 04f9 01       		.byte	0x1
 4652 04fa DD03     		.2byte	0x3dd
 4653 04fc 70000000 		.4byte	0x70
 4654 0500 BF000000 		.4byte	.LLST5
 4655 0504 00       		.byte	0
 4656 0505 1F       		.uleb128 0x1f
 4657 0506 6C010000 		.4byte	.LASF67
 4658 050a 01       		.byte	0x1
 4659 050b 7404     		.2byte	0x474
 4660 050d 01       		.byte	0x1
 4661 050e 78000000 		.4byte	.LFB15
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 119


 4662 0512 DC000000 		.4byte	.LFE15
 4663 0516 DE000000 		.4byte	.LLST6
 4664 051a 3F050000 		.4byte	0x53f
 4665 051e 19       		.uleb128 0x19
 4666 051f 9C000000 		.4byte	.LASF68
 4667 0523 01       		.byte	0x1
 4668 0524 7404     		.2byte	0x474
 4669 0526 25000000 		.4byte	0x25
 4670 052a FE000000 		.4byte	.LLST7
 4671 052e 20       		.uleb128 0x20
 4672 052f 726F7700 		.ascii	"row\000"
 4673 0533 01       		.byte	0x1
 4674 0534 7604     		.2byte	0x476
 4675 0536 3E000000 		.4byte	0x3e
 4676 053a 11010000 		.4byte	.LLST8
 4677 053e 00       		.byte	0
 4678 053f 21       		.uleb128 0x21
 4679 0540 36030000 		.4byte	.LASF69
 4680 0544 01       		.byte	0x1
 4681 0545 BD       		.byte	0xbd
 4682 0546 01       		.byte	0x1
 4683 0547 DC000000 		.4byte	.LFB1
 4684 054b A4010000 		.4byte	.LFE1
 4685 054f 30010000 		.4byte	.LLST9
 4686 0553 66050000 		.4byte	0x566
 4687 0557 22       		.uleb128 0x22
 4688 0558 BB000000 		.4byte	.LASF70
 4689 055c 01       		.byte	0x1
 4690 055d BF       		.byte	0xbf
 4691 055e 66050000 		.4byte	0x566
 4692 0562 02       		.byte	0x2
 4693 0563 91       		.byte	0x91
 4694 0564 6C       		.sleb128 -20
 4695 0565 00       		.byte	0
 4696 0566 09       		.uleb128 0x9
 4697 0567 25000000 		.4byte	0x25
 4698 056b 76050000 		.4byte	0x576
 4699 056f 0A       		.uleb128 0xa
 4700 0570 81000000 		.4byte	0x81
 4701 0574 03       		.byte	0x3
 4702 0575 00       		.byte	0
 4703 0576 21       		.uleb128 0x21
 4704 0577 9A020000 		.4byte	.LASF71
 4705 057b 01       		.byte	0x1
 4706 057c FC       		.byte	0xfc
 4707 057d 01       		.byte	0x1
 4708 057e A4010000 		.4byte	.LFB3
 4709 0582 F8010000 		.4byte	.LFE3
 4710 0586 50010000 		.4byte	.LLST10
 4711 058a 9E050000 		.4byte	0x59e
 4712 058e 23       		.uleb128 0x23
 4713 058f 57030000 		.4byte	.LASF48
 4714 0593 01       		.byte	0x1
 4715 0594 FC       		.byte	0xfc
 4716 0595 21030000 		.4byte	0x321
 4717 0599 70010000 		.4byte	.LLST11
 4718 059d 00       		.byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 120


 4719 059e 21       		.uleb128 0x21
 4720 059f D6030000 		.4byte	.LASF72
 4721 05a3 01       		.byte	0x1
 4722 05a4 E5       		.byte	0xe5
 4723 05a5 01       		.byte	0x1
 4724 05a6 F8010000 		.4byte	.LFB2
 4725 05aa 4C020000 		.4byte	.LFE2
 4726 05ae 9D010000 		.4byte	.LLST12
 4727 05b2 D5050000 		.4byte	0x5d5
 4728 05b6 24       		.uleb128 0x24
 4729 05b7 08030000 		.4byte	0x308
 4730 05bb 1A020000 		.4byte	.LBB20
 4731 05bf 2C020000 		.4byte	.LBE20
 4732 05c3 01       		.byte	0x1
 4733 05c4 F0       		.byte	0xf0
 4734 05c5 24       		.uleb128 0x24
 4735 05c6 08030000 		.4byte	0x308
 4736 05ca 2C020000 		.4byte	.LBB22
 4737 05ce 40020000 		.4byte	.LBE22
 4738 05d2 01       		.byte	0x1
 4739 05d3 F1       		.byte	0xf1
 4740 05d4 00       		.byte	0
 4741 05d5 25       		.uleb128 0x25
 4742 05d6 27030000 		.4byte	0x327
 4743 05da 4C020000 		.4byte	.LFB5
 4744 05de 14030000 		.4byte	.LFE5
 4745 05e2 BD010000 		.4byte	.LLST13
 4746 05e6 30060000 		.4byte	0x630
 4747 05ea 26       		.uleb128 0x26
 4748 05eb 35030000 		.4byte	0x335
 4749 05ef DD010000 		.4byte	.LLST14
 4750 05f3 26       		.uleb128 0x26
 4751 05f4 41030000 		.4byte	0x341
 4752 05f8 FB010000 		.4byte	.LLST15
 4753 05fc 27       		.uleb128 0x27
 4754 05fd 27030000 		.4byte	0x327
 4755 0601 6C020000 		.4byte	.LBB28
 4756 0605 00030000 		.4byte	.LBE28
 4757 0609 01       		.byte	0x1
 4758 060a AD01     		.2byte	0x1ad
 4759 060c 26       		.uleb128 0x26
 4760 060d 41030000 		.4byte	0x341
 4761 0611 0E020000 		.4byte	.LLST16
 4762 0615 26       		.uleb128 0x26
 4763 0616 35030000 		.4byte	0x335
 4764 061a 21020000 		.4byte	.LLST17
 4765 061e 28       		.uleb128 0x28
 4766 061f 08030000 		.4byte	0x308
 4767 0623 D4020000 		.4byte	.LBB30
 4768 0627 E4020000 		.4byte	.LBE30
 4769 062b 01       		.byte	0x1
 4770 062c D901     		.2byte	0x1d9
 4771 062e 00       		.byte	0
 4772 062f 00       		.byte	0
 4773 0630 16       		.uleb128 0x16
 4774 0631 F4020000 		.4byte	.LASF74
 4775 0635 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 121


 4776 0636 0104     		.2byte	0x401
 4777 0638 01       		.byte	0x1
 4778 0639 70000000 		.4byte	0x70
 4779 063d 01       		.byte	0x1
 4780 063e 75060000 		.4byte	0x675
 4781 0642 12       		.uleb128 0x12
 4782 0643 B4000000 		.4byte	.LASF75
 4783 0647 01       		.byte	0x1
 4784 0648 0304     		.2byte	0x403
 4785 064a 25000000 		.4byte	0x25
 4786 064e 15       		.uleb128 0x15
 4787 064f 12       		.uleb128 0x12
 4788 0650 8B030000 		.4byte	.LASF76
 4789 0654 01       		.byte	0x1
 4790 0655 0F04     		.2byte	0x40f
 4791 0657 25000000 		.4byte	0x25
 4792 065b 12       		.uleb128 0x12
 4793 065c 92030000 		.4byte	.LASF77
 4794 0660 01       		.byte	0x1
 4795 0661 0F04     		.2byte	0x40f
 4796 0663 25000000 		.4byte	0x25
 4797 0667 13       		.uleb128 0x13
 4798 0668 746D7000 		.ascii	"tmp\000"
 4799 066c 01       		.byte	0x1
 4800 066d 0F04     		.2byte	0x40f
 4801 066f 25000000 		.4byte	0x25
 4802 0673 00       		.byte	0
 4803 0674 00       		.byte	0
 4804 0675 25       		.uleb128 0x25
 4805 0676 D1030000 		.4byte	0x3d1
 4806 067a 14030000 		.4byte	.LFB14
 4807 067e F4040000 		.4byte	.LFE14
 4808 0682 34020000 		.4byte	.LLST18
 4809 0686 1B070000 		.4byte	0x71b
 4810 068a 26       		.uleb128 0x26
 4811 068b E3030000 		.4byte	0x3e3
 4812 068f 60020000 		.4byte	.LLST19
 4813 0693 26       		.uleb128 0x26
 4814 0694 EF030000 		.4byte	0x3ef
 4815 0698 73020000 		.4byte	.LLST20
 4816 069c 29       		.uleb128 0x29
 4817 069d FB030000 		.4byte	0x3fb
 4818 06a1 2A       		.uleb128 0x2a
 4819 06a2 30060000 		.4byte	0x630
 4820 06a6 1C030000 		.4byte	.LBB37
 4821 06aa 00000000 		.4byte	.Ldebug_ranges0+0
 4822 06ae 01       		.byte	0x1
 4823 06af 4404     		.2byte	0x444
 4824 06b1 E9060000 		.4byte	0x6e9
 4825 06b5 2B       		.uleb128 0x2b
 4826 06b6 20000000 		.4byte	.Ldebug_ranges0+0x20
 4827 06ba 2C       		.uleb128 0x2c
 4828 06bb 42060000 		.4byte	0x642
 4829 06bf 02       		.byte	0x2
 4830 06c0 74       		.byte	0x74
 4831 06c1 00       		.sleb128 0
 4832 06c2 2D       		.uleb128 0x2d
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 122


 4833 06c3 54030000 		.4byte	.LBB39
 4834 06c7 D4030000 		.4byte	.LBE39
 4835 06cb 2E       		.uleb128 0x2e
 4836 06cc 4F060000 		.4byte	0x64f
 4837 06d0 86020000 		.4byte	.LLST21
 4838 06d4 2E       		.uleb128 0x2e
 4839 06d5 5B060000 		.4byte	0x65b
 4840 06d9 B2020000 		.4byte	.LLST22
 4841 06dd 2E       		.uleb128 0x2e
 4842 06de 67060000 		.4byte	0x667
 4843 06e2 E7020000 		.4byte	.LLST23
 4844 06e6 00       		.byte	0
 4845 06e7 00       		.byte	0
 4846 06e8 00       		.byte	0
 4847 06e9 27       		.uleb128 0x27
 4848 06ea D1030000 		.4byte	0x3d1
 4849 06ee 40040000 		.4byte	.LBB44
 4850 06f2 DC040000 		.4byte	.LBE44
 4851 06f6 01       		.byte	0x1
 4852 06f7 4004     		.2byte	0x440
 4853 06f9 26       		.uleb128 0x26
 4854 06fa E3030000 		.4byte	0x3e3
 4855 06fe 07030000 		.4byte	.LLST24
 4856 0702 2D       		.uleb128 0x2d
 4857 0703 40040000 		.4byte	.LBB45
 4858 0707 DC040000 		.4byte	.LBE45
 4859 070b 2C       		.uleb128 0x2c
 4860 070c FB030000 		.4byte	0x3fb
 4861 0710 02       		.byte	0x2
 4862 0711 91       		.byte	0x91
 4863 0712 58       		.sleb128 -40
 4864 0713 2F       		.uleb128 0x2f
 4865 0714 EF030000 		.4byte	0x3ef
 4866 0718 00       		.byte	0
 4867 0719 00       		.byte	0
 4868 071a 00       		.byte	0
 4869 071b 16       		.uleb128 0x16
 4870 071c 22010000 		.4byte	.LASF78
 4871 0720 01       		.byte	0x1
 4872 0721 9304     		.2byte	0x493
 4873 0723 01       		.byte	0x1
 4874 0724 70000000 		.4byte	0x70
 4875 0728 01       		.byte	0x1
 4876 0729 BE070000 		.4byte	0x7be
 4877 072d 10       		.uleb128 0x10
 4878 072e 07000000 		.4byte	.LASF79
 4879 0732 01       		.byte	0x1
 4880 0733 9304     		.2byte	0x493
 4881 0735 7B000000 		.4byte	0x7b
 4882 0739 12       		.uleb128 0x12
 4883 073a B4000000 		.4byte	.LASF75
 4884 073e 01       		.byte	0x1
 4885 073f 9504     		.2byte	0x495
 4886 0741 25000000 		.4byte	0x25
 4887 0745 12       		.uleb128 0x12
 4888 0746 4F000000 		.4byte	.LASF80
 4889 074a 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 123


 4890 074b 9604     		.2byte	0x496
 4891 074d 25000000 		.4byte	0x25
 4892 0751 13       		.uleb128 0x13
 4893 0752 6900     		.ascii	"i\000"
 4894 0754 01       		.byte	0x1
 4895 0755 9704     		.2byte	0x497
 4896 0757 25000000 		.4byte	0x25
 4897 075b 12       		.uleb128 0x12
 4898 075c 84030000 		.4byte	.LASF81
 4899 0760 01       		.byte	0x1
 4900 0761 9804     		.2byte	0x498
 4901 0763 25000000 		.4byte	0x25
 4902 0767 12       		.uleb128 0x12
 4903 0768 9C000000 		.4byte	.LASF68
 4904 076c 01       		.byte	0x1
 4905 076d 9904     		.2byte	0x499
 4906 076f 25000000 		.4byte	0x25
 4907 0773 12       		.uleb128 0x12
 4908 0774 41030000 		.4byte	.LASF82
 4909 0778 01       		.byte	0x1
 4910 0779 9A04     		.2byte	0x49a
 4911 077b BE070000 		.4byte	0x7be
 4912 077f 12       		.uleb128 0x12
 4913 0780 03010000 		.4byte	.LASF83
 4914 0784 01       		.byte	0x1
 4915 0785 9B04     		.2byte	0x49b
 4916 0787 25000000 		.4byte	0x25
 4917 078b 12       		.uleb128 0x12
 4918 078c A7020000 		.4byte	.LASF84
 4919 0790 01       		.byte	0x1
 4920 0791 9C04     		.2byte	0x49c
 4921 0793 C3070000 		.4byte	0x7c3
 4922 0797 12       		.uleb128 0x12
 4923 0798 82020000 		.4byte	.LASF85
 4924 079c 01       		.byte	0x1
 4925 079d 9D04     		.2byte	0x49d
 4926 079f 25000000 		.4byte	0x25
 4927 07a3 13       		.uleb128 0x13
 4928 07a4 636E7400 		.ascii	"cnt\000"
 4929 07a8 01       		.byte	0x1
 4930 07a9 9E04     		.2byte	0x49e
 4931 07ab 3E000000 		.4byte	0x3e
 4932 07af 15       		.uleb128 0x15
 4933 07b0 12       		.uleb128 0x12
 4934 07b1 FF020000 		.4byte	.LASF86
 4935 07b5 01       		.byte	0x1
 4936 07b6 1105     		.2byte	0x511
 4937 07b8 7B000000 		.4byte	0x7b
 4938 07bc 00       		.byte	0
 4939 07bd 00       		.byte	0
 4940 07be 30       		.uleb128 0x30
 4941 07bf 3E000000 		.4byte	0x3e
 4942 07c3 09       		.uleb128 0x9
 4943 07c4 25000000 		.4byte	0x25
 4944 07c8 D3070000 		.4byte	0x7d3
 4945 07cc 0A       		.uleb128 0xa
 4946 07cd 81000000 		.4byte	0x81
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 124


 4947 07d1 27       		.byte	0x27
 4948 07d2 00       		.byte	0
 4949 07d3 16       		.uleb128 0x16
 4950 07d4 45020000 		.4byte	.LASF87
 4951 07d8 01       		.byte	0x1
 4952 07d9 5703     		.2byte	0x357
 4953 07db 01       		.byte	0x1
 4954 07dc 70000000 		.4byte	0x70
 4955 07e0 01       		.byte	0x1
 4956 07e1 22080000 		.4byte	0x822
 4957 07e5 10       		.uleb128 0x10
 4958 07e6 07000000 		.4byte	.LASF79
 4959 07ea 01       		.byte	0x1
 4960 07eb 5703     		.2byte	0x357
 4961 07ed 7B000000 		.4byte	0x7b
 4962 07f1 12       		.uleb128 0x12
 4963 07f2 41030000 		.4byte	.LASF82
 4964 07f6 01       		.byte	0x1
 4965 07f7 5903     		.2byte	0x359
 4966 07f9 BE070000 		.4byte	0x7be
 4967 07fd 12       		.uleb128 0x12
 4968 07fe 18010000 		.4byte	.LASF88
 4969 0802 01       		.byte	0x1
 4970 0803 5A03     		.2byte	0x35a
 4971 0805 25000000 		.4byte	0x25
 4972 0809 12       		.uleb128 0x12
 4973 080a B4000000 		.4byte	.LASF75
 4974 080e 01       		.byte	0x1
 4975 080f 5B03     		.2byte	0x35b
 4976 0811 25000000 		.4byte	0x25
 4977 0815 13       		.uleb128 0x13
 4978 0816 636E7400 		.ascii	"cnt\000"
 4979 081a 01       		.byte	0x1
 4980 081b 5C03     		.2byte	0x35c
 4981 081d 3E000000 		.4byte	0x3e
 4982 0821 00       		.byte	0
 4983 0822 16       		.uleb128 0x16
 4984 0823 20000000 		.4byte	.LASF89
 4985 0827 01       		.byte	0x1
 4986 0828 2D03     		.2byte	0x32d
 4987 082a 01       		.byte	0x1
 4988 082b 70000000 		.4byte	0x70
 4989 082f 01       		.byte	0x1
 4990 0830 4D080000 		.4byte	0x84d
 4991 0834 10       		.uleb128 0x10
 4992 0835 07000000 		.4byte	.LASF79
 4993 0839 01       		.byte	0x1
 4994 083a 2D03     		.2byte	0x32d
 4995 083c 7B000000 		.4byte	0x7b
 4996 0840 12       		.uleb128 0x12
 4997 0841 B4000000 		.4byte	.LASF75
 4998 0845 01       		.byte	0x1
 4999 0846 2F03     		.2byte	0x32f
 5000 0848 25000000 		.4byte	0x25
 5001 084c 00       		.byte	0
 5002 084d 31       		.uleb128 0x31
 5003 084e 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 125


 5004 084f BA020000 		.4byte	.LASF107
 5005 0853 01       		.byte	0x1
 5006 0854 0102     		.2byte	0x201
 5007 0856 01       		.byte	0x1
 5008 0857 F4040000 		.4byte	.LFB7
 5009 085b FC150000 		.4byte	.LFE7
 5010 085f 1B030000 		.4byte	.LLST25
 5011 0863 C60A0000 		.4byte	0xac6
 5012 0867 1E       		.uleb128 0x1e
 5013 0868 27040000 		.4byte	.LASF90
 5014 086c 01       		.byte	0x1
 5015 086d 0302     		.2byte	0x203
 5016 086f 70000000 		.4byte	0x70
 5017 0873 48030000 		.4byte	.LLST26
 5018 0877 1E       		.uleb128 0x1e
 5019 0878 4F000000 		.4byte	.LASF80
 5020 087c 01       		.byte	0x1
 5021 087d 0402     		.2byte	0x204
 5022 087f 70000000 		.4byte	0x70
 5023 0883 B2030000 		.4byte	.LLST27
 5024 0887 1E       		.uleb128 0x1e
 5025 0888 18010000 		.4byte	.LASF88
 5026 088c 01       		.byte	0x1
 5027 088d 0502     		.2byte	0x205
 5028 088f 70000000 		.4byte	0x70
 5029 0893 68040000 		.4byte	.LLST28
 5030 0897 1A       		.uleb128 0x1a
 5031 0898 FB030000 		.4byte	.LASF91
 5032 089c 01       		.byte	0x1
 5033 089d 0602     		.2byte	0x206
 5034 089f 8F010000 		.4byte	0x18f
 5035 08a3 03       		.byte	0x3
 5036 08a4 91       		.byte	0x91
 5037 08a5 FC7E     		.sleb128 -132
 5038 08a7 1A       		.uleb128 0x1a
 5039 08a8 C9020000 		.4byte	.LASF43
 5040 08ac 01       		.byte	0x1
 5041 08ad 0702     		.2byte	0x207
 5042 08af DD020000 		.4byte	0x2dd
 5043 08b3 02       		.byte	0x2
 5044 08b4 91       		.byte	0x91
 5045 08b5 54       		.sleb128 -44
 5046 08b6 32       		.uleb128 0x32
 5047 08b7 1B070000 		.4byte	0x71b
 5048 08bb B0050000 		.4byte	.LBB65
 5049 08bf 60090000 		.4byte	.LBE65
 5050 08c3 01       		.byte	0x1
 5051 08c4 2D02     		.2byte	0x22d
 5052 08c6 43090000 		.4byte	0x943
 5053 08ca 26       		.uleb128 0x26
 5054 08cb 2D070000 		.4byte	0x72d
 5055 08cf 7C040000 		.4byte	.LLST29
 5056 08d3 2D       		.uleb128 0x2d
 5057 08d4 B0050000 		.4byte	.LBB66
 5058 08d8 60090000 		.4byte	.LBE66
 5059 08dc 2E       		.uleb128 0x2e
 5060 08dd 39070000 		.4byte	0x739
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 126


 5061 08e1 9E040000 		.4byte	.LLST30
 5062 08e5 2E       		.uleb128 0x2e
 5063 08e6 45070000 		.4byte	0x745
 5064 08ea E2040000 		.4byte	.LLST31
 5065 08ee 29       		.uleb128 0x29
 5066 08ef 51070000 		.4byte	0x751
 5067 08f3 2E       		.uleb128 0x2e
 5068 08f4 5B070000 		.4byte	0x75b
 5069 08f8 2F050000 		.4byte	.LLST32
 5070 08fc 2E       		.uleb128 0x2e
 5071 08fd 67070000 		.4byte	0x767
 5072 0901 42050000 		.4byte	.LLST33
 5073 0905 2E       		.uleb128 0x2e
 5074 0906 73070000 		.4byte	0x773
 5075 090a 77050000 		.4byte	.LLST34
 5076 090e 2E       		.uleb128 0x2e
 5077 090f 7F070000 		.4byte	0x77f
 5078 0913 C5050000 		.4byte	.LLST35
 5079 0917 2C       		.uleb128 0x2c
 5080 0918 8B070000 		.4byte	0x78b
 5081 091c 03       		.byte	0x3
 5082 091d 91       		.byte	0x91
 5083 091e AC7F     		.sleb128 -84
 5084 0920 2E       		.uleb128 0x2e
 5085 0921 97070000 		.4byte	0x797
 5086 0925 11060000 		.4byte	.LLST36
 5087 0929 2E       		.uleb128 0x2e
 5088 092a A3070000 		.4byte	0x7a3
 5089 092e 5F060000 		.4byte	.LLST37
 5090 0932 2B       		.uleb128 0x2b
 5091 0933 40000000 		.4byte	.Ldebug_ranges0+0x40
 5092 0937 2E       		.uleb128 0x2e
 5093 0938 B0070000 		.4byte	0x7b0
 5094 093c 94060000 		.4byte	.LLST38
 5095 0940 00       		.byte	0
 5096 0941 00       		.byte	0
 5097 0942 00       		.byte	0
 5098 0943 2A       		.uleb128 0x2a
 5099 0944 D3070000 		.4byte	0x7d3
 5100 0948 96090000 		.4byte	.LBB69
 5101 094c 58000000 		.4byte	.Ldebug_ranges0+0x58
 5102 0950 01       		.byte	0x1
 5103 0951 3702     		.2byte	0x237
 5104 0953 8B090000 		.4byte	0x98b
 5105 0957 26       		.uleb128 0x26
 5106 0958 E5070000 		.4byte	0x7e5
 5107 095c BF060000 		.4byte	.LLST39
 5108 0960 2B       		.uleb128 0x2b
 5109 0961 70000000 		.4byte	.Ldebug_ranges0+0x70
 5110 0965 2E       		.uleb128 0x2e
 5111 0966 F1070000 		.4byte	0x7f1
 5112 096a E1060000 		.4byte	.LLST40
 5113 096e 2E       		.uleb128 0x2e
 5114 096f FD070000 		.4byte	0x7fd
 5115 0973 2F070000 		.4byte	.LLST41
 5116 0977 2E       		.uleb128 0x2e
 5117 0978 09080000 		.4byte	0x809
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 127


 5118 097c 7C070000 		.4byte	.LLST42
 5119 0980 2E       		.uleb128 0x2e
 5120 0981 15080000 		.4byte	0x815
 5121 0985 C0070000 		.4byte	.LLST43
 5122 0989 00       		.byte	0
 5123 098a 00       		.byte	0
 5124 098b 32       		.uleb128 0x32
 5125 098c 18040000 		.4byte	0x418
 5126 0990 A20B0000 		.4byte	.LBB72
 5127 0994 B40B0000 		.4byte	.LBE72
 5128 0998 01       		.byte	0x1
 5129 0999 3C02     		.2byte	0x23c
 5130 099b B2090000 		.4byte	0x9b2
 5131 099f 26       		.uleb128 0x26
 5132 09a0 32040000 		.4byte	0x432
 5133 09a4 F5070000 		.4byte	.LLST44
 5134 09a8 26       		.uleb128 0x26
 5135 09a9 26040000 		.4byte	0x426
 5136 09ad 09080000 		.4byte	.LLST45
 5137 09b1 00       		.byte	0
 5138 09b2 32       		.uleb128 0x32
 5139 09b3 18040000 		.4byte	0x418
 5140 09b7 340C0000 		.4byte	.LBB74
 5141 09bb 460C0000 		.4byte	.LBE74
 5142 09bf 01       		.byte	0x1
 5143 09c0 3E02     		.2byte	0x23e
 5144 09c2 D9090000 		.4byte	0x9d9
 5145 09c6 26       		.uleb128 0x26
 5146 09c7 32040000 		.4byte	0x432
 5147 09cb 2C080000 		.4byte	.LLST46
 5148 09cf 26       		.uleb128 0x26
 5149 09d0 26040000 		.4byte	0x426
 5150 09d4 40080000 		.4byte	.LLST47
 5151 09d8 00       		.byte	0
 5152 09d9 33       		.uleb128 0x33
 5153 09da 88000000 		.4byte	.Ldebug_ranges0+0x88
 5154 09de 3C0A0000 		.4byte	0xa3c
 5155 09e2 20       		.uleb128 0x20
 5156 09e3 636E7400 		.ascii	"cnt\000"
 5157 09e7 01       		.byte	0x1
 5158 09e8 4B02     		.2byte	0x24b
 5159 09ea 3E000000 		.4byte	0x3e
 5160 09ee 63080000 		.4byte	.LLST48
 5161 09f2 20       		.uleb128 0x20
 5162 09f3 6B657900 		.ascii	"key\000"
 5163 09f7 01       		.byte	0x1
 5164 09f8 4C02     		.2byte	0x24c
 5165 09fa 25000000 		.4byte	0x25
 5166 09fe 8F080000 		.4byte	.LLST49
 5167 0a02 28       		.uleb128 0x28
 5168 0a03 3F040000 		.4byte	0x43f
 5169 0a07 960C0000 		.4byte	.LBB77
 5170 0a0b C40C0000 		.4byte	.LBE77
 5171 0a0f 01       		.byte	0x1
 5172 0a10 5802     		.2byte	0x258
 5173 0a12 34       		.uleb128 0x34
 5174 0a13 22080000 		.4byte	0x822
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 128


 5175 0a17 C80C0000 		.4byte	.LBB79
 5176 0a1b A8000000 		.4byte	.Ldebug_ranges0+0xa8
 5177 0a1f 01       		.byte	0x1
 5178 0a20 5F02     		.2byte	0x25f
 5179 0a22 26       		.uleb128 0x26
 5180 0a23 34080000 		.4byte	0x834
 5181 0a27 A4080000 		.4byte	.LLST50
 5182 0a2b 2B       		.uleb128 0x2b
 5183 0a2c C8000000 		.4byte	.Ldebug_ranges0+0xc8
 5184 0a30 2E       		.uleb128 0x2e
 5185 0a31 40080000 		.4byte	0x840
 5186 0a35 DE080000 		.4byte	.LLST51
 5187 0a39 00       		.byte	0
 5188 0a3a 00       		.byte	0
 5189 0a3b 00       		.byte	0
 5190 0a3c 2B       		.uleb128 0x2b
 5191 0a3d E8000000 		.4byte	.Ldebug_ranges0+0xe8
 5192 0a41 20       		.uleb128 0x20
 5193 0a42 6B657900 		.ascii	"key\000"
 5194 0a46 01       		.byte	0x1
 5195 0a47 AD02     		.2byte	0x2ad
 5196 0a49 C60A0000 		.4byte	0xac6
 5197 0a4d 0A090000 		.4byte	.LLST52
 5198 0a51 34       		.uleb128 0x34
 5199 0a52 4E030000 		.4byte	0x34e
 5200 0a56 300F0000 		.4byte	.LBB86
 5201 0a5a 00010000 		.4byte	.Ldebug_ranges0+0x100
 5202 0a5e 01       		.byte	0x1
 5203 0a5f E102     		.2byte	0x2e1
 5204 0a61 2B       		.uleb128 0x2b
 5205 0a62 18010000 		.4byte	.Ldebug_ranges0+0x118
 5206 0a66 2E       		.uleb128 0x2e
 5207 0a67 68030000 		.4byte	0x368
 5208 0a6b 64090000 		.4byte	.LLST53
 5209 0a6f 2E       		.uleb128 0x2e
 5210 0a70 74030000 		.4byte	0x374
 5211 0a74 B1090000 		.4byte	.LLST54
 5212 0a78 2E       		.uleb128 0x2e
 5213 0a79 80030000 		.4byte	0x380
 5214 0a7d E8090000 		.4byte	.LLST55
 5215 0a81 35       		.uleb128 0x35
 5216 0a82 4C0F0000 		.4byte	.LBB88
 5217 0a86 96100000 		.4byte	.LBE88
 5218 0a8a 980A0000 		.4byte	0xa98
 5219 0a8e 2E       		.uleb128 0x2e
 5220 0a8f 91030000 		.4byte	0x391
 5221 0a93 2E0A0000 		.4byte	.LLST56
 5222 0a97 00       		.byte	0
 5223 0a98 2D       		.uleb128 0x2d
 5224 0a99 E8110000 		.4byte	.LBB89
 5225 0a9d E8130000 		.4byte	.LBE89
 5226 0aa1 2E       		.uleb128 0x2e
 5227 0aa2 9F030000 		.4byte	0x39f
 5228 0aa6 410A0000 		.4byte	.LLST57
 5229 0aaa 2E       		.uleb128 0x2e
 5230 0aab AB030000 		.4byte	0x3ab
 5231 0aaf 5D0A0000 		.4byte	.LLST58
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 129


 5232 0ab3 2E       		.uleb128 0x2e
 5233 0ab4 B7030000 		.4byte	0x3b7
 5234 0ab8 960A0000 		.4byte	.LLST59
 5235 0abc 29       		.uleb128 0x29
 5236 0abd C3030000 		.4byte	0x3c3
 5237 0ac1 00       		.byte	0
 5238 0ac2 00       		.byte	0
 5239 0ac3 00       		.byte	0
 5240 0ac4 00       		.byte	0
 5241 0ac5 00       		.byte	0
 5242 0ac6 30       		.uleb128 0x30
 5243 0ac7 25000000 		.4byte	0x25
 5244 0acb 09       		.uleb128 0x9
 5245 0acc FD020000 		.4byte	0x2fd
 5246 0ad0 DB0A0000 		.4byte	0xadb
 5247 0ad4 0A       		.uleb128 0xa
 5248 0ad5 81000000 		.4byte	0x81
 5249 0ad9 04       		.byte	0x4
 5250 0ada 00       		.byte	0
 5251 0adb 22       		.uleb128 0x22
 5252 0adc 0B010000 		.4byte	.LASF92
 5253 0ae0 01       		.byte	0x1
 5254 0ae1 7A       		.byte	0x7a
 5255 0ae2 CB0A0000 		.4byte	0xacb
 5256 0ae6 05       		.byte	0x5
 5257 0ae7 03       		.byte	0x3
 5258 0ae8 00000000 		.4byte	foundBtUnits
 5259 0aec 22       		.uleb128 0x22
 5260 0aed 0E020000 		.4byte	.LASF93
 5261 0af1 01       		.byte	0x1
 5262 0af2 7C       		.byte	0x7c
 5263 0af3 25000000 		.4byte	0x25
 5264 0af7 05       		.byte	0x5
 5265 0af8 03       		.byte	0x3
 5266 0af9 A0000000 		.4byte	gameType
 5267 0afd 22       		.uleb128 0x22
 5268 0afe 8A020000 		.4byte	.LASF94
 5269 0b02 01       		.byte	0x1
 5270 0b03 7E       		.byte	0x7e
 5271 0b04 17020000 		.4byte	0x217
 5272 0b08 05       		.byte	0x5
 5273 0b09 03       		.byte	0x3
 5274 0b0a 00000000 		.4byte	player1
 5275 0b0e 22       		.uleb128 0x22
 5276 0b0f 92020000 		.4byte	.LASF95
 5277 0b13 01       		.byte	0x1
 5278 0b14 88       		.byte	0x88
 5279 0b15 17020000 		.4byte	0x217
 5280 0b19 05       		.byte	0x5
 5281 0b1a 03       		.byte	0x3
 5282 0b1b 10000000 		.4byte	player2
 5283 0b1f 22       		.uleb128 0x22
 5284 0b20 B2030000 		.4byte	.LASF96
 5285 0b24 01       		.byte	0x1
 5286 0b25 92       		.byte	0x92
 5287 0b26 9F020000 		.4byte	0x29f
 5288 0b2a 05       		.byte	0x5
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 130


 5289 0b2b 03       		.byte	0x3
 5290 0b2c 24000000 		.4byte	ball
 5291 0b30 22       		.uleb128 0x22
 5292 0b31 BC030000 		.4byte	.LASF97
 5293 0b35 01       		.byte	0x1
 5294 0b36 94       		.byte	0x94
 5295 0b37 21030000 		.4byte	0x321
 5296 0b3b 05       		.byte	0x5
 5297 0b3c 03       		.byte	0x3
 5298 0b3d 5C000000 		.4byte	pActivePlayer
 5299 0b41 22       		.uleb128 0x22
 5300 0b42 EC030000 		.4byte	.LASF98
 5301 0b46 01       		.byte	0x1
 5302 0b47 96       		.byte	0x96
 5303 0b48 21030000 		.4byte	0x321
 5304 0b4c 05       		.byte	0x5
 5305 0b4d 03       		.byte	0x3
 5306 0b4e 20000000 		.4byte	pServingPlayer
 5307 0b52 22       		.uleb128 0x22
 5308 0b53 6A020000 		.4byte	.LASF99
 5309 0b57 01       		.byte	0x1
 5310 0b58 97       		.byte	0x97
 5311 0b59 70000000 		.4byte	0x70
 5312 0b5d 05       		.byte	0x5
 5313 0b5e 03       		.byte	0x3
 5314 0b5f 58000000 		.4byte	serving
 5315 0b63 22       		.uleb128 0x22
 5316 0b64 41000000 		.4byte	.LASF33
 5317 0b68 01       		.byte	0x1
 5318 0b69 99       		.byte	0x99
 5319 0b6a 3E000000 		.4byte	0x3e
 5320 0b6e 05       		.byte	0x5
 5321 0b6f 03       		.byte	0x3
 5322 0b70 D0000000 		.4byte	lastMove
 5323 0b74 22       		.uleb128 0x22
 5324 0b75 A2030000 		.4byte	.LASF100
 5325 0b79 01       		.byte	0x1
 5326 0b7a 9A       		.byte	0x9a
 5327 0b7b 3E000000 		.4byte	0x3e
 5328 0b7f 05       		.byte	0x5
 5329 0b80 03       		.byte	0x3
 5330 0b81 CC000000 		.4byte	lastStatus
 5331 0b85 22       		.uleb128 0x22
 5332 0b86 5A020000 		.4byte	.LASF101
 5333 0b8a 01       		.byte	0x1
 5334 0b8b 9C       		.byte	0x9c
 5335 0b8c 25000000 		.4byte	0x25
 5336 0b90 05       		.byte	0x5
 5337 0b91 03       		.byte	0x3
 5338 0b92 CA000000 		.4byte	remoteClientKey
 5339 0b96 1A       		.uleb128 0x1a
 5340 0b97 03010000 		.4byte	.LASF83
 5341 0b9b 01       		.byte	0x1
 5342 0b9c 1503     		.2byte	0x315
 5343 0b9e 25000000 		.4byte	0x25
 5344 0ba2 05       		.byte	0x5
 5345 0ba3 03       		.byte	0x3
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 131


 5346 0ba4 C9000000 		.4byte	recvPos
 5347 0ba8 1A       		.uleb128 0x1a
 5348 0ba9 A7020000 		.4byte	.LASF84
 5349 0bad 01       		.byte	0x1
 5350 0bae 1603     		.2byte	0x316
 5351 0bb0 C3070000 		.4byte	0x7c3
 5352 0bb4 05       		.byte	0x5
 5353 0bb5 03       		.byte	0x3
 5354 0bb6 A1000000 		.4byte	recvBuf
 5355 0bba 36       		.uleb128 0x36
 5356 0bbb 6D7300   		.ascii	"ms\000"
 5357 0bbe 01       		.byte	0x1
 5358 0bbf A2       		.byte	0xa2
 5359 0bc0 BE070000 		.4byte	0x7be
 5360 0bc4 01       		.byte	0x1
 5361 0bc5 01       		.byte	0x1
 5362 0bc6 00       		.byte	0
 5363              		.section	.debug_abbrev,"",%progbits
 5364              	.Ldebug_abbrev0:
 5365 0000 01       		.uleb128 0x1
 5366 0001 11       		.uleb128 0x11
 5367 0002 01       		.byte	0x1
 5368 0003 25       		.uleb128 0x25
 5369 0004 0E       		.uleb128 0xe
 5370 0005 13       		.uleb128 0x13
 5371 0006 0B       		.uleb128 0xb
 5372 0007 03       		.uleb128 0x3
 5373 0008 0E       		.uleb128 0xe
 5374 0009 1B       		.uleb128 0x1b
 5375 000a 0E       		.uleb128 0xe
 5376 000b 11       		.uleb128 0x11
 5377 000c 01       		.uleb128 0x1
 5378 000d 12       		.uleb128 0x12
 5379 000e 01       		.uleb128 0x1
 5380 000f 10       		.uleb128 0x10
 5381 0010 06       		.uleb128 0x6
 5382 0011 00       		.byte	0
 5383 0012 00       		.byte	0
 5384 0013 02       		.uleb128 0x2
 5385 0014 16       		.uleb128 0x16
 5386 0015 00       		.byte	0
 5387 0016 03       		.uleb128 0x3
 5388 0017 08       		.uleb128 0x8
 5389 0018 3A       		.uleb128 0x3a
 5390 0019 0B       		.uleb128 0xb
 5391 001a 3B       		.uleb128 0x3b
 5392 001b 0B       		.uleb128 0xb
 5393 001c 49       		.uleb128 0x49
 5394 001d 13       		.uleb128 0x13
 5395 001e 00       		.byte	0
 5396 001f 00       		.byte	0
 5397 0020 03       		.uleb128 0x3
 5398 0021 24       		.uleb128 0x24
 5399 0022 00       		.byte	0
 5400 0023 0B       		.uleb128 0xb
 5401 0024 0B       		.uleb128 0xb
 5402 0025 3E       		.uleb128 0x3e
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 132


 5403 0026 0B       		.uleb128 0xb
 5404 0027 03       		.uleb128 0x3
 5405 0028 0E       		.uleb128 0xe
 5406 0029 00       		.byte	0
 5407 002a 00       		.byte	0
 5408 002b 04       		.uleb128 0x4
 5409 002c 16       		.uleb128 0x16
 5410 002d 00       		.byte	0
 5411 002e 03       		.uleb128 0x3
 5412 002f 0E       		.uleb128 0xe
 5413 0030 3A       		.uleb128 0x3a
 5414 0031 0B       		.uleb128 0xb
 5415 0032 3B       		.uleb128 0x3b
 5416 0033 0B       		.uleb128 0xb
 5417 0034 49       		.uleb128 0x49
 5418 0035 13       		.uleb128 0x13
 5419 0036 00       		.byte	0
 5420 0037 00       		.byte	0
 5421 0038 05       		.uleb128 0x5
 5422 0039 24       		.uleb128 0x24
 5423 003a 00       		.byte	0
 5424 003b 0B       		.uleb128 0xb
 5425 003c 0B       		.uleb128 0xb
 5426 003d 3E       		.uleb128 0x3e
 5427 003e 0B       		.uleb128 0xb
 5428 003f 03       		.uleb128 0x3
 5429 0040 08       		.uleb128 0x8
 5430 0041 00       		.byte	0
 5431 0042 00       		.byte	0
 5432 0043 06       		.uleb128 0x6
 5433 0044 0F       		.uleb128 0xf
 5434 0045 00       		.byte	0
 5435 0046 0B       		.uleb128 0xb
 5436 0047 0B       		.uleb128 0xb
 5437 0048 49       		.uleb128 0x49
 5438 0049 13       		.uleb128 0x13
 5439 004a 00       		.byte	0
 5440 004b 00       		.byte	0
 5441 004c 07       		.uleb128 0x7
 5442 004d 13       		.uleb128 0x13
 5443 004e 01       		.byte	0x1
 5444 004f 0B       		.uleb128 0xb
 5445 0050 0B       		.uleb128 0xb
 5446 0051 3A       		.uleb128 0x3a
 5447 0052 0B       		.uleb128 0xb
 5448 0053 3B       		.uleb128 0x3b
 5449 0054 0B       		.uleb128 0xb
 5450 0055 01       		.uleb128 0x1
 5451 0056 13       		.uleb128 0x13
 5452 0057 00       		.byte	0
 5453 0058 00       		.byte	0
 5454 0059 08       		.uleb128 0x8
 5455 005a 0D       		.uleb128 0xd
 5456 005b 00       		.byte	0
 5457 005c 03       		.uleb128 0x3
 5458 005d 0E       		.uleb128 0xe
 5459 005e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 133


 5460 005f 0B       		.uleb128 0xb
 5461 0060 3B       		.uleb128 0x3b
 5462 0061 0B       		.uleb128 0xb
 5463 0062 49       		.uleb128 0x49
 5464 0063 13       		.uleb128 0x13
 5465 0064 38       		.uleb128 0x38
 5466 0065 0A       		.uleb128 0xa
 5467 0066 00       		.byte	0
 5468 0067 00       		.byte	0
 5469 0068 09       		.uleb128 0x9
 5470 0069 01       		.uleb128 0x1
 5471 006a 01       		.byte	0x1
 5472 006b 49       		.uleb128 0x49
 5473 006c 13       		.uleb128 0x13
 5474 006d 01       		.uleb128 0x1
 5475 006e 13       		.uleb128 0x13
 5476 006f 00       		.byte	0
 5477 0070 00       		.byte	0
 5478 0071 0A       		.uleb128 0xa
 5479 0072 21       		.uleb128 0x21
 5480 0073 00       		.byte	0
 5481 0074 49       		.uleb128 0x49
 5482 0075 13       		.uleb128 0x13
 5483 0076 2F       		.uleb128 0x2f
 5484 0077 0B       		.uleb128 0xb
 5485 0078 00       		.byte	0
 5486 0079 00       		.byte	0
 5487 007a 0B       		.uleb128 0xb
 5488 007b 13       		.uleb128 0x13
 5489 007c 01       		.byte	0x1
 5490 007d 03       		.uleb128 0x3
 5491 007e 0E       		.uleb128 0xe
 5492 007f 0B       		.uleb128 0xb
 5493 0080 0B       		.uleb128 0xb
 5494 0081 3A       		.uleb128 0x3a
 5495 0082 0B       		.uleb128 0xb
 5496 0083 3B       		.uleb128 0x3b
 5497 0084 0B       		.uleb128 0xb
 5498 0085 01       		.uleb128 0x1
 5499 0086 13       		.uleb128 0x13
 5500 0087 00       		.byte	0
 5501 0088 00       		.byte	0
 5502 0089 0C       		.uleb128 0xc
 5503 008a 0D       		.uleb128 0xd
 5504 008b 00       		.byte	0
 5505 008c 03       		.uleb128 0x3
 5506 008d 08       		.uleb128 0x8
 5507 008e 3A       		.uleb128 0x3a
 5508 008f 0B       		.uleb128 0xb
 5509 0090 3B       		.uleb128 0x3b
 5510 0091 0B       		.uleb128 0xb
 5511 0092 49       		.uleb128 0x49
 5512 0093 13       		.uleb128 0x13
 5513 0094 38       		.uleb128 0x38
 5514 0095 0A       		.uleb128 0xa
 5515 0096 00       		.byte	0
 5516 0097 00       		.byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 134


 5517 0098 0D       		.uleb128 0xd
 5518 0099 2E       		.uleb128 0x2e
 5519 009a 01       		.byte	0x1
 5520 009b 03       		.uleb128 0x3
 5521 009c 0E       		.uleb128 0xe
 5522 009d 3A       		.uleb128 0x3a
 5523 009e 0B       		.uleb128 0xb
 5524 009f 3B       		.uleb128 0x3b
 5525 00a0 0B       		.uleb128 0xb
 5526 00a1 27       		.uleb128 0x27
 5527 00a2 0C       		.uleb128 0xc
 5528 00a3 20       		.uleb128 0x20
 5529 00a4 0B       		.uleb128 0xb
 5530 00a5 01       		.uleb128 0x1
 5531 00a6 13       		.uleb128 0x13
 5532 00a7 00       		.byte	0
 5533 00a8 00       		.byte	0
 5534 00a9 0E       		.uleb128 0xe
 5535 00aa 05       		.uleb128 0x5
 5536 00ab 00       		.byte	0
 5537 00ac 03       		.uleb128 0x3
 5538 00ad 0E       		.uleb128 0xe
 5539 00ae 3A       		.uleb128 0x3a
 5540 00af 0B       		.uleb128 0xb
 5541 00b0 3B       		.uleb128 0x3b
 5542 00b1 0B       		.uleb128 0xb
 5543 00b2 49       		.uleb128 0x49
 5544 00b3 13       		.uleb128 0x13
 5545 00b4 00       		.byte	0
 5546 00b5 00       		.byte	0
 5547 00b6 0F       		.uleb128 0xf
 5548 00b7 2E       		.uleb128 0x2e
 5549 00b8 01       		.byte	0x1
 5550 00b9 03       		.uleb128 0x3
 5551 00ba 0E       		.uleb128 0xe
 5552 00bb 3A       		.uleb128 0x3a
 5553 00bc 0B       		.uleb128 0xb
 5554 00bd 3B       		.uleb128 0x3b
 5555 00be 05       		.uleb128 0x5
 5556 00bf 27       		.uleb128 0x27
 5557 00c0 0C       		.uleb128 0xc
 5558 00c1 20       		.uleb128 0x20
 5559 00c2 0B       		.uleb128 0xb
 5560 00c3 01       		.uleb128 0x1
 5561 00c4 13       		.uleb128 0x13
 5562 00c5 00       		.byte	0
 5563 00c6 00       		.byte	0
 5564 00c7 10       		.uleb128 0x10
 5565 00c8 05       		.uleb128 0x5
 5566 00c9 00       		.byte	0
 5567 00ca 03       		.uleb128 0x3
 5568 00cb 0E       		.uleb128 0xe
 5569 00cc 3A       		.uleb128 0x3a
 5570 00cd 0B       		.uleb128 0xb
 5571 00ce 3B       		.uleb128 0x3b
 5572 00cf 05       		.uleb128 0x5
 5573 00d0 49       		.uleb128 0x49
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 135


 5574 00d1 13       		.uleb128 0x13
 5575 00d2 00       		.byte	0
 5576 00d3 00       		.byte	0
 5577 00d4 11       		.uleb128 0x11
 5578 00d5 05       		.uleb128 0x5
 5579 00d6 00       		.byte	0
 5580 00d7 03       		.uleb128 0x3
 5581 00d8 08       		.uleb128 0x8
 5582 00d9 3A       		.uleb128 0x3a
 5583 00da 0B       		.uleb128 0xb
 5584 00db 3B       		.uleb128 0x3b
 5585 00dc 05       		.uleb128 0x5
 5586 00dd 49       		.uleb128 0x49
 5587 00de 13       		.uleb128 0x13
 5588 00df 00       		.byte	0
 5589 00e0 00       		.byte	0
 5590 00e1 12       		.uleb128 0x12
 5591 00e2 34       		.uleb128 0x34
 5592 00e3 00       		.byte	0
 5593 00e4 03       		.uleb128 0x3
 5594 00e5 0E       		.uleb128 0xe
 5595 00e6 3A       		.uleb128 0x3a
 5596 00e7 0B       		.uleb128 0xb
 5597 00e8 3B       		.uleb128 0x3b
 5598 00e9 05       		.uleb128 0x5
 5599 00ea 49       		.uleb128 0x49
 5600 00eb 13       		.uleb128 0x13
 5601 00ec 00       		.byte	0
 5602 00ed 00       		.byte	0
 5603 00ee 13       		.uleb128 0x13
 5604 00ef 34       		.uleb128 0x34
 5605 00f0 00       		.byte	0
 5606 00f1 03       		.uleb128 0x3
 5607 00f2 08       		.uleb128 0x8
 5608 00f3 3A       		.uleb128 0x3a
 5609 00f4 0B       		.uleb128 0xb
 5610 00f5 3B       		.uleb128 0x3b
 5611 00f6 05       		.uleb128 0x5
 5612 00f7 49       		.uleb128 0x49
 5613 00f8 13       		.uleb128 0x13
 5614 00f9 00       		.byte	0
 5615 00fa 00       		.byte	0
 5616 00fb 14       		.uleb128 0x14
 5617 00fc 0B       		.uleb128 0xb
 5618 00fd 01       		.byte	0x1
 5619 00fe 01       		.uleb128 0x1
 5620 00ff 13       		.uleb128 0x13
 5621 0100 00       		.byte	0
 5622 0101 00       		.byte	0
 5623 0102 15       		.uleb128 0x15
 5624 0103 0B       		.uleb128 0xb
 5625 0104 01       		.byte	0x1
 5626 0105 00       		.byte	0
 5627 0106 00       		.byte	0
 5628 0107 16       		.uleb128 0x16
 5629 0108 2E       		.uleb128 0x2e
 5630 0109 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 136


 5631 010a 03       		.uleb128 0x3
 5632 010b 0E       		.uleb128 0xe
 5633 010c 3A       		.uleb128 0x3a
 5634 010d 0B       		.uleb128 0xb
 5635 010e 3B       		.uleb128 0x3b
 5636 010f 05       		.uleb128 0x5
 5637 0110 27       		.uleb128 0x27
 5638 0111 0C       		.uleb128 0xc
 5639 0112 49       		.uleb128 0x49
 5640 0113 13       		.uleb128 0x13
 5641 0114 20       		.uleb128 0x20
 5642 0115 0B       		.uleb128 0xb
 5643 0116 01       		.uleb128 0x1
 5644 0117 13       		.uleb128 0x13
 5645 0118 00       		.byte	0
 5646 0119 00       		.byte	0
 5647 011a 17       		.uleb128 0x17
 5648 011b 2E       		.uleb128 0x2e
 5649 011c 00       		.byte	0
 5650 011d 03       		.uleb128 0x3
 5651 011e 0E       		.uleb128 0xe
 5652 011f 3A       		.uleb128 0x3a
 5653 0120 0B       		.uleb128 0xb
 5654 0121 3B       		.uleb128 0x3b
 5655 0122 05       		.uleb128 0x5
 5656 0123 27       		.uleb128 0x27
 5657 0124 0C       		.uleb128 0xc
 5658 0125 20       		.uleb128 0x20
 5659 0126 0B       		.uleb128 0xb
 5660 0127 00       		.byte	0
 5661 0128 00       		.byte	0
 5662 0129 18       		.uleb128 0x18
 5663 012a 2E       		.uleb128 0x2e
 5664 012b 01       		.byte	0x1
 5665 012c 03       		.uleb128 0x3
 5666 012d 0E       		.uleb128 0xe
 5667 012e 3A       		.uleb128 0x3a
 5668 012f 0B       		.uleb128 0xb
 5669 0130 3B       		.uleb128 0x3b
 5670 0131 05       		.uleb128 0x5
 5671 0132 27       		.uleb128 0x27
 5672 0133 0C       		.uleb128 0xc
 5673 0134 11       		.uleb128 0x11
 5674 0135 01       		.uleb128 0x1
 5675 0136 12       		.uleb128 0x12
 5676 0137 01       		.uleb128 0x1
 5677 0138 40       		.uleb128 0x40
 5678 0139 0A       		.uleb128 0xa
 5679 013a 01       		.uleb128 0x1
 5680 013b 13       		.uleb128 0x13
 5681 013c 00       		.byte	0
 5682 013d 00       		.byte	0
 5683 013e 19       		.uleb128 0x19
 5684 013f 05       		.uleb128 0x5
 5685 0140 00       		.byte	0
 5686 0141 03       		.uleb128 0x3
 5687 0142 0E       		.uleb128 0xe
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 137


 5688 0143 3A       		.uleb128 0x3a
 5689 0144 0B       		.uleb128 0xb
 5690 0145 3B       		.uleb128 0x3b
 5691 0146 05       		.uleb128 0x5
 5692 0147 49       		.uleb128 0x49
 5693 0148 13       		.uleb128 0x13
 5694 0149 02       		.uleb128 0x2
 5695 014a 06       		.uleb128 0x6
 5696 014b 00       		.byte	0
 5697 014c 00       		.byte	0
 5698 014d 1A       		.uleb128 0x1a
 5699 014e 34       		.uleb128 0x34
 5700 014f 00       		.byte	0
 5701 0150 03       		.uleb128 0x3
 5702 0151 0E       		.uleb128 0xe
 5703 0152 3A       		.uleb128 0x3a
 5704 0153 0B       		.uleb128 0xb
 5705 0154 3B       		.uleb128 0x3b
 5706 0155 05       		.uleb128 0x5
 5707 0156 49       		.uleb128 0x49
 5708 0157 13       		.uleb128 0x13
 5709 0158 02       		.uleb128 0x2
 5710 0159 0A       		.uleb128 0xa
 5711 015a 00       		.byte	0
 5712 015b 00       		.byte	0
 5713 015c 1B       		.uleb128 0x1b
 5714 015d 26       		.uleb128 0x26
 5715 015e 00       		.byte	0
 5716 015f 49       		.uleb128 0x49
 5717 0160 13       		.uleb128 0x13
 5718 0161 00       		.byte	0
 5719 0162 00       		.byte	0
 5720 0163 1C       		.uleb128 0x1c
 5721 0164 2E       		.uleb128 0x2e
 5722 0165 01       		.byte	0x1
 5723 0166 03       		.uleb128 0x3
 5724 0167 0E       		.uleb128 0xe
 5725 0168 3A       		.uleb128 0x3a
 5726 0169 0B       		.uleb128 0xb
 5727 016a 3B       		.uleb128 0x3b
 5728 016b 05       		.uleb128 0x5
 5729 016c 27       		.uleb128 0x27
 5730 016d 0C       		.uleb128 0xc
 5731 016e 49       		.uleb128 0x49
 5732 016f 13       		.uleb128 0x13
 5733 0170 11       		.uleb128 0x11
 5734 0171 01       		.uleb128 0x1
 5735 0172 12       		.uleb128 0x12
 5736 0173 01       		.uleb128 0x1
 5737 0174 40       		.uleb128 0x40
 5738 0175 06       		.uleb128 0x6
 5739 0176 01       		.uleb128 0x1
 5740 0177 13       		.uleb128 0x13
 5741 0178 00       		.byte	0
 5742 0179 00       		.byte	0
 5743 017a 1D       		.uleb128 0x1d
 5744 017b 05       		.uleb128 0x5
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 138


 5745 017c 00       		.byte	0
 5746 017d 03       		.uleb128 0x3
 5747 017e 0E       		.uleb128 0xe
 5748 017f 3A       		.uleb128 0x3a
 5749 0180 0B       		.uleb128 0xb
 5750 0181 3B       		.uleb128 0x3b
 5751 0182 05       		.uleb128 0x5
 5752 0183 49       		.uleb128 0x49
 5753 0184 13       		.uleb128 0x13
 5754 0185 02       		.uleb128 0x2
 5755 0186 0A       		.uleb128 0xa
 5756 0187 00       		.byte	0
 5757 0188 00       		.byte	0
 5758 0189 1E       		.uleb128 0x1e
 5759 018a 34       		.uleb128 0x34
 5760 018b 00       		.byte	0
 5761 018c 03       		.uleb128 0x3
 5762 018d 0E       		.uleb128 0xe
 5763 018e 3A       		.uleb128 0x3a
 5764 018f 0B       		.uleb128 0xb
 5765 0190 3B       		.uleb128 0x3b
 5766 0191 05       		.uleb128 0x5
 5767 0192 49       		.uleb128 0x49
 5768 0193 13       		.uleb128 0x13
 5769 0194 02       		.uleb128 0x2
 5770 0195 06       		.uleb128 0x6
 5771 0196 00       		.byte	0
 5772 0197 00       		.byte	0
 5773 0198 1F       		.uleb128 0x1f
 5774 0199 2E       		.uleb128 0x2e
 5775 019a 01       		.byte	0x1
 5776 019b 03       		.uleb128 0x3
 5777 019c 0E       		.uleb128 0xe
 5778 019d 3A       		.uleb128 0x3a
 5779 019e 0B       		.uleb128 0xb
 5780 019f 3B       		.uleb128 0x3b
 5781 01a0 05       		.uleb128 0x5
 5782 01a1 27       		.uleb128 0x27
 5783 01a2 0C       		.uleb128 0xc
 5784 01a3 11       		.uleb128 0x11
 5785 01a4 01       		.uleb128 0x1
 5786 01a5 12       		.uleb128 0x12
 5787 01a6 01       		.uleb128 0x1
 5788 01a7 40       		.uleb128 0x40
 5789 01a8 06       		.uleb128 0x6
 5790 01a9 01       		.uleb128 0x1
 5791 01aa 13       		.uleb128 0x13
 5792 01ab 00       		.byte	0
 5793 01ac 00       		.byte	0
 5794 01ad 20       		.uleb128 0x20
 5795 01ae 34       		.uleb128 0x34
 5796 01af 00       		.byte	0
 5797 01b0 03       		.uleb128 0x3
 5798 01b1 08       		.uleb128 0x8
 5799 01b2 3A       		.uleb128 0x3a
 5800 01b3 0B       		.uleb128 0xb
 5801 01b4 3B       		.uleb128 0x3b
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 139


 5802 01b5 05       		.uleb128 0x5
 5803 01b6 49       		.uleb128 0x49
 5804 01b7 13       		.uleb128 0x13
 5805 01b8 02       		.uleb128 0x2
 5806 01b9 06       		.uleb128 0x6
 5807 01ba 00       		.byte	0
 5808 01bb 00       		.byte	0
 5809 01bc 21       		.uleb128 0x21
 5810 01bd 2E       		.uleb128 0x2e
 5811 01be 01       		.byte	0x1
 5812 01bf 03       		.uleb128 0x3
 5813 01c0 0E       		.uleb128 0xe
 5814 01c1 3A       		.uleb128 0x3a
 5815 01c2 0B       		.uleb128 0xb
 5816 01c3 3B       		.uleb128 0x3b
 5817 01c4 0B       		.uleb128 0xb
 5818 01c5 27       		.uleb128 0x27
 5819 01c6 0C       		.uleb128 0xc
 5820 01c7 11       		.uleb128 0x11
 5821 01c8 01       		.uleb128 0x1
 5822 01c9 12       		.uleb128 0x12
 5823 01ca 01       		.uleb128 0x1
 5824 01cb 40       		.uleb128 0x40
 5825 01cc 06       		.uleb128 0x6
 5826 01cd 01       		.uleb128 0x1
 5827 01ce 13       		.uleb128 0x13
 5828 01cf 00       		.byte	0
 5829 01d0 00       		.byte	0
 5830 01d1 22       		.uleb128 0x22
 5831 01d2 34       		.uleb128 0x34
 5832 01d3 00       		.byte	0
 5833 01d4 03       		.uleb128 0x3
 5834 01d5 0E       		.uleb128 0xe
 5835 01d6 3A       		.uleb128 0x3a
 5836 01d7 0B       		.uleb128 0xb
 5837 01d8 3B       		.uleb128 0x3b
 5838 01d9 0B       		.uleb128 0xb
 5839 01da 49       		.uleb128 0x49
 5840 01db 13       		.uleb128 0x13
 5841 01dc 02       		.uleb128 0x2
 5842 01dd 0A       		.uleb128 0xa
 5843 01de 00       		.byte	0
 5844 01df 00       		.byte	0
 5845 01e0 23       		.uleb128 0x23
 5846 01e1 05       		.uleb128 0x5
 5847 01e2 00       		.byte	0
 5848 01e3 03       		.uleb128 0x3
 5849 01e4 0E       		.uleb128 0xe
 5850 01e5 3A       		.uleb128 0x3a
 5851 01e6 0B       		.uleb128 0xb
 5852 01e7 3B       		.uleb128 0x3b
 5853 01e8 0B       		.uleb128 0xb
 5854 01e9 49       		.uleb128 0x49
 5855 01ea 13       		.uleb128 0x13
 5856 01eb 02       		.uleb128 0x2
 5857 01ec 06       		.uleb128 0x6
 5858 01ed 00       		.byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 140


 5859 01ee 00       		.byte	0
 5860 01ef 24       		.uleb128 0x24
 5861 01f0 1D       		.uleb128 0x1d
 5862 01f1 00       		.byte	0
 5863 01f2 31       		.uleb128 0x31
 5864 01f3 13       		.uleb128 0x13
 5865 01f4 11       		.uleb128 0x11
 5866 01f5 01       		.uleb128 0x1
 5867 01f6 12       		.uleb128 0x12
 5868 01f7 01       		.uleb128 0x1
 5869 01f8 58       		.uleb128 0x58
 5870 01f9 0B       		.uleb128 0xb
 5871 01fa 59       		.uleb128 0x59
 5872 01fb 0B       		.uleb128 0xb
 5873 01fc 00       		.byte	0
 5874 01fd 00       		.byte	0
 5875 01fe 25       		.uleb128 0x25
 5876 01ff 2E       		.uleb128 0x2e
 5877 0200 01       		.byte	0x1
 5878 0201 31       		.uleb128 0x31
 5879 0202 13       		.uleb128 0x13
 5880 0203 11       		.uleb128 0x11
 5881 0204 01       		.uleb128 0x1
 5882 0205 12       		.uleb128 0x12
 5883 0206 01       		.uleb128 0x1
 5884 0207 40       		.uleb128 0x40
 5885 0208 06       		.uleb128 0x6
 5886 0209 01       		.uleb128 0x1
 5887 020a 13       		.uleb128 0x13
 5888 020b 00       		.byte	0
 5889 020c 00       		.byte	0
 5890 020d 26       		.uleb128 0x26
 5891 020e 05       		.uleb128 0x5
 5892 020f 00       		.byte	0
 5893 0210 31       		.uleb128 0x31
 5894 0211 13       		.uleb128 0x13
 5895 0212 02       		.uleb128 0x2
 5896 0213 06       		.uleb128 0x6
 5897 0214 00       		.byte	0
 5898 0215 00       		.byte	0
 5899 0216 27       		.uleb128 0x27
 5900 0217 1D       		.uleb128 0x1d
 5901 0218 01       		.byte	0x1
 5902 0219 31       		.uleb128 0x31
 5903 021a 13       		.uleb128 0x13
 5904 021b 11       		.uleb128 0x11
 5905 021c 01       		.uleb128 0x1
 5906 021d 12       		.uleb128 0x12
 5907 021e 01       		.uleb128 0x1
 5908 021f 58       		.uleb128 0x58
 5909 0220 0B       		.uleb128 0xb
 5910 0221 59       		.uleb128 0x59
 5911 0222 05       		.uleb128 0x5
 5912 0223 00       		.byte	0
 5913 0224 00       		.byte	0
 5914 0225 28       		.uleb128 0x28
 5915 0226 1D       		.uleb128 0x1d
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 141


 5916 0227 00       		.byte	0
 5917 0228 31       		.uleb128 0x31
 5918 0229 13       		.uleb128 0x13
 5919 022a 11       		.uleb128 0x11
 5920 022b 01       		.uleb128 0x1
 5921 022c 12       		.uleb128 0x12
 5922 022d 01       		.uleb128 0x1
 5923 022e 58       		.uleb128 0x58
 5924 022f 0B       		.uleb128 0xb
 5925 0230 59       		.uleb128 0x59
 5926 0231 05       		.uleb128 0x5
 5927 0232 00       		.byte	0
 5928 0233 00       		.byte	0
 5929 0234 29       		.uleb128 0x29
 5930 0235 34       		.uleb128 0x34
 5931 0236 00       		.byte	0
 5932 0237 31       		.uleb128 0x31
 5933 0238 13       		.uleb128 0x13
 5934 0239 00       		.byte	0
 5935 023a 00       		.byte	0
 5936 023b 2A       		.uleb128 0x2a
 5937 023c 1D       		.uleb128 0x1d
 5938 023d 01       		.byte	0x1
 5939 023e 31       		.uleb128 0x31
 5940 023f 13       		.uleb128 0x13
 5941 0240 52       		.uleb128 0x52
 5942 0241 01       		.uleb128 0x1
 5943 0242 55       		.uleb128 0x55
 5944 0243 06       		.uleb128 0x6
 5945 0244 58       		.uleb128 0x58
 5946 0245 0B       		.uleb128 0xb
 5947 0246 59       		.uleb128 0x59
 5948 0247 05       		.uleb128 0x5
 5949 0248 01       		.uleb128 0x1
 5950 0249 13       		.uleb128 0x13
 5951 024a 00       		.byte	0
 5952 024b 00       		.byte	0
 5953 024c 2B       		.uleb128 0x2b
 5954 024d 0B       		.uleb128 0xb
 5955 024e 01       		.byte	0x1
 5956 024f 55       		.uleb128 0x55
 5957 0250 06       		.uleb128 0x6
 5958 0251 00       		.byte	0
 5959 0252 00       		.byte	0
 5960 0253 2C       		.uleb128 0x2c
 5961 0254 34       		.uleb128 0x34
 5962 0255 00       		.byte	0
 5963 0256 31       		.uleb128 0x31
 5964 0257 13       		.uleb128 0x13
 5965 0258 02       		.uleb128 0x2
 5966 0259 0A       		.uleb128 0xa
 5967 025a 00       		.byte	0
 5968 025b 00       		.byte	0
 5969 025c 2D       		.uleb128 0x2d
 5970 025d 0B       		.uleb128 0xb
 5971 025e 01       		.byte	0x1
 5972 025f 11       		.uleb128 0x11
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 142


 5973 0260 01       		.uleb128 0x1
 5974 0261 12       		.uleb128 0x12
 5975 0262 01       		.uleb128 0x1
 5976 0263 00       		.byte	0
 5977 0264 00       		.byte	0
 5978 0265 2E       		.uleb128 0x2e
 5979 0266 34       		.uleb128 0x34
 5980 0267 00       		.byte	0
 5981 0268 31       		.uleb128 0x31
 5982 0269 13       		.uleb128 0x13
 5983 026a 02       		.uleb128 0x2
 5984 026b 06       		.uleb128 0x6
 5985 026c 00       		.byte	0
 5986 026d 00       		.byte	0
 5987 026e 2F       		.uleb128 0x2f
 5988 026f 05       		.uleb128 0x5
 5989 0270 00       		.byte	0
 5990 0271 31       		.uleb128 0x31
 5991 0272 13       		.uleb128 0x13
 5992 0273 00       		.byte	0
 5993 0274 00       		.byte	0
 5994 0275 30       		.uleb128 0x30
 5995 0276 35       		.uleb128 0x35
 5996 0277 00       		.byte	0
 5997 0278 49       		.uleb128 0x49
 5998 0279 13       		.uleb128 0x13
 5999 027a 00       		.byte	0
 6000 027b 00       		.byte	0
 6001 027c 31       		.uleb128 0x31
 6002 027d 2E       		.uleb128 0x2e
 6003 027e 01       		.byte	0x1
 6004 027f 3F       		.uleb128 0x3f
 6005 0280 0C       		.uleb128 0xc
 6006 0281 03       		.uleb128 0x3
 6007 0282 0E       		.uleb128 0xe
 6008 0283 3A       		.uleb128 0x3a
 6009 0284 0B       		.uleb128 0xb
 6010 0285 3B       		.uleb128 0x3b
 6011 0286 05       		.uleb128 0x5
 6012 0287 27       		.uleb128 0x27
 6013 0288 0C       		.uleb128 0xc
 6014 0289 11       		.uleb128 0x11
 6015 028a 01       		.uleb128 0x1
 6016 028b 12       		.uleb128 0x12
 6017 028c 01       		.uleb128 0x1
 6018 028d 40       		.uleb128 0x40
 6019 028e 06       		.uleb128 0x6
 6020 028f 01       		.uleb128 0x1
 6021 0290 13       		.uleb128 0x13
 6022 0291 00       		.byte	0
 6023 0292 00       		.byte	0
 6024 0293 32       		.uleb128 0x32
 6025 0294 1D       		.uleb128 0x1d
 6026 0295 01       		.byte	0x1
 6027 0296 31       		.uleb128 0x31
 6028 0297 13       		.uleb128 0x13
 6029 0298 11       		.uleb128 0x11
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 143


 6030 0299 01       		.uleb128 0x1
 6031 029a 12       		.uleb128 0x12
 6032 029b 01       		.uleb128 0x1
 6033 029c 58       		.uleb128 0x58
 6034 029d 0B       		.uleb128 0xb
 6035 029e 59       		.uleb128 0x59
 6036 029f 05       		.uleb128 0x5
 6037 02a0 01       		.uleb128 0x1
 6038 02a1 13       		.uleb128 0x13
 6039 02a2 00       		.byte	0
 6040 02a3 00       		.byte	0
 6041 02a4 33       		.uleb128 0x33
 6042 02a5 0B       		.uleb128 0xb
 6043 02a6 01       		.byte	0x1
 6044 02a7 55       		.uleb128 0x55
 6045 02a8 06       		.uleb128 0x6
 6046 02a9 01       		.uleb128 0x1
 6047 02aa 13       		.uleb128 0x13
 6048 02ab 00       		.byte	0
 6049 02ac 00       		.byte	0
 6050 02ad 34       		.uleb128 0x34
 6051 02ae 1D       		.uleb128 0x1d
 6052 02af 01       		.byte	0x1
 6053 02b0 31       		.uleb128 0x31
 6054 02b1 13       		.uleb128 0x13
 6055 02b2 52       		.uleb128 0x52
 6056 02b3 01       		.uleb128 0x1
 6057 02b4 55       		.uleb128 0x55
 6058 02b5 06       		.uleb128 0x6
 6059 02b6 58       		.uleb128 0x58
 6060 02b7 0B       		.uleb128 0xb
 6061 02b8 59       		.uleb128 0x59
 6062 02b9 05       		.uleb128 0x5
 6063 02ba 00       		.byte	0
 6064 02bb 00       		.byte	0
 6065 02bc 35       		.uleb128 0x35
 6066 02bd 0B       		.uleb128 0xb
 6067 02be 01       		.byte	0x1
 6068 02bf 11       		.uleb128 0x11
 6069 02c0 01       		.uleb128 0x1
 6070 02c1 12       		.uleb128 0x12
 6071 02c2 01       		.uleb128 0x1
 6072 02c3 01       		.uleb128 0x1
 6073 02c4 13       		.uleb128 0x13
 6074 02c5 00       		.byte	0
 6075 02c6 00       		.byte	0
 6076 02c7 36       		.uleb128 0x36
 6077 02c8 34       		.uleb128 0x34
 6078 02c9 00       		.byte	0
 6079 02ca 03       		.uleb128 0x3
 6080 02cb 08       		.uleb128 0x8
 6081 02cc 3A       		.uleb128 0x3a
 6082 02cd 0B       		.uleb128 0xb
 6083 02ce 3B       		.uleb128 0x3b
 6084 02cf 0B       		.uleb128 0xb
 6085 02d0 49       		.uleb128 0x49
 6086 02d1 13       		.uleb128 0x13
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 144


 6087 02d2 3F       		.uleb128 0x3f
 6088 02d3 0C       		.uleb128 0xc
 6089 02d4 3C       		.uleb128 0x3c
 6090 02d5 0C       		.uleb128 0xc
 6091 02d6 00       		.byte	0
 6092 02d7 00       		.byte	0
 6093 02d8 00       		.byte	0
 6094              		.section	.debug_loc,"",%progbits
 6095              	.Ldebug_loc0:
 6096              	.LLST0:
 6097 0000 00000000 		.4byte	.LVL0-.Ltext0
 6098 0004 0C000000 		.4byte	.LVL2-.Ltext0
 6099 0008 0100     		.2byte	0x1
 6100 000a 50       		.byte	0x50
 6101 000b 0C000000 		.4byte	.LVL2-.Ltext0
 6102 000f 1C000000 		.4byte	.LFE11-.Ltext0
 6103 0013 0300     		.2byte	0x3
 6104 0015 70       		.byte	0x70
 6105 0016 01       		.sleb128 1
 6106 0017 9F       		.byte	0x9f
 6107 0018 00000000 		.4byte	0
 6108 001c 00000000 		.4byte	0
 6109              	.LLST1:
 6110 0020 00000000 		.4byte	.LVL0-.Ltext0
 6111 0024 02000000 		.4byte	.LVL1-.Ltext0
 6112 0028 0100     		.2byte	0x1
 6113 002a 51       		.byte	0x51
 6114 002b 00000000 		.4byte	0
 6115 002f 00000000 		.4byte	0
 6116              	.LLST2:
 6117 0033 1C000000 		.4byte	.LFB12-.Ltext0
 6118 0037 1E000000 		.4byte	.LCFI0-.Ltext0
 6119 003b 0200     		.2byte	0x2
 6120 003d 7D       		.byte	0x7d
 6121 003e 00       		.sleb128 0
 6122 003f 1E000000 		.4byte	.LCFI0-.Ltext0
 6123 0043 78000000 		.4byte	.LFE12-.Ltext0
 6124 0047 0200     		.2byte	0x2
 6125 0049 7D       		.byte	0x7d
 6126 004a 08       		.sleb128 8
 6127 004b 00000000 		.4byte	0
 6128 004f 00000000 		.4byte	0
 6129              	.LLST3:
 6130 0053 1E000000 		.4byte	.LVL3-.Ltext0
 6131 0057 2C000000 		.4byte	.LVL4-.Ltext0
 6132 005b 0100     		.2byte	0x1
 6133 005d 50       		.byte	0x50
 6134 005e 2C000000 		.4byte	.LVL4-.Ltext0
 6135 0062 48000000 		.4byte	.LVL8-.Ltext0
 6136 0066 0100     		.2byte	0x1
 6137 0068 53       		.byte	0x53
 6138 0069 00000000 		.4byte	0
 6139 006d 00000000 		.4byte	0
 6140              	.LLST4:
 6141 0071 1E000000 		.4byte	.LVL3-.Ltext0
 6142 0075 3E000000 		.4byte	.LVL5-.Ltext0
 6143 0079 0300     		.2byte	0x3
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 145


 6144 007b 08       		.byte	0x8
 6145 007c 63       		.byte	0x63
 6146 007d 9F       		.byte	0x9f
 6147 007e 3E000000 		.4byte	.LVL5-.Ltext0
 6148 0082 40000000 		.4byte	.LVL6-.Ltext0
 6149 0086 0100     		.2byte	0x1
 6150 0088 52       		.byte	0x52
 6151 0089 40000000 		.4byte	.LVL6-.Ltext0
 6152 008d 44000000 		.4byte	.LVL7-.Ltext0
 6153 0091 0300     		.2byte	0x3
 6154 0093 08       		.byte	0x8
 6155 0094 63       		.byte	0x63
 6156 0095 9F       		.byte	0x9f
 6157 0096 44000000 		.4byte	.LVL7-.Ltext0
 6158 009a 4A000000 		.4byte	.LVL9-.Ltext0
 6159 009e 0100     		.2byte	0x1
 6160 00a0 52       		.byte	0x52
 6161 00a1 52000000 		.4byte	.LVL10-.Ltext0
 6162 00a5 68000000 		.4byte	.LVL12-.Ltext0
 6163 00a9 0100     		.2byte	0x1
 6164 00ab 52       		.byte	0x52
 6165 00ac 6C000000 		.4byte	.LVL13-.Ltext0
 6166 00b0 78000000 		.4byte	.LFE12-.Ltext0
 6167 00b4 0100     		.2byte	0x1
 6168 00b6 52       		.byte	0x52
 6169 00b7 00000000 		.4byte	0
 6170 00bb 00000000 		.4byte	0
 6171              	.LLST5:
 6172 00bf 1E000000 		.4byte	.LVL3-.Ltext0
 6173 00c3 44000000 		.4byte	.LVL7-.Ltext0
 6174 00c7 0200     		.2byte	0x2
 6175 00c9 31       		.byte	0x31
 6176 00ca 9F       		.byte	0x9f
 6177 00cb 44000000 		.4byte	.LVL7-.Ltext0
 6178 00cf 78000000 		.4byte	.LFE12-.Ltext0
 6179 00d3 0100     		.2byte	0x1
 6180 00d5 50       		.byte	0x50
 6181 00d6 00000000 		.4byte	0
 6182 00da 00000000 		.4byte	0
 6183              	.LLST6:
 6184 00de 78000000 		.4byte	.LFB15-.Ltext0
 6185 00e2 7A000000 		.4byte	.LCFI1-.Ltext0
 6186 00e6 0200     		.2byte	0x2
 6187 00e8 7D       		.byte	0x7d
 6188 00e9 00       		.sleb128 0
 6189 00ea 7A000000 		.4byte	.LCFI1-.Ltext0
 6190 00ee DC000000 		.4byte	.LFE15-.Ltext0
 6191 00f2 0200     		.2byte	0x2
 6192 00f4 7D       		.byte	0x7d
 6193 00f5 14       		.sleb128 20
 6194 00f6 00000000 		.4byte	0
 6195 00fa 00000000 		.4byte	0
 6196              	.LLST7:
 6197 00fe 7A000000 		.4byte	.LVL15-.Ltext0
 6198 0102 84000000 		.4byte	.LVL16-.Ltext0
 6199 0106 0100     		.2byte	0x1
 6200 0108 50       		.byte	0x50
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 146


 6201 0109 00000000 		.4byte	0
 6202 010d 00000000 		.4byte	0
 6203              	.LLST8:
 6204 0111 7A000000 		.4byte	.LVL15-.Ltext0
 6205 0115 84000000 		.4byte	.LVL16-.Ltext0
 6206 0119 0200     		.2byte	0x2
 6207 011b 30       		.byte	0x30
 6208 011c 9F       		.byte	0x9f
 6209 011d C6000000 		.4byte	.LVL17-.Ltext0
 6210 0121 CC000000 		.4byte	.LVL18-.Ltext0
 6211 0125 0100     		.2byte	0x1
 6212 0127 54       		.byte	0x54
 6213 0128 00000000 		.4byte	0
 6214 012c 00000000 		.4byte	0
 6215              	.LLST9:
 6216 0130 DC000000 		.4byte	.LFB1-.Ltext0
 6217 0134 DE000000 		.4byte	.LCFI2-.Ltext0
 6218 0138 0200     		.2byte	0x2
 6219 013a 7D       		.byte	0x7d
 6220 013b 00       		.sleb128 0
 6221 013c DE000000 		.4byte	.LCFI2-.Ltext0
 6222 0140 A4010000 		.4byte	.LFE1-.Ltext0
 6223 0144 0200     		.2byte	0x2
 6224 0146 7D       		.byte	0x7d
 6225 0147 14       		.sleb128 20
 6226 0148 00000000 		.4byte	0
 6227 014c 00000000 		.4byte	0
 6228              	.LLST10:
 6229 0150 A4010000 		.4byte	.LFB3-.Ltext0
 6230 0154 A6010000 		.4byte	.LCFI3-.Ltext0
 6231 0158 0200     		.2byte	0x2
 6232 015a 7D       		.byte	0x7d
 6233 015b 00       		.sleb128 0
 6234 015c A6010000 		.4byte	.LCFI3-.Ltext0
 6235 0160 F8010000 		.4byte	.LFE3-.Ltext0
 6236 0164 0200     		.2byte	0x2
 6237 0166 7D       		.byte	0x7d
 6238 0167 0C       		.sleb128 12
 6239 0168 00000000 		.4byte	0
 6240 016c 00000000 		.4byte	0
 6241              	.LLST11:
 6242 0170 A6010000 		.4byte	.LVL19-.Ltext0
 6243 0174 C9010000 		.4byte	.LVL20-1-.Ltext0
 6244 0178 0100     		.2byte	0x1
 6245 017a 50       		.byte	0x50
 6246 017b C9010000 		.4byte	.LVL20-1-.Ltext0
 6247 017f D4010000 		.4byte	.LVL21-.Ltext0
 6248 0183 0100     		.2byte	0x1
 6249 0185 55       		.byte	0x55
 6250 0186 D4010000 		.4byte	.LVL21-.Ltext0
 6251 018a F8010000 		.4byte	.LFE3-.Ltext0
 6252 018e 0500     		.2byte	0x5
 6253 0190 03       		.byte	0x3
 6254 0191 5C000000 		.4byte	pActivePlayer
 6255 0195 00000000 		.4byte	0
 6256 0199 00000000 		.4byte	0
 6257              	.LLST12:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 147


 6258 019d F8010000 		.4byte	.LFB2-.Ltext0
 6259 01a1 FA010000 		.4byte	.LCFI4-.Ltext0
 6260 01a5 0200     		.2byte	0x2
 6261 01a7 7D       		.byte	0x7d
 6262 01a8 00       		.sleb128 0
 6263 01a9 FA010000 		.4byte	.LCFI4-.Ltext0
 6264 01ad 4C020000 		.4byte	.LFE2-.Ltext0
 6265 01b1 0200     		.2byte	0x2
 6266 01b3 7D       		.byte	0x7d
 6267 01b4 0C       		.sleb128 12
 6268 01b5 00000000 		.4byte	0
 6269 01b9 00000000 		.4byte	0
 6270              	.LLST13:
 6271 01bd 4C020000 		.4byte	.LFB5-.Ltext0
 6272 01c1 4E020000 		.4byte	.LCFI5-.Ltext0
 6273 01c5 0200     		.2byte	0x2
 6274 01c7 7D       		.byte	0x7d
 6275 01c8 00       		.sleb128 0
 6276 01c9 4E020000 		.4byte	.LCFI5-.Ltext0
 6277 01cd 14030000 		.4byte	.LFE5-.Ltext0
 6278 01d1 0200     		.2byte	0x2
 6279 01d3 7D       		.byte	0x7d
 6280 01d4 0C       		.sleb128 12
 6281 01d5 00000000 		.4byte	0
 6282 01d9 00000000 		.4byte	0
 6283              	.LLST14:
 6284 01dd 4E020000 		.4byte	.LVL22-.Ltext0
 6285 01e1 64020000 		.4byte	.LVL24-.Ltext0
 6286 01e5 0100     		.2byte	0x1
 6287 01e7 50       		.byte	0x50
 6288 01e8 64020000 		.4byte	.LVL24-.Ltext0
 6289 01ec 00030000 		.4byte	.LVL28-.Ltext0
 6290 01f0 0100     		.2byte	0x1
 6291 01f2 54       		.byte	0x54
 6292 01f3 00000000 		.4byte	0
 6293 01f7 00000000 		.4byte	0
 6294              	.LLST15:
 6295 01fb 4E020000 		.4byte	.LVL22-.Ltext0
 6296 01ff 50020000 		.4byte	.LVL23-.Ltext0
 6297 0203 0100     		.2byte	0x1
 6298 0205 51       		.byte	0x51
 6299 0206 00000000 		.4byte	0
 6300 020a 00000000 		.4byte	0
 6301              	.LLST16:
 6302 020e 6C020000 		.4byte	.LVL25-.Ltext0
 6303 0212 CE020000 		.4byte	.LVL26-.Ltext0
 6304 0216 0100     		.2byte	0x1
 6305 0218 51       		.byte	0x51
 6306 0219 00000000 		.4byte	0
 6307 021d 00000000 		.4byte	0
 6308              	.LLST17:
 6309 0221 6C020000 		.4byte	.LVL25-.Ltext0
 6310 0225 00030000 		.4byte	.LVL27-.Ltext0
 6311 0229 0100     		.2byte	0x1
 6312 022b 54       		.byte	0x54
 6313 022c 00000000 		.4byte	0
 6314 0230 00000000 		.4byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 148


 6315              	.LLST18:
 6316 0234 14030000 		.4byte	.LFB14-.Ltext0
 6317 0238 16030000 		.4byte	.LCFI6-.Ltext0
 6318 023c 0200     		.2byte	0x2
 6319 023e 7D       		.byte	0x7d
 6320 023f 00       		.sleb128 0
 6321 0240 16030000 		.4byte	.LCFI6-.Ltext0
 6322 0244 18030000 		.4byte	.LCFI7-.Ltext0
 6323 0248 0200     		.2byte	0x2
 6324 024a 7D       		.byte	0x7d
 6325 024b 14       		.sleb128 20
 6326 024c 18030000 		.4byte	.LCFI7-.Ltext0
 6327 0250 F4040000 		.4byte	.LFE14-.Ltext0
 6328 0254 0200     		.2byte	0x2
 6329 0256 7D       		.byte	0x7d
 6330 0257 30       		.sleb128 48
 6331 0258 00000000 		.4byte	0
 6332 025c 00000000 		.4byte	0
 6333              	.LLST19:
 6334 0260 16030000 		.4byte	.LVL29-.Ltext0
 6335 0264 1A030000 		.4byte	.LVL30-.Ltext0
 6336 0268 0100     		.2byte	0x1
 6337 026a 50       		.byte	0x50
 6338 026b 00000000 		.4byte	0
 6339 026f 00000000 		.4byte	0
 6340              	.LLST20:
 6341 0273 16030000 		.4byte	.LVL29-.Ltext0
 6342 0277 1C030000 		.4byte	.LVL31-.Ltext0
 6343 027b 0100     		.2byte	0x1
 6344 027d 51       		.byte	0x51
 6345 027e 00000000 		.4byte	0
 6346 0282 00000000 		.4byte	0
 6347              	.LLST21:
 6348 0286 B4030000 		.4byte	.LVL37-.Ltext0
 6349 028a D4030000 		.4byte	.LVL43-.Ltext0
 6350 028e 0200     		.2byte	0x2
 6351 0290 77       		.byte	0x77
 6352 0291 00       		.sleb128 0
 6353 0292 F6030000 		.4byte	.LVL44-.Ltext0
 6354 0296 00040000 		.4byte	.LVL46-.Ltext0
 6355 029a 0200     		.2byte	0x2
 6356 029c 77       		.byte	0x77
 6357 029d 00       		.sleb128 0
 6358 029e 2A040000 		.4byte	.LVL47-.Ltext0
 6359 02a2 F4040000 		.4byte	.LFE14-.Ltext0
 6360 02a6 0200     		.2byte	0x2
 6361 02a8 77       		.byte	0x77
 6362 02a9 00       		.sleb128 0
 6363 02aa 00000000 		.4byte	0
 6364 02ae 00000000 		.4byte	0
 6365              	.LLST22:
 6366 02b2 BE030000 		.4byte	.LVL38-.Ltext0
 6367 02b6 C0030000 		.4byte	.LVL39-.Ltext0
 6368 02ba 0200     		.2byte	0x2
 6369 02bc 76       		.byte	0x76
 6370 02bd 00       		.sleb128 0
 6371 02be C4030000 		.4byte	.LVL40-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 149


 6372 02c2 CC030000 		.4byte	.LVL41-.Ltext0
 6373 02c6 0100     		.2byte	0x1
 6374 02c8 52       		.byte	0x52
 6375 02c9 CC030000 		.4byte	.LVL41-.Ltext0
 6376 02cd D1030000 		.4byte	.LVL42-1-.Ltext0
 6377 02d1 0100     		.2byte	0x1
 6378 02d3 53       		.byte	0x53
 6379 02d4 F6030000 		.4byte	.LVL44-.Ltext0
 6380 02d8 FA030000 		.4byte	.LVL45-.Ltext0
 6381 02dc 0100     		.2byte	0x1
 6382 02de 52       		.byte	0x52
 6383 02df 00000000 		.4byte	0
 6384 02e3 00000000 		.4byte	0
 6385              	.LLST23:
 6386 02e7 7A030000 		.4byte	.LVL33-.Ltext0
 6387 02eb 7C030000 		.4byte	.LVL34-.Ltext0
 6388 02ef 0200     		.2byte	0x2
 6389 02f1 76       		.byte	0x76
 6390 02f2 00       		.sleb128 0
 6391 02f3 8E030000 		.4byte	.LVL35-.Ltext0
 6392 02f7 90030000 		.4byte	.LVL36-.Ltext0
 6393 02fb 0200     		.2byte	0x2
 6394 02fd 76       		.byte	0x76
 6395 02fe 00       		.sleb128 0
 6396 02ff 00000000 		.4byte	0
 6397 0303 00000000 		.4byte	0
 6398              	.LLST24:
 6399 0307 40040000 		.4byte	.LVL48-.Ltext0
 6400 030b DC040000 		.4byte	.LVL49-.Ltext0
 6401 030f 0200     		.2byte	0x2
 6402 0311 7D       		.byte	0x7d
 6403 0312 00       		.sleb128 0
 6404 0313 00000000 		.4byte	0
 6405 0317 00000000 		.4byte	0
 6406              	.LLST25:
 6407 031b F4040000 		.4byte	.LFB7-.Ltext0
 6408 031f F6040000 		.4byte	.LCFI8-.Ltext0
 6409 0323 0200     		.2byte	0x2
 6410 0325 7D       		.byte	0x7d
 6411 0326 00       		.sleb128 0
 6412 0327 F6040000 		.4byte	.LCFI8-.Ltext0
 6413 032b F8040000 		.4byte	.LCFI9-.Ltext0
 6414 032f 0200     		.2byte	0x2
 6415 0331 7D       		.byte	0x7d
 6416 0332 14       		.sleb128 20
 6417 0333 F8040000 		.4byte	.LCFI9-.Ltext0
 6418 0337 FC150000 		.4byte	.LFE7-.Ltext0
 6419 033b 0300     		.2byte	0x3
 6420 033d 7D       		.byte	0x7d
 6421 033e D801     		.sleb128 216
 6422 0340 00000000 		.4byte	0
 6423 0344 00000000 		.4byte	0
 6424              	.LLST26:
 6425 0348 F6040000 		.4byte	.LVL50-.Ltext0
 6426 034c 440E0000 		.4byte	.LVL139-.Ltext0
 6427 0350 0200     		.2byte	0x2
 6428 0352 30       		.byte	0x30
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 150


 6429 0353 9F       		.byte	0x9f
 6430 0354 4E0E0000 		.4byte	.LVL142-.Ltext0
 6431 0358 5A0E0000 		.4byte	.LVL144-.Ltext0
 6432 035c 0200     		.2byte	0x2
 6433 035e 30       		.byte	0x30
 6434 035f 9F       		.byte	0x9f
 6435 0360 940E0000 		.4byte	.LVL151-.Ltext0
 6436 0364 F20E0000 		.4byte	.LVL152-.Ltext0
 6437 0368 0200     		.2byte	0x2
 6438 036a 31       		.byte	0x31
 6439 036b 9F       		.byte	0x9f
 6440 036c F20E0000 		.4byte	.LVL152-.Ltext0
 6441 0370 EA140000 		.4byte	.LVL176-.Ltext0
 6442 0374 0300     		.2byte	0x3
 6443 0376 91       		.byte	0x91
 6444 0377 F07E     		.sleb128 -144
 6445 0379 EA140000 		.4byte	.LVL176-.Ltext0
 6446 037d 50150000 		.4byte	.LVL177-.Ltext0
 6447 0381 0200     		.2byte	0x2
 6448 0383 31       		.byte	0x31
 6449 0384 9F       		.byte	0x9f
 6450 0385 50150000 		.4byte	.LVL177-.Ltext0
 6451 0389 58150000 		.4byte	.LVL178-.Ltext0
 6452 038d 0300     		.2byte	0x3
 6453 038f 91       		.byte	0x91
 6454 0390 F07E     		.sleb128 -144
 6455 0392 5E150000 		.4byte	.LVL179-.Ltext0
 6456 0396 6A150000 		.4byte	.LVL182-.Ltext0
 6457 039a 0200     		.2byte	0x2
 6458 039c 30       		.byte	0x30
 6459 039d 9F       		.byte	0x9f
 6460 039e B4150000 		.4byte	.LVL183-.Ltext0
 6461 03a2 FC150000 		.4byte	.LFE7-.Ltext0
 6462 03a6 0200     		.2byte	0x2
 6463 03a8 31       		.byte	0x31
 6464 03a9 9F       		.byte	0x9f
 6465 03aa 00000000 		.4byte	0
 6466 03ae 00000000 		.4byte	0
 6467              	.LLST27:
 6468 03b2 F6040000 		.4byte	.LVL50-.Ltext0
 6469 03b6 4C0C0000 		.4byte	.LVL123-.Ltext0
 6470 03ba 0200     		.2byte	0x2
 6471 03bc 30       		.byte	0x30
 6472 03bd 9F       		.byte	0x9f
 6473 03be 4C0C0000 		.4byte	.LVL123-.Ltext0
 6474 03c2 500C0000 		.4byte	.LVL124-.Ltext0
 6475 03c6 0200     		.2byte	0x2
 6476 03c8 31       		.byte	0x31
 6477 03c9 9F       		.byte	0x9f
 6478 03ca 500C0000 		.4byte	.LVL124-.Ltext0
 6479 03ce E40D0000 		.4byte	.LVL135-.Ltext0
 6480 03d2 0200     		.2byte	0x2
 6481 03d4 30       		.byte	0x30
 6482 03d5 9F       		.byte	0x9f
 6483 03d6 E40D0000 		.4byte	.LVL135-.Ltext0
 6484 03da E60D0000 		.4byte	.LVL136-.Ltext0
 6485 03de 0200     		.2byte	0x2
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 151


 6486 03e0 31       		.byte	0x31
 6487 03e1 9F       		.byte	0x9f
 6488 03e2 E60D0000 		.4byte	.LVL136-.Ltext0
 6489 03e6 440E0000 		.4byte	.LVL139-.Ltext0
 6490 03ea 0200     		.2byte	0x2
 6491 03ec 30       		.byte	0x30
 6492 03ed 9F       		.byte	0x9f
 6493 03ee 440E0000 		.4byte	.LVL139-.Ltext0
 6494 03f2 460E0000 		.4byte	.LVL140-.Ltext0
 6495 03f6 0300     		.2byte	0x3
 6496 03f8 91       		.byte	0x91
 6497 03f9 DC7E     		.sleb128 -164
 6498 03fb 460E0000 		.4byte	.LVL140-.Ltext0
 6499 03ff 4A0E0000 		.4byte	.LVL141-.Ltext0
 6500 0403 0200     		.2byte	0x2
 6501 0405 77       		.byte	0x77
 6502 0406 00       		.sleb128 0
 6503 0407 4A0E0000 		.4byte	.LVL141-.Ltext0
 6504 040b 560E0000 		.4byte	.LVL143-.Ltext0
 6505 040f 0300     		.2byte	0x3
 6506 0411 91       		.byte	0x91
 6507 0412 DC7E     		.sleb128 -164
 6508 0414 560E0000 		.4byte	.LVL143-.Ltext0
 6509 0418 5A0E0000 		.4byte	.LVL144-.Ltext0
 6510 041c 0200     		.2byte	0x2
 6511 041e 30       		.byte	0x30
 6512 041f 9F       		.byte	0x9f
 6513 0420 F20E0000 		.4byte	.LVL152-.Ltext0
 6514 0424 58150000 		.4byte	.LVL178-.Ltext0
 6515 0428 0300     		.2byte	0x3
 6516 042a 91       		.byte	0x91
 6517 042b F87E     		.sleb128 -136
 6518 042d 5E150000 		.4byte	.LVL179-.Ltext0
 6519 0431 66150000 		.4byte	.LVL181-.Ltext0
 6520 0435 0200     		.2byte	0x2
 6521 0437 30       		.byte	0x30
 6522 0438 9F       		.byte	0x9f
 6523 0439 6A150000 		.4byte	.LVL182-.Ltext0
 6524 043d B4150000 		.4byte	.LVL183-.Ltext0
 6525 0441 0300     		.2byte	0x3
 6526 0443 91       		.byte	0x91
 6527 0444 DC7E     		.sleb128 -164
 6528 0446 B4150000 		.4byte	.LVL183-.Ltext0
 6529 044a B6150000 		.4byte	.LVL184-.Ltext0
 6530 044e 0300     		.2byte	0x3
 6531 0450 91       		.byte	0x91
 6532 0451 F87E     		.sleb128 -136
 6533 0453 B6150000 		.4byte	.LVL184-.Ltext0
 6534 0457 FC150000 		.4byte	.LFE7-.Ltext0
 6535 045b 0300     		.2byte	0x3
 6536 045d 91       		.byte	0x91
 6537 045e DC7E     		.sleb128 -164
 6538 0460 00000000 		.4byte	0
 6539 0464 00000000 		.4byte	0
 6540              	.LLST28:
 6541 0468 C00C0000 		.4byte	.LVL125-.Ltext0
 6542 046c 440E0000 		.4byte	.LVL139-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 152


 6543 0470 0200     		.2byte	0x2
 6544 0472 30       		.byte	0x30
 6545 0473 9F       		.byte	0x9f
 6546 0474 00000000 		.4byte	0
 6547 0478 00000000 		.4byte	0
 6548              	.LLST29:
 6549 047c B0050000 		.4byte	.LVL51-.Ltext0
 6550 0480 500C0000 		.4byte	.LVL124-.Ltext0
 6551 0484 0300     		.2byte	0x3
 6552 0486 91       		.byte	0x91
 6553 0487 68       		.sleb128 -24
 6554 0488 9F       		.byte	0x9f
 6555 0489 5E150000 		.4byte	.LVL179-.Ltext0
 6556 048d 62150000 		.4byte	.LVL180-.Ltext0
 6557 0491 0300     		.2byte	0x3
 6558 0493 91       		.byte	0x91
 6559 0494 68       		.sleb128 -24
 6560 0495 9F       		.byte	0x9f
 6561 0496 00000000 		.4byte	0
 6562 049a 00000000 		.4byte	0
 6563              	.LLST30:
 6564 049e 36060000 		.4byte	.LVL56-.Ltext0
 6565 04a2 4C060000 		.4byte	.LVL57-.Ltext0
 6566 04a6 0200     		.2byte	0x2
 6567 04a8 70       		.byte	0x70
 6568 04a9 00       		.sleb128 0
 6569 04aa 54060000 		.4byte	.LVL58-.Ltext0
 6570 04ae 72070000 		.4byte	.LVL70-.Ltext0
 6571 04b2 0200     		.2byte	0x2
 6572 04b4 70       		.byte	0x70
 6573 04b5 00       		.sleb128 0
 6574 04b6 7C070000 		.4byte	.LVL71-.Ltext0
 6575 04ba 500C0000 		.4byte	.LVL124-.Ltext0
 6576 04be 0200     		.2byte	0x2
 6577 04c0 71       		.byte	0x71
 6578 04c1 00       		.sleb128 0
 6579 04c2 440E0000 		.4byte	.LVL139-.Ltext0
 6580 04c6 62150000 		.4byte	.LVL180-.Ltext0
 6581 04ca 0200     		.2byte	0x2
 6582 04cc 70       		.byte	0x70
 6583 04cd 00       		.sleb128 0
 6584 04ce 66150000 		.4byte	.LVL181-.Ltext0
 6585 04d2 FC150000 		.4byte	.LFE7-.Ltext0
 6586 04d6 0200     		.2byte	0x2
 6587 04d8 70       		.byte	0x70
 6588 04d9 00       		.sleb128 0
 6589 04da 00000000 		.4byte	0
 6590 04de 00000000 		.4byte	0
 6591              	.LLST31:
 6592 04e2 32060000 		.4byte	.LVL55-.Ltext0
 6593 04e6 36060000 		.4byte	.LVL56-.Ltext0
 6594 04ea 0200     		.2byte	0x2
 6595 04ec 30       		.byte	0x30
 6596 04ed 9F       		.byte	0x9f
 6597 04ee CA060000 		.4byte	.LVL63-.Ltext0
 6598 04f2 26070000 		.4byte	.LVL65-.Ltext0
 6599 04f6 0100     		.2byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 153


 6600 04f8 56       		.byte	0x56
 6601 04f9 5C070000 		.4byte	.LVL68-.Ltext0
 6602 04fd 5E070000 		.4byte	.LVL69-.Ltext0
 6603 0501 0200     		.2byte	0x2
 6604 0503 30       		.byte	0x30
 6605 0504 9F       		.byte	0x9f
 6606 0505 F0070000 		.4byte	.LVL78-.Ltext0
 6607 0509 C0080000 		.4byte	.LVL80-.Ltext0
 6608 050d 0100     		.2byte	0x1
 6609 050f 56       		.byte	0x56
 6610 0510 F8080000 		.4byte	.LVL83-.Ltext0
 6611 0514 00090000 		.4byte	.LVL84-.Ltext0
 6612 0518 0200     		.2byte	0x2
 6613 051a 30       		.byte	0x30
 6614 051b 9F       		.byte	0x9f
 6615 051c 3A090000 		.4byte	.LVL92-.Ltext0
 6616 0520 DC090000 		.4byte	.LVL98-.Ltext0
 6617 0524 0100     		.2byte	0x1
 6618 0526 54       		.byte	0x54
 6619 0527 00000000 		.4byte	0
 6620 052b 00000000 		.4byte	0
 6621              	.LLST32:
 6622 052f 04090000 		.4byte	.LVL85-.Ltext0
 6623 0533 34090000 		.4byte	.LVL91-.Ltext0
 6624 0537 0100     		.2byte	0x1
 6625 0539 50       		.byte	0x50
 6626 053a 00000000 		.4byte	0
 6627 053e 00000000 		.4byte	0
 6628              	.LLST33:
 6629 0542 F8080000 		.4byte	.LVL83-.Ltext0
 6630 0546 00090000 		.4byte	.LVL84-.Ltext0
 6631 054a 0200     		.2byte	0x2
 6632 054c 30       		.byte	0x30
 6633 054d 9F       		.byte	0x9f
 6634 054e 1C090000 		.4byte	.LVL86-.Ltext0
 6635 0552 1E090000 		.4byte	.LVL87-.Ltext0
 6636 0556 0100     		.2byte	0x1
 6637 0558 55       		.byte	0x55
 6638 0559 2E090000 		.4byte	.LVL88-.Ltext0
 6639 055d 30090000 		.4byte	.LVL89-.Ltext0
 6640 0561 0100     		.2byte	0x1
 6641 0563 55       		.byte	0x55
 6642 0564 32090000 		.4byte	.LVL90-.Ltext0
 6643 0568 48090000 		.4byte	.LVL93-.Ltext0
 6644 056c 0100     		.2byte	0x1
 6645 056e 55       		.byte	0x55
 6646 056f 00000000 		.4byte	0
 6647 0573 00000000 		.4byte	0
 6648              	.LLST34:
 6649 0577 2E060000 		.4byte	.LVL54-.Ltext0
 6650 057b 36060000 		.4byte	.LVL56-.Ltext0
 6651 057f 0100     		.2byte	0x1
 6652 0581 52       		.byte	0x52
 6653 0582 36060000 		.4byte	.LVL56-.Ltext0
 6654 0586 58070000 		.4byte	.LVL67-.Ltext0
 6655 058a 0200     		.2byte	0x2
 6656 058c 91       		.byte	0x91
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 154


 6657 058d 78       		.sleb128 -8
 6658 058e 58070000 		.4byte	.LVL67-.Ltext0
 6659 0592 5E070000 		.4byte	.LVL69-.Ltext0
 6660 0596 0100     		.2byte	0x1
 6661 0598 52       		.byte	0x52
 6662 0599 5E070000 		.4byte	.LVL69-.Ltext0
 6663 059d 500C0000 		.4byte	.LVL124-.Ltext0
 6664 05a1 0200     		.2byte	0x2
 6665 05a3 91       		.byte	0x91
 6666 05a4 78       		.sleb128 -8
 6667 05a5 440E0000 		.4byte	.LVL139-.Ltext0
 6668 05a9 62150000 		.4byte	.LVL180-.Ltext0
 6669 05ad 0200     		.2byte	0x2
 6670 05af 91       		.byte	0x91
 6671 05b0 78       		.sleb128 -8
 6672 05b1 66150000 		.4byte	.LVL181-.Ltext0
 6673 05b5 FC150000 		.4byte	.LFE7-.Ltext0
 6674 05b9 0200     		.2byte	0x2
 6675 05bb 91       		.byte	0x91
 6676 05bc 78       		.sleb128 -8
 6677 05bd 00000000 		.4byte	0
 6678 05c1 00000000 		.4byte	0
 6679              	.LLST35:
 6680 05c5 32060000 		.4byte	.LVL55-.Ltext0
 6681 05c9 36060000 		.4byte	.LVL56-.Ltext0
 6682 05cd 0200     		.2byte	0x2
 6683 05cf 30       		.byte	0x30
 6684 05d0 9F       		.byte	0x9f
 6685 05d1 BE060000 		.4byte	.LVL61-.Ltext0
 6686 05d5 C0060000 		.4byte	.LVL62-.Ltext0
 6687 05d9 0100     		.2byte	0x1
 6688 05db 54       		.byte	0x54
 6689 05dc CA060000 		.4byte	.LVL63-.Ltext0
 6690 05e0 26070000 		.4byte	.LVL65-.Ltext0
 6691 05e4 0100     		.2byte	0x1
 6692 05e6 54       		.byte	0x54
 6693 05e7 5C070000 		.4byte	.LVL68-.Ltext0
 6694 05eb 5E070000 		.4byte	.LVL69-.Ltext0
 6695 05ef 0200     		.2byte	0x2
 6696 05f1 30       		.byte	0x30
 6697 05f2 9F       		.byte	0x9f
 6698 05f3 E4070000 		.4byte	.LVL76-.Ltext0
 6699 05f7 E6070000 		.4byte	.LVL77-.Ltext0
 6700 05fb 0100     		.2byte	0x1
 6701 05fd 54       		.byte	0x54
 6702 05fe F0070000 		.4byte	.LVL78-.Ltext0
 6703 0602 C0080000 		.4byte	.LVL80-.Ltext0
 6704 0606 0100     		.2byte	0x1
 6705 0608 54       		.byte	0x54
 6706 0609 00000000 		.4byte	0
 6707 060d 00000000 		.4byte	0
 6708              	.LLST36:
 6709 0611 B0050000 		.4byte	.LVL51-.Ltext0
 6710 0615 DA050000 		.4byte	.LVL52-.Ltext0
 6711 0619 0200     		.2byte	0x2
 6712 061b 30       		.byte	0x30
 6713 061c 9F       		.byte	0x9f
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 155


 6714 061d DA050000 		.4byte	.LVL52-.Ltext0
 6715 0621 E2050000 		.4byte	.LVL53-.Ltext0
 6716 0625 0200     		.2byte	0x2
 6717 0627 34       		.byte	0x34
 6718 0628 9F       		.byte	0x9f
 6719 0629 E2050000 		.4byte	.LVL53-.Ltext0
 6720 062d 32060000 		.4byte	.LVL55-.Ltext0
 6721 0631 0200     		.2byte	0x2
 6722 0633 35       		.byte	0x35
 6723 0634 9F       		.byte	0x9f
 6724 0635 32060000 		.4byte	.LVL55-.Ltext0
 6725 0639 36060000 		.4byte	.LVL56-.Ltext0
 6726 063d 0200     		.2byte	0x2
 6727 063f 30       		.byte	0x30
 6728 0640 9F       		.byte	0x9f
 6729 0641 9E060000 		.4byte	.LVL59-.Ltext0
 6730 0645 A0060000 		.4byte	.LVL60-.Ltext0
 6731 0649 0100     		.2byte	0x1
 6732 064b 57       		.byte	0x57
 6733 064c CA060000 		.4byte	.LVL63-.Ltext0
 6734 0650 26070000 		.4byte	.LVL65-.Ltext0
 6735 0654 0100     		.2byte	0x1
 6736 0656 57       		.byte	0x57
 6737 0657 00000000 		.4byte	0
 6738 065b 00000000 		.4byte	0
 6739              	.LLST37:
 6740 065f 32060000 		.4byte	.LVL55-.Ltext0
 6741 0663 36060000 		.4byte	.LVL56-.Ltext0
 6742 0667 0200     		.2byte	0x2
 6743 0669 30       		.byte	0x30
 6744 066a 9F       		.byte	0x9f
 6745 066b 22070000 		.4byte	.LVL64-.Ltext0
 6746 066f 26070000 		.4byte	.LVL65-.Ltext0
 6747 0673 0100     		.2byte	0x1
 6748 0675 55       		.byte	0x55
 6749 0676 3A070000 		.4byte	.LVL66-.Ltext0
 6750 067a D4080000 		.4byte	.LVL81-.Ltext0
 6751 067e 0100     		.2byte	0x1
 6752 0680 55       		.byte	0x55
 6753 0681 D6080000 		.4byte	.LVL82-.Ltext0
 6754 0685 00090000 		.4byte	.LVL84-.Ltext0
 6755 0689 0100     		.2byte	0x1
 6756 068b 55       		.byte	0x55
 6757 068c 00000000 		.4byte	0
 6758 0690 00000000 		.4byte	0
 6759              	.LLST38:
 6760 0694 B6070000 		.4byte	.LVL72-.Ltext0
 6761 0698 BA070000 		.4byte	.LVL73-.Ltext0
 6762 069c 0100     		.2byte	0x1
 6763 069e 50       		.byte	0x50
 6764 069f BA070000 		.4byte	.LVL73-.Ltext0
 6765 06a3 C0070000 		.4byte	.LVL74-.Ltext0
 6766 06a7 0300     		.2byte	0x3
 6767 06a9 70       		.byte	0x70
 6768 06aa 01       		.sleb128 1
 6769 06ab 9F       		.byte	0x9f
 6770 06ac C0070000 		.4byte	.LVL74-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 156


 6771 06b0 C3070000 		.4byte	.LVL75-1-.Ltext0
 6772 06b4 0100     		.2byte	0x1
 6773 06b6 51       		.byte	0x51
 6774 06b7 00000000 		.4byte	0
 6775 06bb 00000000 		.4byte	0
 6776              	.LLST39:
 6777 06bf 96090000 		.4byte	.LVL94-.Ltext0
 6778 06c3 500C0000 		.4byte	.LVL124-.Ltext0
 6779 06c7 0300     		.2byte	0x3
 6780 06c9 91       		.byte	0x91
 6781 06ca 68       		.sleb128 -24
 6782 06cb 9F       		.byte	0x9f
 6783 06cc 5E150000 		.4byte	.LVL179-.Ltext0
 6784 06d0 62150000 		.4byte	.LVL180-.Ltext0
 6785 06d4 0300     		.2byte	0x3
 6786 06d6 91       		.byte	0x91
 6787 06d7 68       		.sleb128 -24
 6788 06d8 9F       		.byte	0x9f
 6789 06d9 00000000 		.4byte	0
 6790 06dd 00000000 		.4byte	0
 6791              	.LLST40:
 6792 06e1 D2090000 		.4byte	.LVL95-.Ltext0
 6793 06e5 D6090000 		.4byte	.LVL97-.Ltext0
 6794 06e9 0100     		.2byte	0x1
 6795 06eb 53       		.byte	0x53
 6796 06ec D6090000 		.4byte	.LVL97-.Ltext0
 6797 06f0 C00A0000 		.4byte	.LVL107-.Ltext0
 6798 06f4 0200     		.2byte	0x2
 6799 06f6 91       		.byte	0x91
 6800 06f7 78       		.sleb128 -8
 6801 06f8 C00A0000 		.4byte	.LVL107-.Ltext0
 6802 06fc C40A0000 		.4byte	.LVL109-.Ltext0
 6803 0700 0100     		.2byte	0x1
 6804 0702 53       		.byte	0x53
 6805 0703 C40A0000 		.4byte	.LVL109-.Ltext0
 6806 0707 500C0000 		.4byte	.LVL124-.Ltext0
 6807 070b 0200     		.2byte	0x2
 6808 070d 91       		.byte	0x91
 6809 070e 78       		.sleb128 -8
 6810 070f 440E0000 		.4byte	.LVL139-.Ltext0
 6811 0713 62150000 		.4byte	.LVL180-.Ltext0
 6812 0717 0200     		.2byte	0x2
 6813 0719 91       		.byte	0x91
 6814 071a 78       		.sleb128 -8
 6815 071b 66150000 		.4byte	.LVL181-.Ltext0
 6816 071f FC150000 		.4byte	.LFE7-.Ltext0
 6817 0723 0200     		.2byte	0x2
 6818 0725 91       		.byte	0x91
 6819 0726 78       		.sleb128 -8
 6820 0727 00000000 		.4byte	0
 6821 072b 00000000 		.4byte	0
 6822              	.LLST41:
 6823 072f D4090000 		.4byte	.LVL96-.Ltext0
 6824 0733 DC090000 		.4byte	.LVL98-.Ltext0
 6825 0737 0200     		.2byte	0x2
 6826 0739 30       		.byte	0x30
 6827 073a 9F       		.byte	0x9f
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 157


 6828 073b 340A0000 		.4byte	.LVL101-.Ltext0
 6829 073f 3E0A0000 		.4byte	.LVL102-.Ltext0
 6830 0743 0100     		.2byte	0x1
 6831 0745 54       		.byte	0x54
 6832 0746 500A0000 		.4byte	.LVL103-.Ltext0
 6833 074a AC0A0000 		.4byte	.LVL105-.Ltext0
 6834 074e 0100     		.2byte	0x1
 6835 0750 54       		.byte	0x54
 6836 0751 BC0A0000 		.4byte	.LVL106-.Ltext0
 6837 0755 C20A0000 		.4byte	.LVL108-.Ltext0
 6838 0759 0100     		.2byte	0x1
 6839 075b 54       		.byte	0x54
 6840 075c C20A0000 		.4byte	.LVL108-.Ltext0
 6841 0760 960B0000 		.4byte	.LVL113-.Ltext0
 6842 0764 0200     		.2byte	0x2
 6843 0766 30       		.byte	0x30
 6844 0767 9F       		.byte	0x9f
 6845 0768 5E150000 		.4byte	.LVL179-.Ltext0
 6846 076c 62150000 		.4byte	.LVL180-.Ltext0
 6847 0770 0200     		.2byte	0x2
 6848 0772 30       		.byte	0x30
 6849 0773 9F       		.byte	0x9f
 6850 0774 00000000 		.4byte	0
 6851 0778 00000000 		.4byte	0
 6852              	.LLST42:
 6853 077c DC090000 		.4byte	.LVL98-.Ltext0
 6854 0780 EE090000 		.4byte	.LVL99-.Ltext0
 6855 0784 0200     		.2byte	0x2
 6856 0786 75       		.byte	0x75
 6857 0787 00       		.sleb128 0
 6858 0788 F4090000 		.4byte	.LVL100-.Ltext0
 6859 078c E00A0000 		.4byte	.LVL110-.Ltext0
 6860 0790 0200     		.2byte	0x2
 6861 0792 75       		.byte	0x75
 6862 0793 00       		.sleb128 0
 6863 0794 E60A0000 		.4byte	.LVL111-.Ltext0
 6864 0798 500C0000 		.4byte	.LVL124-.Ltext0
 6865 079c 0200     		.2byte	0x2
 6866 079e 74       		.byte	0x74
 6867 079f 00       		.sleb128 0
 6868 07a0 440E0000 		.4byte	.LVL139-.Ltext0
 6869 07a4 62150000 		.4byte	.LVL180-.Ltext0
 6870 07a8 0200     		.2byte	0x2
 6871 07aa 74       		.byte	0x74
 6872 07ab 00       		.sleb128 0
 6873 07ac 66150000 		.4byte	.LVL181-.Ltext0
 6874 07b0 FC150000 		.4byte	.LFE7-.Ltext0
 6875 07b4 0200     		.2byte	0x2
 6876 07b6 75       		.byte	0x75
 6877 07b7 00       		.sleb128 0
 6878 07b8 00000000 		.4byte	0
 6879 07bc 00000000 		.4byte	0
 6880              	.LLST43:
 6881 07c0 96090000 		.4byte	.LVL94-.Ltext0
 6882 07c4 DC090000 		.4byte	.LVL98-.Ltext0
 6883 07c8 0200     		.2byte	0x2
 6884 07ca 30       		.byte	0x30
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 158


 6885 07cb 9F       		.byte	0x9f
 6886 07cc A80A0000 		.4byte	.LVL104-.Ltext0
 6887 07d0 AC0A0000 		.4byte	.LVL105-.Ltext0
 6888 07d4 0100     		.2byte	0x1
 6889 07d6 56       		.byte	0x56
 6890 07d7 BC0A0000 		.4byte	.LVL106-.Ltext0
 6891 07db 960B0000 		.4byte	.LVL113-.Ltext0
 6892 07df 0100     		.2byte	0x1
 6893 07e1 56       		.byte	0x56
 6894 07e2 5E150000 		.4byte	.LVL179-.Ltext0
 6895 07e6 62150000 		.4byte	.LVL180-.Ltext0
 6896 07ea 0100     		.2byte	0x1
 6897 07ec 56       		.byte	0x56
 6898 07ed 00000000 		.4byte	0
 6899 07f1 00000000 		.4byte	0
 6900              	.LLST44:
 6901 07f5 9E0B0000 		.4byte	.LVL114-.Ltext0
 6902 07f9 500C0000 		.4byte	.LVL124-.Ltext0
 6903 07fd 0200     		.2byte	0x2
 6904 07ff 33       		.byte	0x33
 6905 0800 9F       		.byte	0x9f
 6906 0801 00000000 		.4byte	0
 6907 0805 00000000 		.4byte	0
 6908              	.LLST45:
 6909 0809 9E0B0000 		.4byte	.LVL114-.Ltext0
 6910 080d A20B0000 		.4byte	.LVL115-.Ltext0
 6911 0811 0600     		.2byte	0x6
 6912 0813 03       		.byte	0x3
 6913 0814 12000000 		.4byte	.LC41
 6914 0818 9F       		.byte	0x9f
 6915 0819 A20B0000 		.4byte	.LVL115-.Ltext0
 6916 081d BE0B0000 		.4byte	.LVL119-.Ltext0
 6917 0821 0100     		.2byte	0x1
 6918 0823 54       		.byte	0x54
 6919 0824 00000000 		.4byte	0
 6920 0828 00000000 		.4byte	0
 6921              	.LLST46:
 6922 082c BC0B0000 		.4byte	.LVL118-.Ltext0
 6923 0830 500C0000 		.4byte	.LVL124-.Ltext0
 6924 0834 0200     		.2byte	0x2
 6925 0836 33       		.byte	0x33
 6926 0837 9F       		.byte	0x9f
 6927 0838 00000000 		.4byte	0
 6928 083c 00000000 		.4byte	0
 6929              	.LLST47:
 6930 0840 BC0B0000 		.4byte	.LVL118-.Ltext0
 6931 0844 340C0000 		.4byte	.LVL120-.Ltext0
 6932 0848 0600     		.2byte	0x6
 6933 084a 03       		.byte	0x3
 6934 084b 1C000000 		.4byte	.LC43
 6935 084f 9F       		.byte	0x9f
 6936 0850 340C0000 		.4byte	.LVL120-.Ltext0
 6937 0854 500C0000 		.4byte	.LVL124-.Ltext0
 6938 0858 0100     		.2byte	0x1
 6939 085a 54       		.byte	0x54
 6940 085b 00000000 		.4byte	0
 6941 085f 00000000 		.4byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 159


 6942              	.LLST48:
 6943 0863 500C0000 		.4byte	.LVL124-.Ltext0
 6944 0867 C40C0000 		.4byte	.LVL126-.Ltext0
 6945 086b 0200     		.2byte	0x2
 6946 086d 30       		.byte	0x30
 6947 086e 9F       		.byte	0x9f
 6948 086f 3E0E0000 		.4byte	.LVL137-.Ltext0
 6949 0873 420E0000 		.4byte	.LVL138-.Ltext0
 6950 0877 0100     		.2byte	0x1
 6951 0879 56       		.byte	0x56
 6952 087a 420E0000 		.4byte	.LVL138-.Ltext0
 6953 087e 440E0000 		.4byte	.LVL139-.Ltext0
 6954 0882 0300     		.2byte	0x3
 6955 0884 91       		.byte	0x91
 6956 0885 DC7E     		.sleb128 -164
 6957 0887 00000000 		.4byte	0
 6958 088b 00000000 		.4byte	0
 6959              	.LLST49:
 6960 088f CE0C0000 		.4byte	.LVL127-.Ltext0
 6961 0893 440E0000 		.4byte	.LVL139-.Ltext0
 6962 0897 0300     		.2byte	0x3
 6963 0899 91       		.byte	0x91
 6964 089a F07E     		.sleb128 -144
 6965 089c 00000000 		.4byte	0
 6966 08a0 00000000 		.4byte	0
 6967              	.LLST50:
 6968 08a4 CE0C0000 		.4byte	.LVL127-.Ltext0
 6969 08a8 120D0000 		.4byte	.LVL130-.Ltext0
 6970 08ac 0300     		.2byte	0x3
 6971 08ae 91       		.byte	0x91
 6972 08af 68       		.sleb128 -24
 6973 08b0 9F       		.byte	0x9f
 6974 08b1 120D0000 		.4byte	.LVL130-.Ltext0
 6975 08b5 350D0000 		.4byte	.LVL132-1-.Ltext0
 6976 08b9 0100     		.2byte	0x1
 6977 08bb 53       		.byte	0x53
 6978 08bc B60D0000 		.4byte	.LVL133-.Ltext0
 6979 08c0 DA0D0000 		.4byte	.LVL134-.Ltext0
 6980 08c4 0300     		.2byte	0x3
 6981 08c6 91       		.byte	0x91
 6982 08c7 68       		.sleb128 -24
 6983 08c8 9F       		.byte	0x9f
 6984 08c9 E60D0000 		.4byte	.LVL136-.Ltext0
 6985 08cd 440E0000 		.4byte	.LVL139-.Ltext0
 6986 08d1 0300     		.2byte	0x3
 6987 08d3 91       		.byte	0x91
 6988 08d4 68       		.sleb128 -24
 6989 08d5 9F       		.byte	0x9f
 6990 08d6 00000000 		.4byte	0
 6991 08da 00000000 		.4byte	0
 6992              	.LLST51:
 6993 08de C40C0000 		.4byte	.LVL126-.Ltext0
 6994 08e2 DA0C0000 		.4byte	.LVL128-.Ltext0
 6995 08e6 0200     		.2byte	0x2
 6996 08e8 75       		.byte	0x75
 6997 08e9 00       		.sleb128 0
 6998 08ea E00C0000 		.4byte	.LVL129-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 160


 6999 08ee 5E150000 		.4byte	.LVL179-.Ltext0
 7000 08f2 0200     		.2byte	0x2
 7001 08f4 75       		.byte	0x75
 7002 08f5 00       		.sleb128 0
 7003 08f6 62150000 		.4byte	.LVL180-.Ltext0
 7004 08fa FC150000 		.4byte	.LFE7-.Ltext0
 7005 08fe 0200     		.2byte	0x2
 7006 0900 75       		.byte	0x75
 7007 0901 00       		.sleb128 0
 7008 0902 00000000 		.4byte	0
 7009 0906 00000000 		.4byte	0
 7010              	.LLST52:
 7011 090a 6A0E0000 		.4byte	.LVL145-.Ltext0
 7012 090e 700E0000 		.4byte	.LVL146-.Ltext0
 7013 0912 0200     		.2byte	0x2
 7014 0914 73       		.byte	0x73
 7015 0915 00       		.sleb128 0
 7016 0916 700E0000 		.4byte	.LVL146-.Ltext0
 7017 091a 7F0E0000 		.4byte	.LVL147-1-.Ltext0
 7018 091e 0100     		.2byte	0x1
 7019 0920 51       		.byte	0x51
 7020 0921 840E0000 		.4byte	.LVL148-.Ltext0
 7021 0925 860E0000 		.4byte	.LVL149-.Ltext0
 7022 0929 0200     		.2byte	0x2
 7023 092b 73       		.byte	0x73
 7024 092c 00       		.sleb128 0
 7025 092d 860E0000 		.4byte	.LVL149-.Ltext0
 7026 0931 8B0E0000 		.4byte	.LVL150-1-.Ltext0
 7027 0935 0100     		.2byte	0x1
 7028 0937 50       		.byte	0x50
 7029 0938 F80E0000 		.4byte	.LVL153-.Ltext0
 7030 093c FE0E0000 		.4byte	.LVL154-.Ltext0
 7031 0940 0200     		.2byte	0x2
 7032 0942 73       		.byte	0x73
 7033 0943 00       		.sleb128 0
 7034 0944 240F0000 		.4byte	.LVL155-.Ltext0
 7035 0948 290F0000 		.4byte	.LVL156-1-.Ltext0
 7036 094c 0200     		.2byte	0x2
 7037 094e 73       		.byte	0x73
 7038 094f 00       		.sleb128 0
 7039 0950 300F0000 		.4byte	.LVL157-.Ltext0
 7040 0954 320F0000 		.4byte	.LVL158-.Ltext0
 7041 0958 0200     		.2byte	0x2
 7042 095a 73       		.byte	0x73
 7043 095b 00       		.sleb128 0
 7044 095c 00000000 		.4byte	0
 7045 0960 00000000 		.4byte	0
 7046              	.LLST53:
 7047 0964 300F0000 		.4byte	.LVL157-.Ltext0
 7048 0968 12110000 		.4byte	.LVL161-.Ltext0
 7049 096c 0200     		.2byte	0x2
 7050 096e 30       		.byte	0x30
 7051 096f 9F       		.byte	0x9f
 7052 0970 12110000 		.4byte	.LVL161-.Ltext0
 7053 0974 5A110000 		.4byte	.LVL163-.Ltext0
 7054 0978 0600     		.2byte	0x6
 7055 097a 03       		.byte	0x3
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 161


 7056 097b 10000000 		.4byte	player2
 7057 097f 9F       		.byte	0x9f
 7058 0980 5A110000 		.4byte	.LVL163-.Ltext0
 7059 0984 88110000 		.4byte	.LVL164-.Ltext0
 7060 0988 0600     		.2byte	0x6
 7061 098a 03       		.byte	0x3
 7062 098b 00000000 		.4byte	player1
 7063 098f 9F       		.byte	0x9f
 7064 0990 88110000 		.4byte	.LVL164-.Ltext0
 7065 0994 7C140000 		.4byte	.LVL174-.Ltext0
 7066 0998 0300     		.2byte	0x3
 7067 099a 91       		.byte	0x91
 7068 099b F47E     		.sleb128 -140
 7069 099d 7C140000 		.4byte	.LVL174-.Ltext0
 7070 09a1 B4140000 		.4byte	.LVL175-.Ltext0
 7071 09a5 0200     		.2byte	0x2
 7072 09a7 30       		.byte	0x30
 7073 09a8 9F       		.byte	0x9f
 7074 09a9 00000000 		.4byte	0
 7075 09ad 00000000 		.4byte	0
 7076              	.LLST54:
 7077 09b1 300F0000 		.4byte	.LVL157-.Ltext0
 7078 09b5 54110000 		.4byte	.LVL162-.Ltext0
 7079 09b9 0200     		.2byte	0x2
 7080 09bb 30       		.byte	0x30
 7081 09bc 9F       		.byte	0x9f
 7082 09bd 5A110000 		.4byte	.LVL163-.Ltext0
 7083 09c1 88110000 		.4byte	.LVL164-.Ltext0
 7084 09c5 0200     		.2byte	0x2
 7085 09c7 30       		.byte	0x30
 7086 09c8 9F       		.byte	0x9f
 7087 09c9 88110000 		.4byte	.LVL164-.Ltext0
 7088 09cd 0C120000 		.4byte	.LVL166-.Ltext0
 7089 09d1 0100     		.2byte	0x1
 7090 09d3 57       		.byte	0x57
 7091 09d4 7C140000 		.4byte	.LVL174-.Ltext0
 7092 09d8 B4140000 		.4byte	.LVL175-.Ltext0
 7093 09dc 0200     		.2byte	0x2
 7094 09de 30       		.byte	0x30
 7095 09df 9F       		.byte	0x9f
 7096 09e0 00000000 		.4byte	0
 7097 09e4 00000000 		.4byte	0
 7098              	.LLST55:
 7099 09e8 300F0000 		.4byte	.LVL157-.Ltext0
 7100 09ec 12110000 		.4byte	.LVL161-.Ltext0
 7101 09f0 0200     		.2byte	0x2
 7102 09f2 31       		.byte	0x31
 7103 09f3 9F       		.byte	0x9f
 7104 09f4 12110000 		.4byte	.LVL161-.Ltext0
 7105 09f8 5A110000 		.4byte	.LVL163-.Ltext0
 7106 09fc 0300     		.2byte	0x3
 7107 09fe 09       		.byte	0x9
 7108 09ff FF       		.byte	0xff
 7109 0a00 9F       		.byte	0x9f
 7110 0a01 5A110000 		.4byte	.LVL163-.Ltext0
 7111 0a05 88110000 		.4byte	.LVL164-.Ltext0
 7112 0a09 0200     		.2byte	0x2
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 162


 7113 0a0b 31       		.byte	0x31
 7114 0a0c 9F       		.byte	0x9f
 7115 0a0d 88110000 		.4byte	.LVL164-.Ltext0
 7116 0a11 7C140000 		.4byte	.LVL174-.Ltext0
 7117 0a15 0300     		.2byte	0x3
 7118 0a17 91       		.byte	0x91
 7119 0a18 847F     		.sleb128 -124
 7120 0a1a 7C140000 		.4byte	.LVL174-.Ltext0
 7121 0a1e B4140000 		.4byte	.LVL175-.Ltext0
 7122 0a22 0200     		.2byte	0x2
 7123 0a24 31       		.byte	0x31
 7124 0a25 9F       		.byte	0x9f
 7125 0a26 00000000 		.4byte	0
 7126 0a2a 00000000 		.4byte	0
 7127              	.LLST56:
 7128 0a2e 6C0F0000 		.4byte	.LVL159-.Ltext0
 7129 0a32 4C100000 		.4byte	.LVL160-.Ltext0
 7130 0a36 0100     		.2byte	0x1
 7131 0a38 57       		.byte	0x57
 7132 0a39 00000000 		.4byte	0
 7133 0a3d 00000000 		.4byte	0
 7134              	.LLST57:
 7135 0a41 E8110000 		.4byte	.LVL165-.Ltext0
 7136 0a45 4A120000 		.4byte	.LVL167-.Ltext0
 7137 0a49 0A00     		.2byte	0xa
 7138 0a4b 9E       		.byte	0x9e
 7139 0a4c 08       		.uleb128 0x8
 7140 0a4d 00000000 		.4byte	0
 7141 0a51 00000000 		.4byte	0
 7142 0a55 00000000 		.4byte	0
 7143 0a59 00000000 		.4byte	0
 7144              	.LLST58:
 7145 0a5d E8110000 		.4byte	.LVL165-.Ltext0
 7146 0a61 AC120000 		.4byte	.LVL169-.Ltext0
 7147 0a65 0A00     		.2byte	0xa
 7148 0a67 9E       		.byte	0x9e
 7149 0a68 08       		.uleb128 0x8
 7150 0a69 00000000 		.4byte	0
 7151 0a6d 00000000 		.4byte	0
 7152 0a71 AC120000 		.4byte	.LVL169-.Ltext0
 7153 0a75 B0120000 		.4byte	.LVL170-.Ltext0
 7154 0a79 0600     		.2byte	0x6
 7155 0a7b 50       		.byte	0x50
 7156 0a7c 93       		.byte	0x93
 7157 0a7d 04       		.uleb128 0x4
 7158 0a7e 51       		.byte	0x51
 7159 0a7f 93       		.byte	0x93
 7160 0a80 04       		.uleb128 0x4
 7161 0a81 B0120000 		.4byte	.LVL170-.Ltext0
 7162 0a85 E8130000 		.4byte	.LVL173-.Ltext0
 7163 0a89 0300     		.2byte	0x3
 7164 0a8b 91       		.byte	0x91
 7165 0a8c 887F     		.sleb128 -120
 7166 0a8e 00000000 		.4byte	0
 7167 0a92 00000000 		.4byte	0
 7168              	.LLST59:
 7169 0a96 E8110000 		.4byte	.LVL165-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 163


 7170 0a9a DC120000 		.4byte	.LVL171-.Ltext0
 7171 0a9e 0A00     		.2byte	0xa
 7172 0aa0 9E       		.byte	0x9e
 7173 0aa1 08       		.uleb128 0x8
 7174 0aa2 00000000 		.4byte	0
 7175 0aa6 00000000 		.4byte	0
 7176 0aaa DC120000 		.4byte	.LVL171-.Ltext0
 7177 0aae 24130000 		.4byte	.LVL172-.Ltext0
 7178 0ab2 0600     		.2byte	0x6
 7179 0ab4 56       		.byte	0x56
 7180 0ab5 93       		.byte	0x93
 7181 0ab6 04       		.uleb128 0x4
 7182 0ab7 57       		.byte	0x57
 7183 0ab8 93       		.byte	0x93
 7184 0ab9 04       		.uleb128 0x4
 7185 0aba 00000000 		.4byte	0
 7186 0abe 00000000 		.4byte	0
 7187              		.section	.debug_aranges,"",%progbits
 7188 0000 1C000000 		.4byte	0x1c
 7189 0004 0200     		.2byte	0x2
 7190 0006 00000000 		.4byte	.Ldebug_info0
 7191 000a 04       		.byte	0x4
 7192 000b 00       		.byte	0
 7193 000c 0000     		.2byte	0
 7194 000e 0000     		.2byte	0
 7195 0010 00000000 		.4byte	.Ltext0
 7196 0014 FC150000 		.4byte	.Letext0-.Ltext0
 7197 0018 00000000 		.4byte	0
 7198 001c 00000000 		.4byte	0
 7199              		.section	.debug_ranges,"",%progbits
 7200              	.Ldebug_ranges0:
 7201 0000 1C030000 		.4byte	.LBB37-.Ltext0
 7202 0004 1E030000 		.4byte	.LBE37-.Ltext0
 7203 0008 22030000 		.4byte	.LBB42-.Ltext0
 7204 000c 24030000 		.4byte	.LBE42-.Ltext0
 7205 0010 28030000 		.4byte	.LBB43-.Ltext0
 7206 0014 2A040000 		.4byte	.LBE43-.Ltext0
 7207 0018 00000000 		.4byte	0
 7208 001c 00000000 		.4byte	0
 7209 0020 1C030000 		.4byte	.LBB38-.Ltext0
 7210 0024 1E030000 		.4byte	.LBE38-.Ltext0
 7211 0028 22030000 		.4byte	.LBB40-.Ltext0
 7212 002c 24030000 		.4byte	.LBE40-.Ltext0
 7213 0030 28030000 		.4byte	.LBB41-.Ltext0
 7214 0034 2A040000 		.4byte	.LBE41-.Ltext0
 7215 0038 00000000 		.4byte	0
 7216 003c 00000000 		.4byte	0
 7217 0040 AC070000 		.4byte	.LBB67-.Ltext0
 7218 0044 D6070000 		.4byte	.LBE67-.Ltext0
 7219 0048 EC070000 		.4byte	.LBB68-.Ltext0
 7220 004c F0070000 		.4byte	.LBE68-.Ltext0
 7221 0050 00000000 		.4byte	0
 7222 0054 00000000 		.4byte	0
 7223 0058 96090000 		.4byte	.LBB69-.Ltext0
 7224 005c 960B0000 		.4byte	.LBE69-.Ltext0
 7225 0060 5E150000 		.4byte	.LBB93-.Ltext0
 7226 0064 62150000 		.4byte	.LBE93-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 164


 7227 0068 00000000 		.4byte	0
 7228 006c 00000000 		.4byte	0
 7229 0070 96090000 		.4byte	.LBB70-.Ltext0
 7230 0074 960B0000 		.4byte	.LBE70-.Ltext0
 7231 0078 5E150000 		.4byte	.LBB71-.Ltext0
 7232 007c 62150000 		.4byte	.LBE71-.Ltext0
 7233 0080 00000000 		.4byte	0
 7234 0084 00000000 		.4byte	0
 7235 0088 500C0000 		.4byte	.LBB76-.Ltext0
 7236 008c 440E0000 		.4byte	.LBE76-.Ltext0
 7237 0090 58150000 		.4byte	.LBB92-.Ltext0
 7238 0094 5E150000 		.4byte	.LBE92-.Ltext0
 7239 0098 62150000 		.4byte	.LBB94-.Ltext0
 7240 009c 6A150000 		.4byte	.LBE94-.Ltext0
 7241 00a0 00000000 		.4byte	0
 7242 00a4 00000000 		.4byte	0
 7243 00a8 C80C0000 		.4byte	.LBB79-.Ltext0
 7244 00ac CC0C0000 		.4byte	.LBE79-.Ltext0
 7245 00b0 CE0C0000 		.4byte	.LBB83-.Ltext0
 7246 00b4 2E0D0000 		.4byte	.LBE83-.Ltext0
 7247 00b8 B60D0000 		.4byte	.LBB84-.Ltext0
 7248 00bc D00D0000 		.4byte	.LBE84-.Ltext0
 7249 00c0 00000000 		.4byte	0
 7250 00c4 00000000 		.4byte	0
 7251 00c8 C80C0000 		.4byte	.LBB80-.Ltext0
 7252 00cc CC0C0000 		.4byte	.LBE80-.Ltext0
 7253 00d0 CE0C0000 		.4byte	.LBB81-.Ltext0
 7254 00d4 2E0D0000 		.4byte	.LBE81-.Ltext0
 7255 00d8 B60D0000 		.4byte	.LBB82-.Ltext0
 7256 00dc D00D0000 		.4byte	.LBE82-.Ltext0
 7257 00e0 00000000 		.4byte	0
 7258 00e4 00000000 		.4byte	0
 7259 00e8 5A0E0000 		.4byte	.LBB85-.Ltext0
 7260 00ec 50150000 		.4byte	.LBE85-.Ltext0
 7261 00f0 B4150000 		.4byte	.LBB95-.Ltext0
 7262 00f4 FC150000 		.4byte	.LBE95-.Ltext0
 7263 00f8 00000000 		.4byte	0
 7264 00fc 00000000 		.4byte	0
 7265 0100 300F0000 		.4byte	.LBB86-.Ltext0
 7266 0104 D4140000 		.4byte	.LBE86-.Ltext0
 7267 0108 B6150000 		.4byte	.LBB91-.Ltext0
 7268 010c FC150000 		.4byte	.LBE91-.Ltext0
 7269 0110 00000000 		.4byte	0
 7270 0114 00000000 		.4byte	0
 7271 0118 300F0000 		.4byte	.LBB87-.Ltext0
 7272 011c D4140000 		.4byte	.LBE87-.Ltext0
 7273 0120 B6150000 		.4byte	.LBB90-.Ltext0
 7274 0124 FC150000 		.4byte	.LBE90-.Ltext0
 7275 0128 00000000 		.4byte	0
 7276 012c 00000000 		.4byte	0
 7277              		.section	.debug_line,"",%progbits
 7278              	.Ldebug_line0:
 7279 0000 B5040000 		.section	.debug_str,"MS",%progbits,1
 7279      02005D00 
 7279      00000201 
 7279      FB0E0D00 
 7279      01010101 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 165


 7280              	.LASF52:
 7281 0000 6D696450 		.ascii	"midPos\000"
 7281      6F7300
 7282              	.LASF79:
 7283 0007 70427441 		.ascii	"pBtAddr\000"
 7283      64647200 
 7284              	.LASF106:
 7285 000f 6465636F 		.ascii	"decodeFromDigits\000"
 7285      64654672 
 7285      6F6D4469 
 7285      67697473 
 7285      00
 7286              	.LASF89:
 7287 0020 63686563 		.ascii	"checkIfClinetConnected\000"
 7287      6B496643 
 7287      6C696E65 
 7287      74436F6E 
 7287      6E656374 
 7288              	.LASF45:
 7289 0037 74427452 		.ascii	"tBtRecord\000"
 7289      65636F72 
 7289      6400
 7290              	.LASF33:
 7291 0041 6C617374 		.ascii	"lastMove\000"
 7291      4D6F7665 
 7291      00
 7292              	.LASF32:
 7293 004a 74797065 		.ascii	"type\000"
 7293      00
 7294              	.LASF80:
 7295 004f 646F6E65 		.ascii	"done\000"
 7295      00
 7296              	.LASF9:
 7297 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 7297      206C6F6E 
 7297      6720756E 
 7297      7369676E 
 7297      65642069 
 7298              	.LASF54:
 7299 006b 616E676C 		.ascii	"angle\000"
 7299      6500
 7300              	.LASF104:
 7301 0071 433A5C55 		.ascii	"C:\\Users\\kozlovsky\\Downloads\\TicTac\\TicTac\000"
 7301      73657273 
 7301      5C6B6F7A 
 7301      6C6F7673 
 7301      6B795C44 
 7302              	.LASF68:
 7303 009c 63757273 		.ascii	"cursorPos\000"
 7303      6F72506F 
 7303      7300
 7304              	.LASF27:
 7305 00a6 73656C65 		.ascii	"selectedColor\000"
 7305      63746564 
 7305      436F6C6F 
 7305      7200
 7306              	.LASF75:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 166


 7307 00b4 72784368 		.ascii	"rxChar\000"
 7307      617200
 7308              	.LASF70:
 7309 00bb 73636F72 		.ascii	"scoreStr\000"
 7309      65537472 
 7309      00
 7310              	.LASF24:
 7311 00c4 626F7264 		.ascii	"borderColor\000"
 7311      6572436F 
 7311      6C6F7200 
 7312              	.LASF36:
 7313 00d0 5F506F6E 		.ascii	"_PongBall\000"
 7313      6742616C 
 7313      6C00
 7314              	.LASF8:
 7315 00da 6C6F6E67 		.ascii	"long long int\000"
 7315      206C6F6E 
 7315      6720696E 
 7315      7400
 7316              	.LASF4:
 7317 00e8 7369676E 		.ascii	"signed char\000"
 7317      65642063 
 7317      68617200 
 7318              	.LASF6:
 7319 00f4 74426F6F 		.ascii	"tBool\000"
 7319      6C00
 7320              	.LASF10:
 7321 00fa 6C6F6E67 		.ascii	"long int\000"
 7321      20696E74 
 7321      00
 7322              	.LASF83:
 7323 0103 72656376 		.ascii	"recvPos\000"
 7323      506F7300 
 7324              	.LASF92:
 7325 010b 666F756E 		.ascii	"foundBtUnits\000"
 7325      64427455 
 7325      6E697473 
 7325      00
 7326              	.LASF88:
 7327 0118 636F6E6E 		.ascii	"connected\000"
 7327      65637465 
 7327      6400
 7328              	.LASF78:
 7329 0122 73656172 		.ascii	"searchServers\000"
 7329      63685365 
 7329      72766572 
 7329      7300
 7330              	.LASF17:
 7331 0130 794C656E 		.ascii	"yLen\000"
 7331      00
 7332              	.LASF12:
 7333 0135 646F7562 		.ascii	"double\000"
 7333      6C6500
 7334              	.LASF47:
 7335 013c 6D6F7665 		.ascii	"movePlayer\000"
 7335      506C6179 
 7335      657200
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 167


 7336              	.LASF57:
 7337 0147 64697370 		.ascii	"displayMessage\000"
 7337      6C61794D 
 7337      65737361 
 7337      676500
 7338              	.LASF30:
 7339 0156 73636F72 		.ascii	"score\000"
 7339      6500
 7340              	.LASF55:
 7341 015c 61627353 		.ascii	"absSpeed\000"
 7341      70656564 
 7341      00
 7342              	.LASF37:
 7343 0165 78537065 		.ascii	"xSpeed\000"
 7343      656400
 7344              	.LASF67:
 7345 016c 64726177 		.ascii	"drawBtsFound\000"
 7345      42747346 
 7345      6F756E64 
 7345      00
 7346              	.LASF18:
 7347 0179 6E6F4F66 		.ascii	"noOfChoices\000"
 7347      43686F69 
 7347      63657300 
 7348              	.LASF26:
 7349 0185 63686F69 		.ascii	"choicesColor\000"
 7349      63657343 
 7349      6F6C6F72 
 7349      00
 7350              	.LASF46:
 7351 0192 7061696E 		.ascii	"paintPlayer\000"
 7351      74506C61 
 7351      79657200 
 7352              	.LASF35:
 7353 019e 5F506F6E 		.ascii	"_PongPlayer\000"
 7353      67506C61 
 7353      79657200 
 7354              	.LASF19:
 7355 01aa 696E6974 		.ascii	"initialChoice\000"
 7355      69616C43 
 7355      686F6963 
 7355      6500
 7356              	.LASF61:
 7357 01b8 76616C75 		.ascii	"value\000"
 7357      6500
 7358              	.LASF3:
 7359 01be 756E7369 		.ascii	"unsigned int\000"
 7359      676E6564 
 7359      20696E74 
 7359      00
 7360              	.LASF41:
 7361 01cb 74506F6E 		.ascii	"tPongBall\000"
 7361      6742616C 
 7361      6C00
 7362              	.LASF16:
 7363 01d5 784C656E 		.ascii	"xLen\000"
 7363      00
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 168


 7364              	.LASF42:
 7365 01da 61637469 		.ascii	"active\000"
 7365      766500
 7366              	.LASF21:
 7367 01e1 68656164 		.ascii	"headerTextXpos\000"
 7367      65725465 
 7367      78745870 
 7367      6F7300
 7368              	.LASF7:
 7369 01f0 6C6F6E67 		.ascii	"long unsigned int\000"
 7369      20756E73 
 7369      69676E65 
 7369      6420696E 
 7369      7400
 7370              	.LASF53:
 7371 0202 70657263 		.ascii	"percIntoPad\000"
 7371      496E746F 
 7371      50616400 
 7372              	.LASF93:
 7373 020e 67616D65 		.ascii	"gameType\000"
 7373      54797065 
 7373      00
 7374              	.LASF29:
 7375 0217 73697A65 		.ascii	"size\000"
 7375      00
 7376              	.LASF1:
 7377 021c 73686F72 		.ascii	"short unsigned int\000"
 7377      7420756E 
 7377      7369676E 
 7377      65642069 
 7377      6E7400
 7378              	.LASF38:
 7379 022f 79537065 		.ascii	"ySpeed\000"
 7379      656400
 7380              	.LASF105:
 7381 0236 61637469 		.ascii	"activateServer\000"
 7381      76617465 
 7381      53657276 
 7381      657200
 7382              	.LASF87:
 7383 0245 636F6E6E 		.ascii	"connectToServer\000"
 7383      65637454 
 7383      6F536572 
 7383      76657200 
 7384              	.LASF2:
 7385 0255 74553332 		.ascii	"tU32\000"
 7385      00
 7386              	.LASF101:
 7387 025a 72656D6F 		.ascii	"remoteClientKey\000"
 7387      7465436C 
 7387      69656E74 
 7387      4B657900 
 7388              	.LASF99:
 7389 026a 73657276 		.ascii	"serving\000"
 7389      696E6700 
 7390              	.LASF22:
 7391 0272 7043686F 		.ascii	"pChoice\000"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 169


 7391      69636500 
 7392              	.LASF23:
 7393 027a 6267436F 		.ascii	"bgColor\000"
 7393      6C6F7200 
 7394              	.LASF85:
 7395 0282 666F756E 		.ascii	"foundBt\000"
 7395      64427400 
 7396              	.LASF94:
 7397 028a 706C6179 		.ascii	"player1\000"
 7397      65723100 
 7398              	.LASF95:
 7399 0292 706C6179 		.ascii	"player2\000"
 7399      65723200 
 7400              	.LASF71:
 7401 029a 73746172 		.ascii	"startNewServ\000"
 7401      744E6577 
 7401      53657276 
 7401      00
 7402              	.LASF84:
 7403 02a7 72656376 		.ascii	"recvBuf\000"
 7403      42756600 
 7404              	.LASF50:
 7405 02af 70446566 		.ascii	"pDefending\000"
 7405      656E6469 
 7405      6E6700
 7406              	.LASF107:
 7407 02ba 706C6179 		.ascii	"playPong\000"
 7407      506F6E67 
 7407      00
 7408              	.LASF13:
 7409 02c3 666C6F61 		.ascii	"float\000"
 7409      7400
 7410              	.LASF43:
 7411 02c9 62744164 		.ascii	"btAddress\000"
 7411      64726573 
 7411      7300
 7412              	.LASF40:
 7413 02d3 7359506F 		.ascii	"sYPos\000"
 7413      7300
 7414              	.LASF103:
 7415 02d9 706F6E67 		.ascii	"pong.c\000"
 7415      2E6300
 7416              	.LASF73:
 7417 02e0 62745365 		.ascii	"btSendAndRecvStatus\000"
 7417      6E64416E 
 7417      64526563 
 7417      76537461 
 7417      74757300 
 7418              	.LASF74:
 7419 02f4 68616E64 		.ascii	"handleComm\000"
 7419      6C65436F 
 7419      6D6D00
 7420              	.LASF86:
 7421 02ff 70537472 		.ascii	"pStr\000"
 7421      00
 7422              	.LASF28:
 7423 0304 744D656E 		.ascii	"tMenu\000"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 170


 7423      7500
 7424              	.LASF51:
 7425 030a 7269736B 		.ascii	"riskForHit\000"
 7425      466F7248 
 7425      697400
 7426              	.LASF49:
 7427 0315 6D6F7665 		.ascii	"moveBall\000"
 7427      42616C6C 
 7427      00
 7428              	.LASF0:
 7429 031e 756E7369 		.ascii	"unsigned char\000"
 7429      676E6564 
 7429      20636861 
 7429      7200
 7430              	.LASF5:
 7431 032c 73686F72 		.ascii	"short int\000"
 7431      7420696E 
 7431      7400
 7432              	.LASF69:
 7433 0336 7061696E 		.ascii	"paintScore\000"
 7433      7453636F 
 7433      726500
 7434              	.LASF82:
 7435 0341 74696D65 		.ascii	"timeStamp\000"
 7435      5374616D 
 7435      7000
 7436              	.LASF39:
 7437 034b 7358506F 		.ascii	"sXPos\000"
 7437      7300
 7438              	.LASF65:
 7439 0351 76616C69 		.ascii	"valid\000"
 7439      6400
 7440              	.LASF48:
 7441 0357 70506C61 		.ascii	"pPlayer\000"
 7441      79657200 
 7442              	.LASF44:
 7443 035f 62744E61 		.ascii	"btName\000"
 7443      6D6500
 7444              	.LASF102:
 7445 0366 474E5520 		.ascii	"GNU C 4.6.3\000"
 7445      4320342E 
 7445      362E3300 
 7446              	.LASF31:
 7447 0372 636F6C6F 		.ascii	"color\000"
 7447      7200
 7448              	.LASF11:
 7449 0378 63686172 		.ascii	"char\000"
 7449      00
 7450              	.LASF62:
 7451 037d 7056616C 		.ascii	"pValue\000"
 7451      756500
 7452              	.LASF81:
 7453 0384 616E794B 		.ascii	"anyKey\000"
 7453      657900
 7454              	.LASF76:
 7455 038b 73636F72 		.ascii	"score1\000"
 7455      653100
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 171


 7456              	.LASF77:
 7457 0392 73636F72 		.ascii	"score2\000"
 7457      653200
 7458              	.LASF58:
 7459 0399 704D6573 		.ascii	"pMessage\000"
 7459      73616765 
 7459      00
 7460              	.LASF100:
 7461 03a2 6C617374 		.ascii	"lastStatus\000"
 7461      53746174 
 7461      757300
 7462              	.LASF60:
 7463 03ad 70427566 		.ascii	"pBuf\000"
 7463      00
 7464              	.LASF96:
 7465 03b2 62616C6C 		.ascii	"ball\000"
 7465      00
 7466              	.LASF15:
 7467 03b7 79506F73 		.ascii	"yPos\000"
 7467      00
 7468              	.LASF97:
 7469 03bc 70416374 		.ascii	"pActivePlayer\000"
 7469      69766550 
 7469      6C617965 
 7469      7200
 7470              	.LASF34:
 7471 03ca 74506F6E 		.ascii	"tPongPlayer\000"
 7471      67506C61 
 7471      79657200 
 7472              	.LASF72:
 7473 03d6 7061696E 		.ascii	"paintGame\000"
 7473      7447616D 
 7473      6500
 7474              	.LASF25:
 7475 03e0 68656164 		.ascii	"headerColor\000"
 7475      6572436F 
 7475      6C6F7200 
 7476              	.LASF98:
 7477 03ec 70536572 		.ascii	"pServingPlayer\000"
 7477      76696E67 
 7477      506C6179 
 7477      657200
 7478              	.LASF91:
 7479 03fb 6D656E75 		.ascii	"menu\000"
 7479      00
 7480              	.LASF59:
 7481 0400 73706565 		.ascii	"speed\000"
 7481      6400
 7482              	.LASF14:
 7483 0406 78506F73 		.ascii	"xPos\000"
 7483      00
 7484              	.LASF66:
 7485 040b 636F6E76 		.ascii	"convertToDigits\000"
 7485      65727454 
 7485      6F446967 
 7485      69747300 
 7486              	.LASF63:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 172


 7487 041b 746F4865 		.ascii	"toHex\000"
 7487      7800
 7488              	.LASF56:
 7489 0421 666F7263 		.ascii	"force\000"
 7489      6500
 7490              	.LASF90:
 7491 0427 67616D65 		.ascii	"gameOver\000"
 7491      4F766572 
 7491      00
 7492              	.LASF64:
 7493 0430 72657375 		.ascii	"result\000"
 7493      6C7400
 7494              	.LASF20:
 7495 0437 70486561 		.ascii	"pHeaderText\000"
 7495      64657254 
 7495      65787400 
 7496              		.ident	"GCC: (GNU) 4.6.3"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 173


DEFINED SYMBOLS
                            *ABS*:00000000 pong.c
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:6      .text:00000000 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:10     .text:00000000 convertToDigits
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:41     .text:00000018 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:45     .text:0000001c $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:49     .text:0000001c decodeFromDigits
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:150    .text:00000078 drawBtsFound
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:236    .text:000000d4 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:243    .text:000000dc $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:247    .text:000000dc paintScore
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:360    .text:0000019c $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:365    .text:000001a4 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:369    .text:000001a4 startNewServ
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:426    .text:000001dc $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:436    .text:000001f8 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:440    .text:000001f8 paintGame
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:503    .text:00000248 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:507    .text:0000024c $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:511    .text:0000024c movePlayer
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:565    .text:00000288 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:573    .text:00000290 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:663    .text:00000308 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:671    .text:00000314 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:675    .text:00000314 btSendAndRecvStatus
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:1006   .text:000004e4 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:1023   .text:000004f4 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:1028   .text:000004f4 playPong
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:1633   .text:00000838 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:1664   .text:000008ac $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:2223   .text:00000bc0 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:2257   .text:00000c34 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:2899   .text:00000f84 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:2926   .text:00000fe8 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3391   .text:00001358 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3413   .text:000013a8 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3776   .text:000015bc $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3802   .rodata:00000000 toHex.3480
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3925   .data:00000000 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3929   .data:00000000 player1
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3939   .data:00000010 player2
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3949   .data:00000020 pServingPlayer
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3953   .data:00000024 ball
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3968   .data:00000058 serving
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3973   .data:0000005c pActivePlayer
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3976   .bss:00000000 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3981   .bss:00000000 foundBtUnits
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3985   .bss:000000a0 gameType
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3989   .bss:000000a1 recvBuf
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3993   .bss:000000c9 recvPos
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:3997   .bss:000000ca remoteClientKey
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:4002   .bss:000000cc lastStatus
C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s:4006   .bss:000000d0 lastMove
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
lcdGotoxy
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccXJauEQ.s 			page 174


lcdColor
lcdPuts
__udivsi3
__umodsi3
lcdClrscr
lcdRect
__gnu_thumb1_case_uqi
ms
__floatunsidf
__fixunsdfsi
uart1GetChar
memcmp
floor
uart1SendChars
__adddf3
__floatsidf
__subdf3
__nedf2
__gtdf2
__gedf2
__ltdf2
__divdf3
__muldf3
__ledf2
blockBtProc
drawMenu
osSleep
uart1SendString
simplePrintf
strchr
strncmp
checkKey
strcpy
lcdPutchar
checkKey2
sqrt
cos
sin
activateBtProc
