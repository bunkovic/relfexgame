ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 1


   1              		.code	16
   2              		.file	"react.c"
   3              		.text
   4              	.Ltext0:
   5              		.cfi_sections	.debug_frame
   6              		.align	1
   7              		.global	readScoreFromEeprom
   8              		.code	16
   9              		.thumb_func
  10              		.type	readScoreFromEeprom, %function
  11              	readScoreFromEeprom:
  12              	.LFB7:
  13              		.file 1 "react.c"
   1:react.c       **** #include "../pre_emptive_os/api/osapi.h"
   2:react.c       **** #include "../pre_emptive_os/api/general.h"
   3:react.c       **** #include <printf_P.h>
   4:react.c       **** #include <ea_init.h>
   5:react.c       **** #include <stdlib.h>
   6:react.c       **** 
   7:react.c       **** #include "configAppl.h"
   8:react.c       **** 
   9:react.c       **** #include "lcd.h"
  10:react.c       **** #include "key.h"
  11:react.c       **** #include "react.h"
  12:react.c       **** #include "hw.h"
  13:react.c       **** 
  14:react.c       **** #include "i2c.h"
  15:react.c       **** #include "startup/config.h"
  16:react.c       **** #include <framework.h>
  17:react.c       **** #include <lpc2xxx.h>
  18:react.c       **** 
  19:react.c       **** static tU8 whichArrow;
  20:react.c       **** static tU8 cursor   = 0;
  21:react.c       **** 
  22:react.c       **** #define MAX_LENGTH 25
  23:react.c       **** 
  24:react.c       **** /*******************************************
  25:react.c       ****  *                                         *
  26:react.c       ****  *  Define game states:                    *
  27:react.c       ****  *                                         *
  28:react.c       ****  *******************************************/
  29:react.c       **** #define GAME_NOT_STARTED 0
  30:react.c       **** #define GAME_RUNNING     1
  31:react.c       **** #define GAME_OVER        2
  32:react.c       **** #define GAME_END         3
  33:react.c       **** #define GAME_START       4
  34:react.c       **** #define GAME_SCORED      5
  35:react.c       **** #define GAME_NOT_SCORED  6
  36:react.c       **** #define GAME_SHOW_SCORE  7
  37:react.c       **** #define GAME_WON         8
  38:react.c       **** #define GAME_LOST        9
  39:react.c       **** 
  40:react.c       **** #define SCREEN_WIDTH  ((tU8)130)
  41:react.c       **** #define SCREEN_HEIGHT ((tU8)130)
  42:react.c       **** 
  43:react.c       **** #define BOARD_GRID_COLOR  ((tU8)0)    // black
  44:react.c       **** #define BOARD_BKG_COLOR   ((tU8)0xff) // white
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 2


  45:react.c       **** #define GAME_BKG_COLOR_OK    ((tU8)0x0c) // green
  46:react.c       **** #define GAME_BKG_COLOR_ERR   ((tU8)0xe0) // red
  47:react.c       **** 
  48:react.c       **** #define CHAR_HEIGHT 14
  49:react.c       **** #define CHAR_WIDTH   8
  50:react.c       **** #define CENTER_X(numchars) ((SCREEN_WIDTH - numchars*CHAR_WIDTH)/2)
  51:react.c       **** 
  52:react.c       **** #define tU8   unsigned char
  53:react.c       **** #define tU16  unsigned short
  54:react.c       **** #define tU32  unsigned int
  55:react.c       **** #define tS8   char
  56:react.c       **** #define tS16  short
  57:react.c       **** #define tS32  int
  58:react.c       **** #define tBool unsigned char;
  59:react.c       **** #define TRUE  1
  60:react.c       **** #define FALSE 0
  61:react.c       **** 
  62:react.c       **** #define LED_GREEN  1
  63:react.c       **** #define LED_RED    2
  64:react.c       **** 
  65:react.c       **** static tU8 gameStatus;
  66:react.c       **** static tU8 gameMode;
  67:react.c       **** static tBool arrow;
  68:react.c       **** static tBool finish;
  69:react.c       **** static int score;
  70:react.c       **** static tU8 rounds;
  71:react.c       **** static tU8 currentRound;
  72:react.c       **** static tU8 eepromTest;
  73:react.c       **** 
  74:react.c       **** // --------------------------------------
  75:react.c       **** 
  76:react.c       **** void showPreStartupScreen(void){
  77:react.c       ****   // clear screen
  78:react.c       ****   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
  79:react.c       ****   lcdClrscr();
  80:react.c       ****   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
  81:react.c       ****   printf("setup screen method");
  82:react.c       **** 
  83:react.c       ****   // print message
  84:react.c       ****   lcdGotoxy(CENTER_X(14), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
  85:react.c       ****   lcdPuts("Welcome to the");
  86:react.c       ****   lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 -4);
  87:react.c       ****   lcdPuts("React Game");
  88:react.c       ****   lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 + 12);
  89:react.c       ****   lcdPuts("Press Center");
  90:react.c       **** 
  91:react.c       **** }
  92:react.c       **** 
  93:react.c       **** tU8 randomMove() {
  94:react.c       ****     switch(rand() % 5) {
  95:react.c       ****         case 0:
  96:react.c       ****             whichArrow = KEY_UP;
  97:react.c       ****             return KEY_UP;
  98:react.c       ****         case 1:
  99:react.c       ****             whichArrow = KEY_RIGHT;
 100:react.c       ****             return KEY_RIGHT;
 101:react.c       ****         case 2:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 3


 102:react.c       ****             whichArrow = KEY_DOWN;
 103:react.c       ****             return KEY_DOWN;
 104:react.c       ****         case 3:
 105:react.c       ****             whichArrow = KEY_LEFT;
 106:react.c       ****             return KEY_LEFT;
 107:react.c       ****         case 4:
 108:react.c       ****             whichArrow = KEY_CENTER;
 109:react.c       ****             return KEY_CENTER;
 110:react.c       ****     }
 111:react.c       **** }
 112:react.c       **** 
 113:react.c       **** void showRandomArrow(whichArrow) {
 114:react.c       ****     switch(whichArrow) {
 115:react.c       ****         case KEY_UP:
 116:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 117:react.c       ****             lcdClrscr();
 118:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 119:react.c       ****             lcdGotoxy(CENTER_X(2), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 120:react.c       ****             lcdPuts("UP");
 121:react.c       ****             break;
 122:react.c       **** 
 123:react.c       ****         case KEY_RIGHT:
 124:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 125:react.c       ****             lcdClrscr();
 126:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 127:react.c       ****             lcdGotoxy(CENTER_X(5), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 128:react.c       ****             lcdPuts("RIGHT");
 129:react.c       ****             break;
 130:react.c       **** 
 131:react.c       ****         case KEY_DOWN:
 132:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 133:react.c       ****             lcdClrscr();
 134:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 135:react.c       ****             lcdGotoxy(CENTER_X(4), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 136:react.c       ****             lcdPuts("DOWN");
 137:react.c       ****             break;
 138:react.c       **** 
 139:react.c       ****         case KEY_LEFT:
 140:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 141:react.c       ****             lcdClrscr();
 142:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 143:react.c       ****             lcdGotoxy(CENTER_X(4), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 144:react.c       ****             lcdPuts("LEFT");
 145:react.c       ****             break;
 146:react.c       **** 
 147:react.c       ****         case KEY_CENTER:
 148:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 149:react.c       ****             lcdClrscr();
 150:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 151:react.c       ****             lcdGotoxy(CENTER_X(6), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 152:react.c       ****             lcdPuts("CENTER");
 153:react.c       ****             break;
 154:react.c       **** 
 155:react.c       ****         default:
 156:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 157:react.c       ****             lcdClrscr();
 158:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 4


 159:react.c       ****             lcdGotoxy(CENTER_X(2), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 160:react.c       ****             lcdPuts("UP");
 161:react.c       ****             break;
 162:react.c       ****     }
 163:react.c       **** }
 164:react.c       **** 
 165:react.c       **** void useBuzzer(int MAX){
 166:react.c       ****     int j;
 167:react.c       ****     for (j = 0; j < MAX; j++) {
 168:react.c       ****         setBuzzer(TRUE);
 169:react.c       ****         osSleep(20);
 170:react.c       ****         setBuzzer(FALSE);
 171:react.c       ****         osSleep(20);
 172:react.c       ****     }
 173:react.c       **** }
 174:react.c       **** 
 175:react.c       **** void showScore() {
 176:react.c       **** 
 177:react.c       ****     tU8 str[13];
 178:react.c       **** 
 179:react.c       ****     str[0] = score / 100000 + '0';
 180:react.c       ****     str[1] = (score / 10000) % 10 + '0';
 181:react.c       ****     str[2] = (score / 1000) % 10 + '0';
 182:react.c       ****     str[3] = (score / 100) % 10 + '0';
 183:react.c       ****     str[4] = (score / 10) % 10 + '0';
 184:react.c       ****     str[5] = score % 10 + '0';
 185:react.c       ****     str[6] = 0;
 186:react.c       **** 
 187:react.c       ****     //remove leading zeroes
 188:react.c       ****     if (str[0] == '0') {
 189:react.c       ****         str[0] = ' ';
 190:react.c       ****         if (str[1] == '0') {
 191:react.c       ****             str[1] = ' ';
 192:react.c       ****             if (str[2] == '0') {
 193:react.c       ****                 str[2] = ' ';
 194:react.c       ****                 if (str[3] == '0') {
 195:react.c       ****                     str[3] = ' ';
 196:react.c       ****                     if (str[4] == '0') {
 197:react.c       ****                         str[4] = ' ';
 198:react.c       ****                     }
 199:react.c       ****                 }
 200:react.c       ****             }
 201:react.c       ****         }
 202:react.c       ****     }
 203:react.c       **** 
 204:react.c       ****     lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 205:react.c       ****     lcdPuts(str);
 206:react.c       **** }
 207:react.c       **** 
 208:react.c       **** 
 209:react.c       **** void playReactGame(void){
 210:react.c       ****     // printf("\nPlay React-Game works!\n");
 211:react.c       ****     showPreStartupScreen();
 212:react.c       **** 
 213:react.c       ****     arrow = TRUE;
 214:react.c       ****     finish = TRUE;
 215:react.c       ****     score = 0;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 5


 216:react.c       ****     char strScore[16];
 217:react.c       ****     rounds = 6;
 218:react.c       ****     currentRound = 0;
 219:react.c       **** 
 220:react.c       ****     eaInit();
 221:react.c       **** 
 222:react.c       ****     gameStatus = GAME_NOT_STARTED;
 223:react.c       **** 
 224:react.c       ****       while(gameStatus != GAME_END)
 225:react.c       ****         {
 226:react.c       ****           tU8 anyKey;
 227:react.c       **** 
 228:react.c       ****           anyKey = checkKey();
 229:react.c       **** 
 230:react.c       ****           switch(gameStatus){
 231:react.c       ****               case GAME_NOT_STARTED:
 232:react.c       ****                   if (anyKey == KEY_CENTER){
 233:react.c       ****                       gameStatus = GAME_START;
 234:react.c       ****                   }
 235:react.c       ****                   break;
 236:react.c       **** 
 237:react.c       ****               case GAME_START:
 238:react.c       ****                   if (currentRound == rounds){
 239:react.c       ****                       gameStatus = GAME_SHOW_SCORE;
 240:react.c       ****                       break;
 241:react.c       ****                   }
 242:react.c       **** 
 243:react.c       ****                   if (arrow == TRUE){
 244:react.c       ****                       randomMove();
 245:react.c       ****                       showRandomArrow(whichArrow);
 246:react.c       ****                       arrow = FALSE;
 247:react.c       ****                   }
 248:react.c       ****                   if( anyKey != KEY_NOTHING){
 249:react.c       ****                       if (anyKey == whichArrow){
 250:react.c       ****                           currentRound++;
 251:react.c       ****                           gameStatus = GAME_SCORED;
 252:react.c       ****                       }
 253:react.c       ****                       else if (anyKey != whichArrow){
 254:react.c       ****                           currentRound++;
 255:react.c       ****                           gameStatus = GAME_NOT_SCORED;
 256:react.c       ****                       }
 257:react.c       ****                   }
 258:react.c       ****                   break;
 259:react.c       **** 
 260:react.c       ****               case GAME_SCORED:
 261:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 262:react.c       ****                   lcdClrscr();
 263:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 264:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 265:react.c       ****                   lcdPuts("SCORED !");
 266:react.c       ****                   useBuzzer(1);
 267:react.c       **** 
 268:react.c       ****                   setLED(LED_GREEN,TRUE);
 269:react.c       ****                   osSleep(200);
 270:react.c       ****                   setLED(LED_GREEN,FALSE);
 271:react.c       **** 
 272:react.c       ****                   score++;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 6


 273:react.c       ****                   arrow = TRUE;
 274:react.c       ****                   gameStatus = GAME_START;
 275:react.c       ****                   break;
 276:react.c       **** 
 277:react.c       ****               case GAME_NOT_SCORED:
 278:react.c       ****                   TIMER1_MCR = 0x04;
 279:react.c       **** 
 280:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 281:react.c       ****                   lcdClrscr();
 282:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 283:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 284:react.c       ****                   lcdPuts("FAILED !");
 285:react.c       ****                   useBuzzer(2);
 286:react.c       **** 
 287:react.c       ****                   setLED(LED_RED,TRUE);
 288:react.c       ****                   osSleep(200);
 289:react.c       ****                   setLED(LED_RED,FALSE);
 290:react.c       **** 
 291:react.c       ****                   arrow = TRUE;
 292:react.c       ****                   gameStatus = GAME_START;
 293:react.c       ****                   break;
 294:react.c       **** 
 295:react.c       ****               case GAME_SHOW_SCORE:
 296:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 297:react.c       ****                   lcdClrscr();
 298:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 299:react.c       ****                   lcdGotoxy(CENTER_X(13), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 300:react.c       ****                   lcdPuts("You scored: ");
 301:react.c       **** 
 302:react.c       ****                   lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 303:react.c       **** 
 304:react.c       ****                   showScore();
 305:react.c       **** 
 306:react.c       ****                   osSleep(500);
 307:react.c       ****                   if(score > 3){
 308:react.c       ****                       gameStatus = GAME_WON;
 309:react.c       ****                   }
 310:react.c       ****                   else if (score <= 3){
 311:react.c       ****                       gameStatus = GAME_LOST;
 312:react.c       ****                   }
 313:react.c       ****                   break;
 314:react.c       **** 
 315:react.c       ****               case GAME_WON:
 316:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 317:react.c       ****                   lcdClrscr();
 318:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 319:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 320:react.c       ****                   lcdPuts("You won!");
 321:react.c       ****              
 322:react.c       ****                   saveScoreToEeprom("WIN");
 323:react.c       ****                   gameStatus = GAME_OVER;
 324:react.c       ****                   osSleep(500);
 325:react.c       ****                   break;
 326:react.c       **** 
 327:react.c       ****               case GAME_LOST:
 328:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 329:react.c       ****                   lcdClrscr();
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 7


 330:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 331:react.c       ****                   lcdGotoxy(CENTER_X(9), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 332:react.c       ****                   lcdPuts("You lost!");
 333:react.c       ****                   saveScoreToEeprom("LOSE");
 334:react.c       ****                   gameStatus = GAME_OVER;
 335:react.c       ****                   osSleep(500);
 336:react.c       ****                   break;
 337:react.c       **** 
 338:react.c       ****               case GAME_OVER:
 339:react.c       ****                   if ( finish == TRUE ){
 340:react.c       ****                       lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 341:react.c       ****                       lcdClrscr();
 342:react.c       ****                       lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 343:react.c       ****                       lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 344:react.c       ****                       lcdPuts("Restart-Up");
 345:react.c       ****                       lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 346:react.c       ****                       lcdPuts("EndGame-Down");
 347:react.c       ****                       //TEST:
 348:react.c       ****                       lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 + CHAR_HEIGHT);
 349:react.c       ****                       readScoreFromEeprom();                   
 350:react.c       ****                       //lcdPuts(eepromTest);
 351:react.c       ****                       finish = FALSE;
 352:react.c       ****                   }
 353:react.c       **** 
 354:react.c       ****                   if(anyKey == KEY_UP){
 355:react.c       ****                           currentRound = 0 ;
 356:react.c       ****                           score = 0;
 357:react.c       ****                           finish= TRUE;
 358:react.c       ****                           gameStatus = GAME_START;
 359:react.c       ****                   }
 360:react.c       ****                   else if (anyKey == KEY_DOWN){
 361:react.c       ****                           gameStatus = GAME_END;
 362:react.c       ****                   }
 363:react.c       ****                   break;
 364:react.c       **** 
 365:react.c       ****               default:
 366:react.c       ****                   gameStatus = GAME_END;
 367:react.c       ****                   break;
 368:react.c       ****             }
 369:react.c       ****         }
 370:react.c       ****     return;
 371:react.c       **** }
 372:react.c       **** 
 373:react.c       **** 
 374:react.c       **** 
 375:react.c       **** 
 376:react.c       **** void saveScoreToEeprom(tS8 score[]) {
 377:react.c       **** 
 378:react.c       ****     tS8 errorCode;
 379:react.c       ****     errorCode = eepromWrite(0x0004, score, sizeof(score));
 380:react.c       ****     if(!errorCode == I2C_CODE_OK){
 381:react.c       ****         printf("EEPROM write error! \n");
 382:react.c       ****     }
 383:react.c       **** 
 384:react.c       ****     return;
 385:react.c       **** 
 386:react.c       **** 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 8


 387:react.c       **** }
 388:react.c       **** 
 389:react.c       **** void readScoreFromEeprom(void){
  14              		.loc 1 389 0
  15              		.cfi_startproc
  16 0000 10B5     		push	{r4, lr}
  17              	.LCFI0:
  18              		.cfi_def_cfa_offset 8
  19              		.cfi_offset 4, -8
  20              		.cfi_offset 14, -4
  21 0002 8FB0     		sub	sp, sp, #60
  22              	.LCFI1:
  23              		.cfi_def_cfa_offset 68
 390:react.c       ****     tS8 errorCode;
 391:react.c       ****     tU8 testBuf[MAX_LENGTH];
 392:react.c       ****     errorCode = eepromPageRead(0x0004, testBuf, MAX_LENGTH);
  24              		.loc 1 392 0
  25 0004 08AC     		add	r4, sp, #32
  26 0006 0420     		mov	r0, #4
  27 0008 211C     		mov	r1, r4
  28 000a 1922     		mov	r2, #25
  29 000c FFF7FEFF 		bl	eepromPageRead
  30              	.LVL0:
 393:react.c       ****     if(!errorCode == I2C_CODE_OK){
  31              		.loc 1 393 0
  32 0010 0006     		lsl	r0, r0, #24
  33              	.LVL1:
  34 0012 000E     		lsr	r0, r0, #24
  35 0014 2BD1     		bne	.L2
 394:react.c       ****      printf("\n%d,%d,%d,%d,%d %d,%d,%d,%d,%d %d",
  36              		.loc 1 394 0
  37 0016 E078     		ldrb	r0, [r4, #3]
  38 0018 2178     		ldrb	r1, [r4]
  39 001a 6278     		ldrb	r2, [r4, #1]
  40 001c A378     		ldrb	r3, [r4, #2]
  41 001e 0090     		str	r0, [sp]
  42 0020 2079     		ldrb	r0, [r4, #4]
  43 0022 0190     		str	r0, [sp, #4]
  44 0024 6079     		ldrb	r0, [r4, #5]
  45 0026 0290     		str	r0, [sp, #8]
  46 0028 A079     		ldrb	r0, [r4, #6]
  47 002a 0390     		str	r0, [sp, #12]
  48 002c E079     		ldrb	r0, [r4, #7]
  49 002e 0490     		str	r0, [sp, #16]
  50 0030 207A     		ldrb	r0, [r4, #8]
  51 0032 0590     		str	r0, [sp, #20]
  52 0034 607A     		ldrb	r0, [r4, #9]
  53 0036 0690     		str	r0, [sp, #24]
  54 0038 A07A     		ldrb	r0, [r4, #10]
  55 003a 0790     		str	r0, [sp, #28]
  56 003c 0F48     		ldr	r0, .L3
  57 003e FFF7FEFF 		bl	simplePrintf
 395:react.c       ****              testBuf[0],testBuf[1],testBuf[2],testBuf[3],testBuf[4],testBuf[5],testBuf[6],testBuf[7
 396:react.c       ****       printf("\n%c%c%c%c%c%c%c%c%c%c%c",
  58              		.loc 1 396 0
  59 0042 E078     		ldrb	r0, [r4, #3]
  60 0044 2178     		ldrb	r1, [r4]
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 9


  61 0046 6278     		ldrb	r2, [r4, #1]
  62 0048 A378     		ldrb	r3, [r4, #2]
  63 004a 0090     		str	r0, [sp]
  64 004c 2079     		ldrb	r0, [r4, #4]
  65 004e 0190     		str	r0, [sp, #4]
  66 0050 6079     		ldrb	r0, [r4, #5]
  67 0052 0290     		str	r0, [sp, #8]
  68 0054 A079     		ldrb	r0, [r4, #6]
  69 0056 0390     		str	r0, [sp, #12]
  70 0058 E079     		ldrb	r0, [r4, #7]
  71 005a 0490     		str	r0, [sp, #16]
  72 005c 207A     		ldrb	r0, [r4, #8]
  73 005e 0590     		str	r0, [sp, #20]
  74 0060 607A     		ldrb	r0, [r4, #9]
  75 0062 0690     		str	r0, [sp, #24]
  76 0064 A07A     		ldrb	r0, [r4, #10]
  77 0066 0790     		str	r0, [sp, #28]
  78 0068 0548     		ldr	r0, .L3+4
  79 006a FFF7FEFF 		bl	simplePrintf
  80              	.L2:
 397:react.c       ****              testBuf[0],testBuf[1],testBuf[2],testBuf[3],testBuf[4],testBuf[5],testBuf[6],testBuf[7
 398:react.c       ****     }
 399:react.c       ****     lcdPuts(testBuf);
  81              		.loc 1 399 0
  82 006e 08A8     		add	r0, sp, #32
  83 0070 FFF7FEFF 		bl	lcdPuts
 400:react.c       ****     // eepromTest = testBuf;
 401:react.c       ****     return;
 402:react.c       **** }
  84              		.loc 1 402 0
  85 0074 0FB0     		add	sp, sp, #60
  86              		@ sp needed for prologue
  87 0076 10BC     		pop	{r4}
  88 0078 01BC     		pop	{r0}
  89 007a 0047     		bx	r0
  90              	.L4:
  91              		.align	2
  92              	.L3:
  93 007c 00000000 		.word	.LC0
  94 0080 22000000 		.word	.LC2
  95              		.cfi_endproc
  96              	.LFE7:
  97              		.size	readScoreFromEeprom, .-readScoreFromEeprom
  98              		.align	1
  99              		.global	saveScoreToEeprom
 100              		.code	16
 101              		.thumb_func
 102              		.type	saveScoreToEeprom, %function
 103              	saveScoreToEeprom:
 104              	.LFB6:
 376:react.c       **** void saveScoreToEeprom(tS8 score[]) {
 105              		.loc 1 376 0
 106              		.cfi_startproc
 107 0084 00B5     		push	{lr}
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 14, -4
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 10


 111              	.LVL2:
 376:react.c       **** void saveScoreToEeprom(tS8 score[]) {
 112              		.loc 1 376 0
 113 0086 011C     		mov	r1, r0
 379:react.c       ****     errorCode = eepromWrite(0x0004, score, sizeof(score));
 114              		.loc 1 379 0
 115 0088 0420     		mov	r0, #4
 116              	.LVL3:
 117 008a 021C     		mov	r2, r0
 118 008c FFF7FEFF 		bl	eepromWrite
 119              	.LVL4:
 380:react.c       ****     if(!errorCode == I2C_CODE_OK){
 120              		.loc 1 380 0
 121 0090 0006     		lsl	r0, r0, #24
 122              	.LVL5:
 123 0092 000E     		lsr	r0, r0, #24
 124 0094 02D1     		bne	.L5
 381:react.c       ****         printf("EEPROM write error! \n");
 125              		.loc 1 381 0
 126 0096 0248     		ldr	r0, .L7
 127 0098 FFF7FEFF 		bl	simplePrintf
 128              	.L5:
 387:react.c       **** }
 129              		.loc 1 387 0
 130              		@ sp needed for prologue
 131 009c 01BC     		pop	{r0}
 132 009e 0047     		bx	r0
 133              	.L8:
 134              		.align	2
 135              	.L7:
 136 00a0 3A000000 		.word	.LC4
 137              		.cfi_endproc
 138              	.LFE6:
 139              		.size	saveScoreToEeprom, .-saveScoreToEeprom
 140              		.global	__modsi3
 141              		.align	1
 142              		.global	randomMove
 143              		.code	16
 144              		.thumb_func
 145              		.type	randomMove, %function
 146              	randomMove:
 147              	.LFB1:
  93:react.c       **** tU8 randomMove() {
 148              		.loc 1 93 0
 149              		.cfi_startproc
 150 00a4 00B5     		push	{lr}
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 14, -4
  94:react.c       ****     switch(rand() % 5) {
 154              		.loc 1 94 0
 155 00a6 FFF7FEFF 		bl	rand
 156 00aa 0521     		mov	r1, #5
 157 00ac FFF7FEFF 		bl	__modsi3
 158 00b0 0428     		cmp	r0, #4
 159 00b2 10D8     		bhi	.L10
 160 00b4 094B     		ldr	r3, .L19
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 11


 161 00b6 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 162              	.L16:
 163 00ba 03       		.byte	(.L11-.L16)/2
 164 00bb 05       		.byte	(.L12-.L16)/2
 165 00bc 07       		.byte	(.L13-.L16)/2
 166 00bd 09       		.byte	(.L14-.L16)/2
 167 00be 0B       		.byte	(.L15-.L16)/2
 168 00bf 00       		.align	1
 169              	.L11:
  96:react.c       ****             whichArrow = KEY_UP;
 170              		.loc 1 96 0
 171 00c0 0120     		mov	r0, #1
 172 00c2 06E0     		b	.L18
 173              	.L12:
  99:react.c       ****             whichArrow = KEY_RIGHT;
 174              		.loc 1 99 0
 175 00c4 0220     		mov	r0, #2
 176 00c6 04E0     		b	.L18
 177              	.L13:
 102:react.c       ****             whichArrow = KEY_DOWN;
 178              		.loc 1 102 0
 179 00c8 0420     		mov	r0, #4
 180 00ca 02E0     		b	.L18
 181              	.L14:
 105:react.c       ****             whichArrow = KEY_LEFT;
 182              		.loc 1 105 0
 183 00cc 0820     		mov	r0, #8
 184 00ce 00E0     		b	.L18
 185              	.L15:
 108:react.c       ****             whichArrow = KEY_CENTER;
 186              		.loc 1 108 0
 187 00d0 1020     		mov	r0, #16
 188              	.L18:
 189 00d2 1870     		strb	r0, [r3]
 109:react.c       ****             return KEY_CENTER;
 190              		.loc 1 109 0
 191 00d4 FFE7     		b	.L9
 192              	.L10:
 193              	.L9:
 111:react.c       **** }
 194              		.loc 1 111 0
 195              		@ sp needed for prologue
 196 00d6 02BC     		pop	{r1}
 197 00d8 0847     		bx	r1
 198              	.L20:
 199 00da C046     		.align	2
 200              	.L19:
 201 00dc 00000000 		.word	.LANCHOR0
 202              		.cfi_endproc
 203              	.LFE1:
 204              		.size	randomMove, .-randomMove
 205              		.align	1
 206              		.global	showRandomArrow
 207              		.code	16
 208              		.thumb_func
 209              		.type	showRandomArrow, %function
 210              	showRandomArrow:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 12


 211              	.LFB2:
 113:react.c       **** void showRandomArrow(whichArrow) {
 212              		.loc 1 113 0
 213              		.cfi_startproc
 214 00e0 01B5     		push	{r0, lr}
 215              	.LCFI4:
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 0, -8
 218              		.cfi_offset 14, -4
 219              	.LVL6:
 114:react.c       ****     switch(whichArrow) {
 220              		.loc 1 114 0
 221 00e2 0138     		sub	r0, r0, #1
 222              	.LVL7:
 223 00e4 0F28     		cmp	r0, #15
 224 00e6 59D8     		bhi	.L22
 225 00e8 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 226              	.L28:
 227 00ec 58       		.byte	(.L22-.L28)/2
 228 00ed 08       		.byte	(.L24-.L28)/2
 229 00ee 58       		.byte	(.L22-.L28)/2
 230 00ef 1C       		.byte	(.L25-.L28)/2
 231 00f0 58       		.byte	(.L22-.L28)/2
 232 00f1 58       		.byte	(.L22-.L28)/2
 233 00f2 58       		.byte	(.L22-.L28)/2
 234 00f3 30       		.byte	(.L26-.L28)/2
 235 00f4 58       		.byte	(.L22-.L28)/2
 236 00f5 58       		.byte	(.L22-.L28)/2
 237 00f6 58       		.byte	(.L22-.L28)/2
 238 00f7 58       		.byte	(.L22-.L28)/2
 239 00f8 58       		.byte	(.L22-.L28)/2
 240 00f9 58       		.byte	(.L22-.L28)/2
 241 00fa 58       		.byte	(.L22-.L28)/2
 242 00fb 44       		.byte	(.L27-.L28)/2
 243              		.align	1
 244              	.L24:
 124:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 245              		.loc 1 124 0
 246 00fc 0C20     		mov	r0, #12
 247              	.LVL8:
 248 00fe 0021     		mov	r1, #0
 249 0100 FFF7FEFF 		bl	lcdColor
 125:react.c       ****             lcdClrscr();
 250              		.loc 1 125 0
 251 0104 FFF7FEFF 		bl	lcdClrscr
 126:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 252              		.loc 1 126 0
 253 0108 0020     		mov	r0, #0
 254 010a 8222     		mov	r2, #130
 255 010c 0C23     		mov	r3, #12
 256 010e 011C     		mov	r1, r0
 257 0110 0093     		str	r3, [sp]
 258 0112 131C     		mov	r3, r2
 259 0114 FFF7FEFF 		bl	lcdRect
 127:react.c       ****             lcdGotoxy(CENTER_X(5), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 260              		.loc 1 127 0
 261 0118 2D20     		mov	r0, #45
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 13


 262 011a 2B21     		mov	r1, #43
 263 011c FFF7FEFF 		bl	lcdGotoxy
 128:react.c       ****             lcdPuts("RIGHT");
 264              		.loc 1 128 0
 265 0120 2A48     		ldr	r0, .L31
 266 0122 4EE0     		b	.L30
 267              	.LVL9:
 268              	.L25:
 132:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 269              		.loc 1 132 0
 270 0124 0C20     		mov	r0, #12
 271              	.LVL10:
 272 0126 0021     		mov	r1, #0
 273 0128 FFF7FEFF 		bl	lcdColor
 133:react.c       ****             lcdClrscr();
 274              		.loc 1 133 0
 275 012c FFF7FEFF 		bl	lcdClrscr
 134:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 276              		.loc 1 134 0
 277 0130 0020     		mov	r0, #0
 278 0132 8222     		mov	r2, #130
 279 0134 0C23     		mov	r3, #12
 280 0136 011C     		mov	r1, r0
 281 0138 0093     		str	r3, [sp]
 282 013a 131C     		mov	r3, r2
 283 013c FFF7FEFF 		bl	lcdRect
 135:react.c       ****             lcdGotoxy(CENTER_X(4), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 284              		.loc 1 135 0
 285 0140 3120     		mov	r0, #49
 286 0142 2B21     		mov	r1, #43
 287 0144 FFF7FEFF 		bl	lcdGotoxy
 136:react.c       ****             lcdPuts("DOWN");
 288              		.loc 1 136 0
 289 0148 2148     		ldr	r0, .L31+4
 290 014a 3AE0     		b	.L30
 291              	.LVL11:
 292              	.L26:
 140:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 293              		.loc 1 140 0
 294 014c 0C20     		mov	r0, #12
 295              	.LVL12:
 296 014e 0021     		mov	r1, #0
 297 0150 FFF7FEFF 		bl	lcdColor
 141:react.c       ****             lcdClrscr();
 298              		.loc 1 141 0
 299 0154 FFF7FEFF 		bl	lcdClrscr
 142:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 300              		.loc 1 142 0
 301 0158 0020     		mov	r0, #0
 302 015a 8222     		mov	r2, #130
 303 015c 0C23     		mov	r3, #12
 304 015e 011C     		mov	r1, r0
 305 0160 0093     		str	r3, [sp]
 306 0162 131C     		mov	r3, r2
 307 0164 FFF7FEFF 		bl	lcdRect
 143:react.c       ****             lcdGotoxy(CENTER_X(4), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 308              		.loc 1 143 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 14


 309 0168 3120     		mov	r0, #49
 310 016a 2B21     		mov	r1, #43
 311 016c FFF7FEFF 		bl	lcdGotoxy
 144:react.c       ****             lcdPuts("LEFT");
 312              		.loc 1 144 0
 313 0170 1848     		ldr	r0, .L31+8
 314 0172 26E0     		b	.L30
 315              	.LVL13:
 316              	.L27:
 148:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 317              		.loc 1 148 0
 318 0174 0C20     		mov	r0, #12
 319              	.LVL14:
 320 0176 0021     		mov	r1, #0
 321 0178 FFF7FEFF 		bl	lcdColor
 149:react.c       ****             lcdClrscr();
 322              		.loc 1 149 0
 323 017c FFF7FEFF 		bl	lcdClrscr
 150:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 324              		.loc 1 150 0
 325 0180 0020     		mov	r0, #0
 326 0182 8222     		mov	r2, #130
 327 0184 0C23     		mov	r3, #12
 328 0186 011C     		mov	r1, r0
 329 0188 0093     		str	r3, [sp]
 330 018a 131C     		mov	r3, r2
 331 018c FFF7FEFF 		bl	lcdRect
 151:react.c       ****             lcdGotoxy(CENTER_X(6), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 332              		.loc 1 151 0
 333 0190 2920     		mov	r0, #41
 334 0192 2B21     		mov	r1, #43
 335 0194 FFF7FEFF 		bl	lcdGotoxy
 152:react.c       ****             lcdPuts("CENTER");
 336              		.loc 1 152 0
 337 0198 0F48     		ldr	r0, .L31+12
 338 019a 12E0     		b	.L30
 339              	.LVL15:
 340              	.L22:
 156:react.c       ****             lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 341              		.loc 1 156 0
 342 019c 0C20     		mov	r0, #12
 343              	.LVL16:
 344 019e 0021     		mov	r1, #0
 345 01a0 FFF7FEFF 		bl	lcdColor
 157:react.c       ****             lcdClrscr();
 346              		.loc 1 157 0
 347 01a4 FFF7FEFF 		bl	lcdClrscr
 158:react.c       ****             lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 348              		.loc 1 158 0
 349 01a8 0020     		mov	r0, #0
 350 01aa 8222     		mov	r2, #130
 351 01ac 0C23     		mov	r3, #12
 352 01ae 011C     		mov	r1, r0
 353 01b0 0093     		str	r3, [sp]
 354 01b2 131C     		mov	r3, r2
 355 01b4 FFF7FEFF 		bl	lcdRect
 159:react.c       ****             lcdGotoxy(CENTER_X(2), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 15


 356              		.loc 1 159 0
 357 01b8 3920     		mov	r0, #57
 358 01ba 2B21     		mov	r1, #43
 359 01bc FFF7FEFF 		bl	lcdGotoxy
 160:react.c       ****             lcdPuts("UP");
 360              		.loc 1 160 0
 361 01c0 0648     		ldr	r0, .L31+16
 362              	.L30:
 363 01c2 FFF7FEFF 		bl	lcdPuts
 163:react.c       **** }
 364              		.loc 1 163 0
 365 01c6 01B0     		add	sp, sp, #4
 366              		@ sp needed for prologue
 367 01c8 01BC     		pop	{r0}
 368 01ca 0047     		bx	r0
 369              	.L32:
 370              		.align	2
 371              	.L31:
 372 01cc 53000000 		.word	.LC9
 373 01d0 59000000 		.word	.LC11
 374 01d4 5E000000 		.word	.LC13
 375 01d8 63000000 		.word	.LC15
 376 01dc 50000000 		.word	.LC7
 377              		.cfi_endproc
 378              	.LFE2:
 379              		.size	showRandomArrow, .-showRandomArrow
 380              		.align	1
 381              		.global	useBuzzer
 382              		.code	16
 383              		.thumb_func
 384              		.type	useBuzzer, %function
 385              	useBuzzer:
 386              	.LFB3:
 165:react.c       **** void useBuzzer(int MAX){
 387              		.loc 1 165 0
 388              		.cfi_startproc
 389 01e0 30B5     		push	{r4, r5, lr}
 390              	.LCFI5:
 391              		.cfi_def_cfa_offset 12
 392              		.cfi_offset 4, -12
 393              		.cfi_offset 5, -8
 394              		.cfi_offset 14, -4
 395              	.LVL17:
 165:react.c       **** void useBuzzer(int MAX){
 396              		.loc 1 165 0
 397 01e2 051C     		mov	r5, r0
 167:react.c       ****     for (j = 0; j < MAX; j++) {
 398              		.loc 1 167 0
 399 01e4 0024     		mov	r4, #0
 400 01e6 0CE0     		b	.L34
 401              	.LVL18:
 402              	.L35:
 168:react.c       ****         setBuzzer(TRUE);
 403              		.loc 1 168 0 discriminator 2
 404 01e8 0120     		mov	r0, #1
 405 01ea FFF7FEFF 		bl	setBuzzer
 169:react.c       ****         osSleep(20);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 16


 406              		.loc 1 169 0 discriminator 2
 407 01ee 1420     		mov	r0, #20
 408 01f0 FFF7FEFF 		bl	osSleep
 170:react.c       ****         setBuzzer(FALSE);
 409              		.loc 1 170 0 discriminator 2
 410 01f4 0020     		mov	r0, #0
 411 01f6 FFF7FEFF 		bl	setBuzzer
 171:react.c       ****         osSleep(20);
 412              		.loc 1 171 0 discriminator 2
 413 01fa 1420     		mov	r0, #20
 414 01fc FFF7FEFF 		bl	osSleep
 167:react.c       ****     for (j = 0; j < MAX; j++) {
 415              		.loc 1 167 0 discriminator 2
 416 0200 0134     		add	r4, r4, #1
 417              	.LVL19:
 418              	.L34:
 167:react.c       ****     for (j = 0; j < MAX; j++) {
 419              		.loc 1 167 0 is_stmt 0 discriminator 1
 420 0202 AC42     		cmp	r4, r5
 421 0204 F0DB     		blt	.L35
 173:react.c       **** }
 422              		.loc 1 173 0 is_stmt 1
 423              		@ sp needed for prologue
 424              	.LVL20:
 425              	.LVL21:
 426 0206 30BC     		pop	{r4, r5}
 427 0208 01BC     		pop	{r0}
 428 020a 0047     		bx	r0
 429              		.cfi_endproc
 430              	.LFE3:
 431              		.size	useBuzzer, .-useBuzzer
 432              		.global	__divsi3
 433              		.align	1
 434              		.global	showScore
 435              		.code	16
 436              		.thumb_func
 437              		.type	showScore, %function
 438              	showScore:
 439              	.LFB4:
 175:react.c       **** void showScore() {
 440              		.loc 1 175 0
 441              		.cfi_startproc
 442 020c F0B5     		push	{r4, r5, r6, r7, lr}
 443              	.LCFI6:
 444              		.cfi_def_cfa_offset 20
 445              		.cfi_offset 4, -20
 446              		.cfi_offset 5, -16
 447              		.cfi_offset 6, -12
 448              		.cfi_offset 7, -8
 449              		.cfi_offset 14, -4
 179:react.c       ****     str[0] = score / 100000 + '0';
 450              		.loc 1 179 0
 451 020e 354B     		ldr	r3, .L38
 452 0210 5C68     		ldr	r4, [r3, #4]
 175:react.c       **** void showScore() {
 453              		.loc 1 175 0
 454 0212 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 17


 455              	.LCFI7:
 456              		.cfi_def_cfa_offset 44
 179:react.c       ****     str[0] = score / 100000 + '0';
 457              		.loc 1 179 0
 458 0214 3449     		ldr	r1, .L38+4
 459 0216 201C     		mov	r0, r4
 460 0218 FFF7FEFF 		bl	__divsi3
 461 021c 051C     		mov	r5, r0
 462 021e 3035     		add	r5, r5, #48
 463 0220 2D06     		lsl	r5, r5, #24
 464 0222 6A46     		mov	r2, sp
 465 0224 2D0E     		lsr	r5, r5, #24
 466 0226 1572     		strb	r5, [r2, #8]
 180:react.c       ****     str[1] = (score / 10000) % 10 + '0';
 467              		.loc 1 180 0
 468 0228 3049     		ldr	r1, .L38+8
 469 022a 201C     		mov	r0, r4
 470 022c FFF7FEFF 		bl	__divsi3
 471 0230 0A21     		mov	r1, #10
 472 0232 FFF7FEFF 		bl	__modsi3
 473 0236 061C     		mov	r6, r0
 474 0238 3036     		add	r6, r6, #48
 475 023a 3606     		lsl	r6, r6, #24
 476 023c 6B46     		mov	r3, sp
 477 023e 360E     		lsr	r6, r6, #24
 181:react.c       ****     str[2] = (score / 1000) % 10 + '0';
 478              		.loc 1 181 0
 479 0240 FA21     		mov	r1, #250
 180:react.c       ****     str[1] = (score / 10000) % 10 + '0';
 480              		.loc 1 180 0
 481 0242 5E72     		strb	r6, [r3, #9]
 181:react.c       ****     str[2] = (score / 1000) % 10 + '0';
 482              		.loc 1 181 0
 483 0244 8900     		lsl	r1, r1, #2
 484 0246 201C     		mov	r0, r4
 485 0248 FFF7FEFF 		bl	__divsi3
 486 024c 0A21     		mov	r1, #10
 487 024e FFF7FEFF 		bl	__modsi3
 488 0252 071C     		mov	r7, r0
 489 0254 3037     		add	r7, r7, #48
 490 0256 3F06     		lsl	r7, r7, #24
 491 0258 6A46     		mov	r2, sp
 492 025a 3F0E     		lsr	r7, r7, #24
 493 025c 9772     		strb	r7, [r2, #10]
 182:react.c       ****     str[3] = (score / 100) % 10 + '0';
 494              		.loc 1 182 0
 495 025e 6421     		mov	r1, #100
 496 0260 201C     		mov	r0, r4
 497 0262 FFF7FEFF 		bl	__divsi3
 498 0266 0A21     		mov	r1, #10
 499 0268 FFF7FEFF 		bl	__modsi3
 500 026c 3030     		add	r0, r0, #48
 501 026e 0006     		lsl	r0, r0, #24
 502 0270 030E     		lsr	r3, r0, #24
 503 0272 6A46     		mov	r2, sp
 504 0274 D372     		strb	r3, [r2, #11]
 183:react.c       ****     str[4] = (score / 10) % 10 + '0';
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 18


 505              		.loc 1 183 0
 506 0276 0A21     		mov	r1, #10
 507 0278 201C     		mov	r0, r4
 182:react.c       ****     str[3] = (score / 100) % 10 + '0';
 508              		.loc 1 182 0
 509 027a 0093     		str	r3, [sp]
 183:react.c       ****     str[4] = (score / 10) % 10 + '0';
 510              		.loc 1 183 0
 511 027c FFF7FEFF 		bl	__divsi3
 512 0280 0A21     		mov	r1, #10
 513 0282 FFF7FEFF 		bl	__modsi3
 514 0286 3030     		add	r0, r0, #48
 515 0288 0006     		lsl	r0, r0, #24
 516 028a 030E     		lsr	r3, r0, #24
 517 028c 6A46     		mov	r2, sp
 518 028e 1373     		strb	r3, [r2, #12]
 184:react.c       ****     str[5] = score % 10 + '0';
 519              		.loc 1 184 0
 520 0290 201C     		mov	r0, r4
 521 0292 0A21     		mov	r1, #10
 183:react.c       ****     str[4] = (score / 10) % 10 + '0';
 522              		.loc 1 183 0
 523 0294 0193     		str	r3, [sp, #4]
 184:react.c       ****     str[5] = score % 10 + '0';
 524              		.loc 1 184 0
 525 0296 FFF7FEFF 		bl	__modsi3
 526 029a 6A46     		mov	r2, sp
 527 029c 3030     		add	r0, r0, #48
 185:react.c       ****     str[6] = 0;
 528              		.loc 1 185 0
 529 029e 0023     		mov	r3, #0
 184:react.c       ****     str[5] = score % 10 + '0';
 530              		.loc 1 184 0
 531 02a0 5073     		strb	r0, [r2, #13]
 185:react.c       ****     str[6] = 0;
 532              		.loc 1 185 0
 533 02a2 9373     		strb	r3, [r2, #14]
 188:react.c       ****     if (str[0] == '0') {
 534              		.loc 1 188 0
 535 02a4 302D     		cmp	r5, #48
 536 02a6 11D1     		bne	.L37
 189:react.c       ****         str[0] = ' ';
 537              		.loc 1 189 0
 538 02a8 2023     		mov	r3, #32
 539 02aa 1372     		strb	r3, [r2, #8]
 190:react.c       ****         if (str[1] == '0') {
 540              		.loc 1 190 0
 541 02ac 302E     		cmp	r6, #48
 542 02ae 0DD1     		bne	.L37
 191:react.c       ****             str[1] = ' ';
 543              		.loc 1 191 0
 544 02b0 5372     		strb	r3, [r2, #9]
 192:react.c       ****             if (str[2] == '0') {
 545              		.loc 1 192 0
 546 02b2 302F     		cmp	r7, #48
 547 02b4 0AD1     		bne	.L37
 193:react.c       ****                 str[2] = ' ';
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 19


 548              		.loc 1 193 0
 549 02b6 9372     		strb	r3, [r2, #10]
 194:react.c       ****                 if (str[3] == '0') {
 550              		.loc 1 194 0
 551 02b8 009A     		ldr	r2, [sp]
 552 02ba 302A     		cmp	r2, #48
 553 02bc 06D1     		bne	.L37
 195:react.c       ****                     str[3] = ' ';
 554              		.loc 1 195 0
 555 02be 6A46     		mov	r2, sp
 556 02c0 D372     		strb	r3, [r2, #11]
 196:react.c       ****                     if (str[4] == '0') {
 557              		.loc 1 196 0
 558 02c2 019A     		ldr	r2, [sp, #4]
 559 02c4 302A     		cmp	r2, #48
 560 02c6 01D1     		bne	.L37
 197:react.c       ****                         str[4] = ' ';
 561              		.loc 1 197 0
 562 02c8 6A46     		mov	r2, sp
 563 02ca 1373     		strb	r3, [r2, #12]
 564              	.L37:
 204:react.c       ****     lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 565              		.loc 1 204 0
 566 02cc 3D21     		mov	r1, #61
 567 02ce 1120     		mov	r0, #17
 568 02d0 FFF7FEFF 		bl	lcdGotoxy
 205:react.c       ****     lcdPuts(str);
 569              		.loc 1 205 0
 570 02d4 02A8     		add	r0, sp, #8
 571 02d6 FFF7FEFF 		bl	lcdPuts
 206:react.c       **** }
 572              		.loc 1 206 0
 573 02da 06B0     		add	sp, sp, #24
 574              		@ sp needed for prologue
 575 02dc F0BC     		pop	{r4, r5, r6, r7}
 576 02de 01BC     		pop	{r0}
 577 02e0 0047     		bx	r0
 578              	.L39:
 579 02e2 C046     		.align	2
 580              	.L38:
 581 02e4 00000000 		.word	.LANCHOR0
 582 02e8 A0860100 		.word	100000
 583 02ec 10270000 		.word	10000
 584              		.cfi_endproc
 585              	.LFE4:
 586              		.size	showScore, .-showScore
 587              		.align	1
 588              		.global	playReactGame
 589              		.code	16
 590              		.thumb_func
 591              		.type	playReactGame, %function
 592              	playReactGame:
 593              	.LFB5:
 209:react.c       **** void playReactGame(void){
 594              		.loc 1 209 0
 595              		.cfi_startproc
 596 02f0 71B5     		push	{r0, r4, r5, r6, lr}
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 20


 597              	.LCFI8:
 598              		.cfi_def_cfa_offset 20
 599              		.cfi_offset 0, -20
 600              		.cfi_offset 4, -16
 601              		.cfi_offset 5, -12
 602              		.cfi_offset 6, -8
 603              		.cfi_offset 14, -4
 604              	.LBB7:
 605              	.LBB8:
  78:react.c       ****   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 606              		.loc 1 78 0
 607 02f2 0C20     		mov	r0, #12
 608 02f4 0021     		mov	r1, #0
 609 02f6 FFF7FEFF 		bl	lcdColor
  79:react.c       ****   lcdClrscr();
 610              		.loc 1 79 0
 611 02fa FFF7FEFF 		bl	lcdClrscr
  80:react.c       ****   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 612              		.loc 1 80 0
 613 02fe 8222     		mov	r2, #130
 614 0300 0020     		mov	r0, #0
 615 0302 0C23     		mov	r3, #12
 616 0304 011C     		mov	r1, r0
 617 0306 0093     		str	r3, [sp]
 618 0308 131C     		mov	r3, r2
 619 030a FFF7FEFF 		bl	lcdRect
  81:react.c       ****   printf("setup screen method");
 620              		.loc 1 81 0
 621 030e A948     		ldr	r0, .L67
 622 0310 FFF7FEFF 		bl	simplePrintf
  84:react.c       ****   lcdGotoxy(CENTER_X(14), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 623              		.loc 1 84 0
 624 0314 2B21     		mov	r1, #43
 625 0316 0920     		mov	r0, #9
 626 0318 FFF7FEFF 		bl	lcdGotoxy
  85:react.c       ****   lcdPuts("Welcome to the");
 627              		.loc 1 85 0
 628 031c A648     		ldr	r0, .L67+4
 629 031e FFF7FEFF 		bl	lcdPuts
  86:react.c       ****   lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 -4);
 630              		.loc 1 86 0
 631 0322 3D21     		mov	r1, #61
 632 0324 1920     		mov	r0, #25
 633 0326 FFF7FEFF 		bl	lcdGotoxy
  87:react.c       ****   lcdPuts("React Game");
 634              		.loc 1 87 0
 635 032a A448     		ldr	r0, .L67+8
 636 032c FFF7FEFF 		bl	lcdPuts
  88:react.c       ****   lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 + 12);
 637              		.loc 1 88 0
 638 0330 4D21     		mov	r1, #77
 639 0332 1120     		mov	r0, #17
 640 0334 FFF7FEFF 		bl	lcdGotoxy
  89:react.c       ****   lcdPuts("Press Center");
 641              		.loc 1 89 0
 642 0338 A148     		ldr	r0, .L67+12
 643 033a FFF7FEFF 		bl	lcdPuts
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 21


 644              	.LBE8:
 645              	.LBE7:
 213:react.c       ****     arrow = TRUE;
 646              		.loc 1 213 0
 647 033e A14A     		ldr	r2, .L67+16
 648 0340 0123     		mov	r3, #1
 649 0342 1360     		str	r3, [r2]
 214:react.c       ****     finish = TRUE;
 650              		.loc 1 214 0
 651 0344 A04A     		ldr	r2, .L67+20
 215:react.c       ****     score = 0;
 652              		.loc 1 215 0
 653 0346 A14C     		ldr	r4, .L67+24
 654 0348 0025     		mov	r5, #0
 214:react.c       ****     finish = TRUE;
 655              		.loc 1 214 0
 656 034a 1360     		str	r3, [r2]
 217:react.c       ****     rounds = 6;
 657              		.loc 1 217 0
 658 034c 0623     		mov	r3, #6
 215:react.c       ****     score = 0;
 659              		.loc 1 215 0
 660 034e 6560     		str	r5, [r4, #4]
 217:react.c       ****     rounds = 6;
 661              		.loc 1 217 0
 662 0350 2372     		strb	r3, [r4, #8]
 218:react.c       ****     currentRound = 0;
 663              		.loc 1 218 0
 664 0352 6572     		strb	r5, [r4, #9]
 220:react.c       ****     eaInit();
 665              		.loc 1 220 0
 666 0354 FFF7FEFF 		bl	eaInit
 222:react.c       ****     gameStatus = GAME_NOT_STARTED;
 667              		.loc 1 222 0
 668 0358 A572     		strb	r5, [r4, #10]
 224:react.c       ****       while(gameStatus != GAME_END)
 669              		.loc 1 224 0
 670 035a 24E1     		b	.L62
 671              	.L59:
 672              	.LBB9:
 228:react.c       ****           anyKey = checkKey();
 673              		.loc 1 228 0
 674 035c FFF7FEFF 		bl	checkKey
 675 0360 061C     		mov	r6, r0
 676              	.LVL22:
 230:react.c       ****           switch(gameStatus){
 677              		.loc 1 230 0
 678 0362 A07A     		ldrb	r0, [r4, #10]
 679              	.LVL23:
 680 0364 0928     		cmp	r0, #9
 681 0366 00D9     		bls	.LCB521
 682 0368 1BE1     		b	.L42	@long jump
 683              	.LCB521:
 684 036a FFF7FEFF 		bl	__gnu_thumb1_case_uhi
 685              	.L51:
 686 036e 0A00     		.2byte	(.L43-.L51)/2
 687 0370 1A01     		.2byte	(.L42-.L51)/2
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 22


 688 0372 E300     		.2byte	(.L44-.L51)/2
 689 0374 1A01     		.2byte	(.L42-.L51)/2
 690 0376 0F00     		.2byte	(.L45-.L51)/2
 691 0378 2E00     		.2byte	(.L46-.L51)/2
 692 037a 5900     		.2byte	(.L47-.L51)/2
 693 037c 8500     		.2byte	(.L48-.L51)/2
 694 037e AC00     		.2byte	(.L49-.L51)/2
 695 0380 C300     		.2byte	(.L50-.L51)/2
 696              	.L43:
 697              	.LBB10:
 233:react.c       ****                       gameStatus = GAME_START;
 698              		.loc 1 233 0
 699 0382 0423     		mov	r3, #4
 232:react.c       ****                   if (anyKey == KEY_CENTER){
 700              		.loc 1 232 0
 701 0384 102E     		cmp	r6, #16
 702 0386 00D0     		beq	.LCB531
 703 0388 0DE1     		b	.L62	@long jump
 704              	.LCB531:
 705 038a 0BE1     		b	.L64
 706              	.L45:
 238:react.c       ****                   if (currentRound == rounds){
 707              		.loc 1 238 0
 708 038c 627A     		ldrb	r2, [r4, #9]
 709 038e 237A     		ldrb	r3, [r4, #8]
 710 0390 9A42     		cmp	r2, r3
 711 0392 01D1     		bne	.L53
 239:react.c       ****                       gameStatus = GAME_SHOW_SCORE;
 712              		.loc 1 239 0
 713 0394 0723     		mov	r3, #7
 714 0396 05E1     		b	.L64
 715              	.L53:
 243:react.c       ****                   if (arrow == TRUE){
 716              		.loc 1 243 0
 717 0398 8A4D     		ldr	r5, .L67+16
 718 039a 2B68     		ldr	r3, [r5]
 719 039c 012B     		cmp	r3, #1
 720 039e 06D1     		bne	.L54
 244:react.c       ****                       randomMove();
 721              		.loc 1 244 0
 722 03a0 FFF7FEFF 		bl	randomMove
 245:react.c       ****                       showRandomArrow(whichArrow);
 723              		.loc 1 245 0
 724 03a4 2078     		ldrb	r0, [r4]
 725 03a6 FFF7FEFF 		bl	showRandomArrow
 246:react.c       ****                       arrow = FALSE;
 726              		.loc 1 246 0
 727 03aa 0023     		mov	r3, #0
 728 03ac 2B60     		str	r3, [r5]
 729              	.L54:
 248:react.c       ****                   if( anyKey != KEY_NOTHING){
 730              		.loc 1 248 0
 731 03ae 002E     		cmp	r6, #0
 732 03b0 00D1     		bne	.LCB557
 733 03b2 F8E0     		b	.L62	@long jump
 734              	.LCB557:
 249:react.c       ****                       if (anyKey == whichArrow){
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 23


 735              		.loc 1 249 0
 736 03b4 854B     		ldr	r3, .L67+24
 737 03b6 5A7A     		ldrb	r2, [r3, #9]
 738 03b8 1978     		ldrb	r1, [r3]
 250:react.c       ****                           currentRound++;
 739              		.loc 1 250 0
 740 03ba 0132     		add	r2, r2, #1
 741 03bc 5A72     		strb	r2, [r3, #9]
 251:react.c       ****                           gameStatus = GAME_SCORED;
 742              		.loc 1 251 0
 743 03be 0522     		mov	r2, #5
 249:react.c       ****                       if (anyKey == whichArrow){
 744              		.loc 1 249 0
 745 03c0 B142     		cmp	r1, r6
 746 03c2 00D1     		bne	.LCB565
 747 03c4 EBE0     		b	.L63	@long jump
 748              	.LCB565:
 255:react.c       ****                           gameStatus = GAME_NOT_SCORED;
 749              		.loc 1 255 0
 750 03c6 0622     		mov	r2, #6
 751 03c8 E9E0     		b	.L63
 752              	.L46:
 261:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 753              		.loc 1 261 0
 754 03ca 0C20     		mov	r0, #12
 755 03cc 0021     		mov	r1, #0
 756 03ce FFF7FEFF 		bl	lcdColor
 262:react.c       ****                   lcdClrscr();
 757              		.loc 1 262 0
 758 03d2 FFF7FEFF 		bl	lcdClrscr
 263:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 759              		.loc 1 263 0
 760 03d6 8222     		mov	r2, #130
 761 03d8 0020     		mov	r0, #0
 762 03da 0C23     		mov	r3, #12
 763 03dc 011C     		mov	r1, r0
 764 03de 0093     		str	r3, [sp]
 765 03e0 131C     		mov	r3, r2
 766 03e2 FFF7FEFF 		bl	lcdRect
 264:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 767              		.loc 1 264 0
 768 03e6 2B21     		mov	r1, #43
 769 03e8 2120     		mov	r0, #33
 770 03ea FFF7FEFF 		bl	lcdGotoxy
 265:react.c       ****                   lcdPuts("SCORED !");
 771              		.loc 1 265 0
 772 03ee 7848     		ldr	r0, .L67+28
 773 03f0 FFF7FEFF 		bl	lcdPuts
 266:react.c       ****                   useBuzzer(1);
 774              		.loc 1 266 0
 775 03f4 0120     		mov	r0, #1
 776 03f6 FFF7FEFF 		bl	useBuzzer
 268:react.c       ****                   setLED(LED_GREEN,TRUE);
 777              		.loc 1 268 0
 778 03fa 0120     		mov	r0, #1
 779 03fc 011C     		mov	r1, r0
 780 03fe FFF7FEFF 		bl	setLED
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 24


 269:react.c       ****                   osSleep(200);
 781              		.loc 1 269 0
 782 0402 C820     		mov	r0, #200
 783 0404 FFF7FEFF 		bl	osSleep
 270:react.c       ****                   setLED(LED_GREEN,FALSE);
 784              		.loc 1 270 0
 785 0408 0021     		mov	r1, #0
 786 040a 0120     		mov	r0, #1
 787 040c FFF7FEFF 		bl	setLED
 272:react.c       ****                   score++;
 788              		.loc 1 272 0
 789 0410 6E4B     		ldr	r3, .L67+24
 790 0412 5A68     		ldr	r2, [r3, #4]
 791 0414 0132     		add	r2, r2, #1
 792 0416 5A60     		str	r2, [r3, #4]
 273:react.c       ****                   arrow = TRUE;
 793              		.loc 1 273 0
 794 0418 6A4A     		ldr	r2, .L67+16
 795 041a 0121     		mov	r1, #1
 796 041c 1160     		str	r1, [r2]
 797 041e B9E0     		b	.L66
 798              	.L47:
 278:react.c       ****                   TIMER1_MCR = 0x04;
 799              		.loc 1 278 0
 800 0420 6C4B     		ldr	r3, .L67+32
 801 0422 0425     		mov	r5, #4
 802 0424 1D60     		str	r5, [r3]
 280:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 803              		.loc 1 280 0
 804 0426 0C20     		mov	r0, #12
 805 0428 0021     		mov	r1, #0
 806 042a FFF7FEFF 		bl	lcdColor
 281:react.c       ****                   lcdClrscr();
 807              		.loc 1 281 0
 808 042e FFF7FEFF 		bl	lcdClrscr
 282:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 809              		.loc 1 282 0
 810 0432 8222     		mov	r2, #130
 811 0434 0020     		mov	r0, #0
 812 0436 0C23     		mov	r3, #12
 813 0438 011C     		mov	r1, r0
 814 043a 0093     		str	r3, [sp]
 815 043c 131C     		mov	r3, r2
 816 043e FFF7FEFF 		bl	lcdRect
 283:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 817              		.loc 1 283 0
 818 0442 2B21     		mov	r1, #43
 819 0444 2120     		mov	r0, #33
 820 0446 FFF7FEFF 		bl	lcdGotoxy
 284:react.c       ****                   lcdPuts("FAILED !");
 821              		.loc 1 284 0
 822 044a 6348     		ldr	r0, .L67+36
 823 044c FFF7FEFF 		bl	lcdPuts
 285:react.c       ****                   useBuzzer(2);
 824              		.loc 1 285 0
 825 0450 0220     		mov	r0, #2
 826 0452 FFF7FEFF 		bl	useBuzzer
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 25


 287:react.c       ****                   setLED(LED_RED,TRUE);
 827              		.loc 1 287 0
 828 0456 0121     		mov	r1, #1
 829 0458 0220     		mov	r0, #2
 830 045a FFF7FEFF 		bl	setLED
 288:react.c       ****                   osSleep(200);
 831              		.loc 1 288 0
 832 045e C820     		mov	r0, #200
 833 0460 FFF7FEFF 		bl	osSleep
 289:react.c       ****                   setLED(LED_RED,FALSE);
 834              		.loc 1 289 0
 835 0464 0220     		mov	r0, #2
 836 0466 0021     		mov	r1, #0
 837 0468 FFF7FEFF 		bl	setLED
 291:react.c       ****                   arrow = TRUE;
 838              		.loc 1 291 0
 839 046c 554B     		ldr	r3, .L67+16
 840 046e 0122     		mov	r2, #1
 841 0470 1A60     		str	r2, [r3]
 292:react.c       ****                   gameStatus = GAME_START;
 842              		.loc 1 292 0
 843 0472 564B     		ldr	r3, .L67+24
 844 0474 9D72     		strb	r5, [r3, #10]
 293:react.c       ****                   break;
 845              		.loc 1 293 0
 846 0476 96E0     		b	.L62
 847              	.L48:
 296:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 848              		.loc 1 296 0
 849 0478 0C20     		mov	r0, #12
 850 047a 0021     		mov	r1, #0
 851 047c FFF7FEFF 		bl	lcdColor
 297:react.c       ****                   lcdClrscr();
 852              		.loc 1 297 0
 853 0480 FFF7FEFF 		bl	lcdClrscr
 298:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 854              		.loc 1 298 0
 855 0484 8222     		mov	r2, #130
 856 0486 0020     		mov	r0, #0
 857 0488 0C23     		mov	r3, #12
 858 048a 011C     		mov	r1, r0
 859 048c 0093     		str	r3, [sp]
 860 048e 131C     		mov	r3, r2
 861 0490 FFF7FEFF 		bl	lcdRect
 299:react.c       ****                   lcdGotoxy(CENTER_X(13), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 862              		.loc 1 299 0
 863 0494 2B21     		mov	r1, #43
 864 0496 0D20     		mov	r0, #13
 865 0498 FFF7FEFF 		bl	lcdGotoxy
 300:react.c       ****                   lcdPuts("You scored: ");
 866              		.loc 1 300 0
 867 049c 4F48     		ldr	r0, .L67+40
 868 049e FFF7FEFF 		bl	lcdPuts
 302:react.c       ****                   lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 869              		.loc 1 302 0
 870 04a2 1120     		mov	r0, #17
 871 04a4 3D21     		mov	r1, #61
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 26


 872 04a6 FFF7FEFF 		bl	lcdGotoxy
 304:react.c       ****                   showScore();
 873              		.loc 1 304 0
 874 04aa FFF7FEFF 		bl	showScore
 306:react.c       ****                   osSleep(500);
 875              		.loc 1 306 0
 876 04ae FA20     		mov	r0, #250
 877 04b0 4000     		lsl	r0, r0, #1
 878 04b2 FFF7FEFF 		bl	osSleep
 307:react.c       ****                   if(score > 3){
 879              		.loc 1 307 0
 880 04b6 454B     		ldr	r3, .L67+24
 881 04b8 5A68     		ldr	r2, [r3, #4]
 882 04ba 032A     		cmp	r2, #3
 883 04bc 01DD     		ble	.L56
 308:react.c       ****                       gameStatus = GAME_WON;
 884              		.loc 1 308 0
 885 04be 0822     		mov	r2, #8
 886 04c0 6DE0     		b	.L63
 887              	.L56:
 311:react.c       ****                       gameStatus = GAME_LOST;
 888              		.loc 1 311 0
 889 04c2 0922     		mov	r2, #9
 890 04c4 6BE0     		b	.L63
 891              	.L49:
 316:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 892              		.loc 1 316 0
 893 04c6 0C20     		mov	r0, #12
 894 04c8 0021     		mov	r1, #0
 895 04ca FFF7FEFF 		bl	lcdColor
 317:react.c       ****                   lcdClrscr();
 896              		.loc 1 317 0
 897 04ce FFF7FEFF 		bl	lcdClrscr
 318:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 898              		.loc 1 318 0
 899 04d2 8222     		mov	r2, #130
 900 04d4 0020     		mov	r0, #0
 901 04d6 0C23     		mov	r3, #12
 902 04d8 011C     		mov	r1, r0
 903 04da 0093     		str	r3, [sp]
 904 04dc 131C     		mov	r3, r2
 905 04de FFF7FEFF 		bl	lcdRect
 319:react.c       ****                   lcdGotoxy(CENTER_X(8), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 906              		.loc 1 319 0
 907 04e2 2120     		mov	r0, #33
 908 04e4 2B21     		mov	r1, #43
 909 04e6 FFF7FEFF 		bl	lcdGotoxy
 320:react.c       ****                   lcdPuts("You won!");
 910              		.loc 1 320 0
 911 04ea 3D48     		ldr	r0, .L67+44
 912 04ec FFF7FEFF 		bl	lcdPuts
 322:react.c       ****                   saveScoreToEeprom("WIN");
 913              		.loc 1 322 0
 914 04f0 3C48     		ldr	r0, .L67+48
 915 04f2 15E0     		b	.L65
 916              	.L50:
 328:react.c       ****                   lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 27


 917              		.loc 1 328 0
 918 04f4 0C20     		mov	r0, #12
 919 04f6 0021     		mov	r1, #0
 920 04f8 FFF7FEFF 		bl	lcdColor
 329:react.c       ****                   lcdClrscr();
 921              		.loc 1 329 0
 922 04fc FFF7FEFF 		bl	lcdClrscr
 330:react.c       ****                   lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 923              		.loc 1 330 0
 924 0500 8222     		mov	r2, #130
 925 0502 0020     		mov	r0, #0
 926 0504 0C23     		mov	r3, #12
 927 0506 011C     		mov	r1, r0
 928 0508 0093     		str	r3, [sp]
 929 050a 131C     		mov	r3, r2
 930 050c FFF7FEFF 		bl	lcdRect
 331:react.c       ****                   lcdGotoxy(CENTER_X(9), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 931              		.loc 1 331 0
 932 0510 1D20     		mov	r0, #29
 933 0512 2B21     		mov	r1, #43
 934 0514 FFF7FEFF 		bl	lcdGotoxy
 332:react.c       ****                   lcdPuts("You lost!");
 935              		.loc 1 332 0
 936 0518 3348     		ldr	r0, .L67+52
 937 051a FFF7FEFF 		bl	lcdPuts
 333:react.c       ****                   saveScoreToEeprom("LOSE");
 938              		.loc 1 333 0
 939 051e 3348     		ldr	r0, .L67+56
 940              	.L65:
 941 0520 FFF7FEFF 		bl	saveScoreToEeprom
 334:react.c       ****                   gameStatus = GAME_OVER;
 942              		.loc 1 334 0
 943 0524 294B     		ldr	r3, .L67+24
 944 0526 0222     		mov	r2, #2
 335:react.c       ****                   osSleep(500);
 945              		.loc 1 335 0
 946 0528 FA20     		mov	r0, #250
 334:react.c       ****                   gameStatus = GAME_OVER;
 947              		.loc 1 334 0
 948 052a 9A72     		strb	r2, [r3, #10]
 335:react.c       ****                   osSleep(500);
 949              		.loc 1 335 0
 950 052c 4000     		lsl	r0, r0, #1
 951 052e FFF7FEFF 		bl	osSleep
 336:react.c       ****                   break;
 952              		.loc 1 336 0
 953 0532 38E0     		b	.L62
 954              	.L44:
 339:react.c       ****                   if ( finish == TRUE ){
 955              		.loc 1 339 0
 956 0534 244D     		ldr	r5, .L67+20
 957 0536 2B68     		ldr	r3, [r5]
 958 0538 012B     		cmp	r3, #1
 959 053a 23D1     		bne	.L57
 960              	.LBB11:
 340:react.c       ****                       lcdColor(GAME_BKG_COLOR_OK,BOARD_GRID_COLOR);
 961              		.loc 1 340 0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 28


 962 053c 0C20     		mov	r0, #12
 963 053e 0021     		mov	r1, #0
 964 0540 FFF7FEFF 		bl	lcdColor
 341:react.c       ****                       lcdClrscr();
 965              		.loc 1 341 0
 966 0544 FFF7FEFF 		bl	lcdClrscr
 342:react.c       ****                       lcdRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, GAME_BKG_COLOR_OK);
 967              		.loc 1 342 0
 968 0548 8222     		mov	r2, #130
 969 054a 0020     		mov	r0, #0
 970 054c 0C23     		mov	r3, #12
 971 054e 011C     		mov	r1, r0
 972 0550 0093     		str	r3, [sp]
 973 0552 131C     		mov	r3, r2
 974 0554 FFF7FEFF 		bl	lcdRect
 343:react.c       ****                       lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 - CHAR_HEIGHT-8);
 975              		.loc 1 343 0
 976 0558 2B21     		mov	r1, #43
 977 055a 1920     		mov	r0, #25
 978 055c FFF7FEFF 		bl	lcdGotoxy
 344:react.c       ****                       lcdPuts("Restart-Up");
 979              		.loc 1 344 0
 980 0560 2348     		ldr	r0, .L67+60
 981 0562 FFF7FEFF 		bl	lcdPuts
 345:react.c       ****                       lcdGotoxy(CENTER_X(12), SCREEN_HEIGHT/2 -4);
 982              		.loc 1 345 0
 983 0566 3D21     		mov	r1, #61
 984 0568 1120     		mov	r0, #17
 985 056a FFF7FEFF 		bl	lcdGotoxy
 346:react.c       ****                       lcdPuts("EndGame-Down");
 986              		.loc 1 346 0
 987 056e 2148     		ldr	r0, .L67+64
 988 0570 FFF7FEFF 		bl	lcdPuts
 348:react.c       ****                       lcdGotoxy(CENTER_X(10), SCREEN_HEIGHT/2 + CHAR_HEIGHT);
 989              		.loc 1 348 0
 990 0574 1920     		mov	r0, #25
 991 0576 4F21     		mov	r1, #79
 992 0578 FFF7FEFF 		bl	lcdGotoxy
 349:react.c       ****                       readScoreFromEeprom();                   
 993              		.loc 1 349 0
 994 057c FFF7FEFF 		bl	readScoreFromEeprom
 351:react.c       ****                       finish = FALSE;
 995              		.loc 1 351 0
 996 0580 0023     		mov	r3, #0
 997 0582 2B60     		str	r3, [r5]
 998              	.L57:
 999 0584 114B     		ldr	r3, .L67+24
 1000              	.LBE11:
 354:react.c       ****                   if(anyKey == KEY_UP){
 1001              		.loc 1 354 0
 1002 0586 012E     		cmp	r6, #1
 1003 0588 06D1     		bne	.L58
 355:react.c       ****                           currentRound = 0 ;
 1004              		.loc 1 355 0
 1005 058a 0022     		mov	r2, #0
 1006 058c 5A72     		strb	r2, [r3, #9]
 356:react.c       ****                           score = 0;
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 29


 1007              		.loc 1 356 0
 1008 058e 5A60     		str	r2, [r3, #4]
 357:react.c       ****                           finish= TRUE;
 1009              		.loc 1 357 0
 1010 0590 0D4A     		ldr	r2, .L67+20
 1011 0592 1660     		str	r6, [r2]
 1012              	.L66:
 358:react.c       ****                           gameStatus = GAME_START;
 1013              		.loc 1 358 0
 1014 0594 0422     		mov	r2, #4
 1015 0596 02E0     		b	.L63
 1016              	.L58:
 360:react.c       ****                   else if (anyKey == KEY_DOWN){
 1017              		.loc 1 360 0
 1018 0598 042E     		cmp	r6, #4
 1019 059a 04D1     		bne	.L62
 361:react.c       ****                           gameStatus = GAME_END;
 1020              		.loc 1 361 0
 1021 059c 0322     		mov	r2, #3
 1022              	.L63:
 1023 059e 9A72     		strb	r2, [r3, #10]
 1024 05a0 01E0     		b	.L62
 1025              	.L42:
 366:react.c       ****                   gameStatus = GAME_END;
 1026              		.loc 1 366 0
 1027 05a2 0323     		mov	r3, #3
 1028              	.L64:
 1029 05a4 A372     		strb	r3, [r4, #10]
 1030              	.LVL24:
 1031              	.L62:
 1032              	.LBE10:
 1033              	.LBE9:
 224:react.c       ****       while(gameStatus != GAME_END)
 1034              		.loc 1 224 0 discriminator 1
 1035 05a6 A37A     		ldrb	r3, [r4, #10]
 1036 05a8 032B     		cmp	r3, #3
 1037 05aa 00D0     		beq	.LCB805
 1038 05ac D6E6     		b	.L59	@long jump
 1039              	.LCB805:
 371:react.c       **** }
 1040              		.loc 1 371 0
 1041              		@ sp needed for prologue
 1042 05ae 71BC     		pop	{r0, r4, r5, r6}
 1043 05b0 01BC     		pop	{r0}
 1044 05b2 0047     		bx	r0
 1045              	.L68:
 1046              		.align	2
 1047              	.L67:
 1048 05b4 6A000000 		.word	.LC18
 1049 05b8 7E000000 		.word	.LC20
 1050 05bc 8D000000 		.word	.LC22
 1051 05c0 98000000 		.word	.LC24
 1052 05c4 00000000 		.word	arrow
 1053 05c8 00000000 		.word	finish
 1054 05cc 00000000 		.word	.LANCHOR0
 1055 05d0 A5000000 		.word	.LC29
 1056 05d4 148000E0 		.word	-536838124
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 30


 1057 05d8 AE000000 		.word	.LC31
 1058 05dc B7000000 		.word	.LC33
 1059 05e0 C4000000 		.word	.LC35
 1060 05e4 CD000000 		.word	.LC37
 1061 05e8 D1000000 		.word	.LC39
 1062 05ec DB000000 		.word	.LC41
 1063 05f0 E0000000 		.word	.LC43
 1064 05f4 EB000000 		.word	.LC45
 1065              		.cfi_endproc
 1066              	.LFE5:
 1067              		.size	playReactGame, .-playReactGame
 1068              		.comm	finish,4,4
 1069              		.comm	arrow,4,4
 1070              		.section	.rodata.str1.1,"aMS",%progbits,1
 1071              	.LC0:
 1072 0000 0A25642C 		.ascii	"\012%d,%d,%d,%d,%d %d,%d,%d,%d,%d %d\000"
 1072      25642C25 
 1072      642C2564 
 1072      2C256420 
 1072      25642C25 
 1073              	.LC2:
 1074 0022 0A256325 		.ascii	"\012%c%c%c%c%c%c%c%c%c%c%c\000"
 1074      63256325 
 1074      63256325 
 1074      63256325 
 1074      63256325 
 1075              	.LC4:
 1076 003a 45455052 		.ascii	"EEPROM write error! \012\000"
 1076      4F4D2077 
 1076      72697465 
 1076      20657272 
 1076      6F722120 
 1077              	.LC7:
 1078 0050 555000   		.ascii	"UP\000"
 1079              	.LC9:
 1080 0053 52494748 		.ascii	"RIGHT\000"
 1080      5400
 1081              	.LC11:
 1082 0059 444F574E 		.ascii	"DOWN\000"
 1082      00
 1083              	.LC13:
 1084 005e 4C454654 		.ascii	"LEFT\000"
 1084      00
 1085              	.LC15:
 1086 0063 43454E54 		.ascii	"CENTER\000"
 1086      455200
 1087              	.LC18:
 1088 006a 73657475 		.ascii	"setup screen method\000"
 1088      70207363 
 1088      7265656E 
 1088      206D6574 
 1088      686F6400 
 1089              	.LC20:
 1090 007e 57656C63 		.ascii	"Welcome to the\000"
 1090      6F6D6520 
 1090      746F2074 
 1090      686500
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 31


 1091              	.LC22:
 1092 008d 52656163 		.ascii	"React Game\000"
 1092      74204761 
 1092      6D6500
 1093              	.LC24:
 1094 0098 50726573 		.ascii	"Press Center\000"
 1094      73204365 
 1094      6E746572 
 1094      00
 1095              	.LC29:
 1096 00a5 53434F52 		.ascii	"SCORED !\000"
 1096      45442021 
 1096      00
 1097              	.LC31:
 1098 00ae 4641494C 		.ascii	"FAILED !\000"
 1098      45442021 
 1098      00
 1099              	.LC33:
 1100 00b7 596F7520 		.ascii	"You scored: \000"
 1100      73636F72 
 1100      65643A20 
 1100      00
 1101              	.LC35:
 1102 00c4 596F7520 		.ascii	"You won!\000"
 1102      776F6E21 
 1102      00
 1103              	.LC37:
 1104 00cd 57494E00 		.ascii	"WIN\000"
 1105              	.LC39:
 1106 00d1 596F7520 		.ascii	"You lost!\000"
 1106      6C6F7374 
 1106      2100
 1107              	.LC41:
 1108 00db 4C4F5345 		.ascii	"LOSE\000"
 1108      00
 1109              	.LC43:
 1110 00e0 52657374 		.ascii	"Restart-Up\000"
 1110      6172742D 
 1110      557000
 1111              	.LC45:
 1112 00eb 456E6447 		.ascii	"EndGame-Down\000"
 1112      616D652D 
 1112      446F776E 
 1112      00
 1113              		.bss
 1114              		.align	2
 1115              		.set	.LANCHOR0,. + 0
 1116              		.type	whichArrow, %object
 1117              		.size	whichArrow, 1
 1118              	whichArrow:
 1119 0000 00       		.space	1
 1120 0001 000000   		.space	3
 1121              		.type	score, %object
 1122              		.size	score, 4
 1123              	score:
 1124 0004 00000000 		.space	4
 1125              		.type	rounds, %object
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 32


 1126              		.size	rounds, 1
 1127              	rounds:
 1128 0008 00       		.space	1
 1129              		.type	currentRound, %object
 1130              		.size	currentRound, 1
 1131              	currentRound:
 1132 0009 00       		.space	1
 1133              		.type	gameStatus, %object
 1134              		.size	gameStatus, 1
 1135              	gameStatus:
 1136 000a 00       		.space	1
 1137 000b 00       		.text
 1138              	.Letext0:
 1139              		.file 2 "./startup/../pre_emptive_os/api/../api/general.h"
 1140              		.section	.debug_info,"",%progbits
 1141              	.Ldebug_info0:
 1142 0000 0B030000 		.4byte	0x30b
 1143 0004 0200     		.2byte	0x2
 1144 0006 00000000 		.4byte	.Ldebug_abbrev0
 1145 000a 04       		.byte	0x4
 1146 000b 01       		.uleb128 0x1
 1147 000c B2000000 		.4byte	.LASF32
 1148 0010 01       		.byte	0x1
 1149 0011 1D000000 		.4byte	.LASF33
 1150 0015 5A010000 		.4byte	.LASF34
 1151 0019 00000000 		.4byte	.Ltext0
 1152 001d F8050000 		.4byte	.Letext0
 1153 0021 00000000 		.4byte	.Ldebug_line0
 1154 0025 02       		.uleb128 0x2
 1155 0026 74553800 		.ascii	"tU8\000"
 1156 002a 02       		.byte	0x2
 1157 002b 47       		.byte	0x47
 1158 002c 30000000 		.4byte	0x30
 1159 0030 03       		.uleb128 0x3
 1160 0031 01       		.byte	0x1
 1161 0032 08       		.byte	0x8
 1162 0033 BE000000 		.4byte	.LASF0
 1163 0037 03       		.uleb128 0x3
 1164 0038 02       		.byte	0x2
 1165 0039 07       		.byte	0x7
 1166 003a 97000000 		.4byte	.LASF1
 1167 003e 03       		.uleb128 0x3
 1168 003f 04       		.byte	0x4
 1169 0040 07       		.byte	0x7
 1170 0041 F8000000 		.4byte	.LASF2
 1171 0045 03       		.uleb128 0x3
 1172 0046 01       		.byte	0x1
 1173 0047 06       		.byte	0x6
 1174 0048 AA010000 		.4byte	.LASF3
 1175 004c 03       		.uleb128 0x3
 1176 004d 02       		.byte	0x2
 1177 004e 05       		.byte	0x5
 1178 004f 85010000 		.4byte	.LASF4
 1179 0053 04       		.uleb128 0x4
 1180 0054 04       		.byte	0x4
 1181 0055 05       		.byte	0x5
 1182 0056 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 33


 1183 005a 03       		.uleb128 0x3
 1184 005b 04       		.byte	0x4
 1185 005c 07       		.byte	0x7
 1186 005d 85000000 		.4byte	.LASF5
 1187 0061 03       		.uleb128 0x3
 1188 0062 08       		.byte	0x8
 1189 0063 05       		.byte	0x5
 1190 0064 2D010000 		.4byte	.LASF6
 1191 0068 03       		.uleb128 0x3
 1192 0069 08       		.byte	0x8
 1193 006a 07       		.byte	0x7
 1194 006b 05010000 		.4byte	.LASF7
 1195 006f 03       		.uleb128 0x3
 1196 0070 04       		.byte	0x4
 1197 0071 05       		.byte	0x5
 1198 0072 A1010000 		.4byte	.LASF8
 1199 0076 05       		.uleb128 0x5
 1200 0077 04       		.byte	0x4
 1201 0078 7C000000 		.4byte	0x7c
 1202 007c 03       		.uleb128 0x3
 1203 007d 01       		.byte	0x1
 1204 007e 08       		.byte	0x8
 1205 007f 44010000 		.4byte	.LASF9
 1206 0083 06       		.uleb128 0x6
 1207 0084 70000000 		.4byte	.LASF35
 1208 0088 01       		.byte	0x1
 1209 0089 4C       		.byte	0x4c
 1210 008a 01       		.byte	0x1
 1211 008b 01       		.byte	0x1
 1212 008c 07       		.uleb128 0x7
 1213 008d 01       		.byte	0x1
 1214 008e 31000000 		.4byte	.LASF12
 1215 0092 01       		.byte	0x1
 1216 0093 8501     		.2byte	0x185
 1217 0095 01       		.byte	0x1
 1218 0096 00000000 		.4byte	.LFB7
 1219 009a 84000000 		.4byte	.LFE7
 1220 009e 00000000 		.4byte	.LLST0
 1221 00a2 D6000000 		.4byte	0xd6
 1222 00a6 08       		.uleb128 0x8
 1223 00a7 EE000000 		.4byte	.LASF10
 1224 00ab 01       		.byte	0x1
 1225 00ac 8601     		.2byte	0x186
 1226 00ae 7C000000 		.4byte	0x7c
 1227 00b2 2D000000 		.4byte	.LLST1
 1228 00b6 09       		.uleb128 0x9
 1229 00b7 AA000000 		.4byte	.LASF11
 1230 00bb 01       		.byte	0x1
 1231 00bc 8701     		.2byte	0x187
 1232 00be D6000000 		.4byte	0xd6
 1233 00c2 02       		.byte	0x2
 1234 00c3 91       		.byte	0x91
 1235 00c4 5C       		.sleb128 -36
 1236 00c5 0A       		.uleb128 0xa
 1237 00c6 01       		.byte	0x1
 1238 00c7 B6010000 		.4byte	.LASF14
 1239 00cb 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 34


 1240 00cc 8801     		.2byte	0x188
 1241 00ce 53000000 		.4byte	0x53
 1242 00d2 01       		.byte	0x1
 1243 00d3 0B       		.uleb128 0xb
 1244 00d4 00       		.byte	0
 1245 00d5 00       		.byte	0
 1246 00d6 0C       		.uleb128 0xc
 1247 00d7 30000000 		.4byte	0x30
 1248 00db E6000000 		.4byte	0xe6
 1249 00df 0D       		.uleb128 0xd
 1250 00e0 5A000000 		.4byte	0x5a
 1251 00e4 18       		.byte	0x18
 1252 00e5 00       		.byte	0
 1253 00e6 07       		.uleb128 0x7
 1254 00e7 01       		.byte	0x1
 1255 00e8 0B000000 		.4byte	.LASF13
 1256 00ec 01       		.byte	0x1
 1257 00ed 7801     		.2byte	0x178
 1258 00ef 01       		.byte	0x1
 1259 00f0 84000000 		.4byte	.LFB6
 1260 00f4 A4000000 		.4byte	.LFE6
 1261 00f8 40000000 		.4byte	.LLST2
 1262 00fc 31010000 		.4byte	0x131
 1263 0100 0E       		.uleb128 0xe
 1264 0101 6A000000 		.4byte	.LASF16
 1265 0105 01       		.byte	0x1
 1266 0106 7801     		.2byte	0x178
 1267 0108 76000000 		.4byte	0x76
 1268 010c 60000000 		.4byte	.LLST3
 1269 0110 08       		.uleb128 0x8
 1270 0111 EE000000 		.4byte	.LASF10
 1271 0115 01       		.byte	0x1
 1272 0116 7A01     		.2byte	0x17a
 1273 0118 7C000000 		.4byte	0x7c
 1274 011c 7E000000 		.4byte	.LLST4
 1275 0120 0A       		.uleb128 0xa
 1276 0121 01       		.byte	0x1
 1277 0122 25000000 		.4byte	.LASF15
 1278 0126 01       		.byte	0x1
 1279 0127 7B01     		.2byte	0x17b
 1280 0129 53000000 		.4byte	0x53
 1281 012d 01       		.byte	0x1
 1282 012e 0B       		.uleb128 0xb
 1283 012f 00       		.byte	0
 1284 0130 00       		.byte	0
 1285 0131 0F       		.uleb128 0xf
 1286 0132 01       		.byte	0x1
 1287 0133 49010000 		.4byte	.LASF36
 1288 0137 01       		.byte	0x1
 1289 0138 5D       		.byte	0x5d
 1290 0139 30000000 		.4byte	0x30
 1291 013d A4000000 		.4byte	.LFB1
 1292 0141 E0000000 		.4byte	.LFE1
 1293 0145 91000000 		.4byte	.LLST5
 1294 0149 10       		.uleb128 0x10
 1295 014a 01       		.byte	0x1
 1296 014b C5010000 		.4byte	.LASF19
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 35


 1297 014f 01       		.byte	0x1
 1298 0150 71       		.byte	0x71
 1299 0151 E0000000 		.4byte	.LFB2
 1300 0155 E0010000 		.4byte	.LFE2
 1301 0159 B1000000 		.4byte	.LLST6
 1302 015d 71010000 		.4byte	0x171
 1303 0161 11       		.uleb128 0x11
 1304 0162 4E000000 		.4byte	.LASF17
 1305 0166 01       		.byte	0x1
 1306 0167 71       		.byte	0x71
 1307 0168 53000000 		.4byte	0x53
 1308 016c D1000000 		.4byte	.LLST7
 1309 0170 00       		.byte	0
 1310 0171 12       		.uleb128 0x12
 1311 0172 01       		.byte	0x1
 1312 0173 59000000 		.4byte	.LASF18
 1313 0177 01       		.byte	0x1
 1314 0178 A5       		.byte	0xa5
 1315 0179 01       		.byte	0x1
 1316 017a E0010000 		.4byte	.LFB3
 1317 017e 0C020000 		.4byte	.LFE3
 1318 0182 25010000 		.4byte	.LLST8
 1319 0186 A7010000 		.4byte	0x1a7
 1320 018a 13       		.uleb128 0x13
 1321 018b 4D415800 		.ascii	"MAX\000"
 1322 018f 01       		.byte	0x1
 1323 0190 A5       		.byte	0xa5
 1324 0191 53000000 		.4byte	0x53
 1325 0195 45010000 		.4byte	.LLST9
 1326 0199 14       		.uleb128 0x14
 1327 019a 6A00     		.ascii	"j\000"
 1328 019c 01       		.byte	0x1
 1329 019d A6       		.byte	0xa6
 1330 019e 53000000 		.4byte	0x53
 1331 01a2 63010000 		.4byte	.LLST10
 1332 01a6 00       		.byte	0
 1333 01a7 10       		.uleb128 0x10
 1334 01a8 01       		.byte	0x1
 1335 01a9 23010000 		.4byte	.LASF20
 1336 01ad 01       		.byte	0x1
 1337 01ae AF       		.byte	0xaf
 1338 01af 0C020000 		.4byte	.LFB4
 1339 01b3 F0020000 		.4byte	.LFE4
 1340 01b7 82010000 		.4byte	.LLST11
 1341 01bb CE010000 		.4byte	0x1ce
 1342 01bf 15       		.uleb128 0x15
 1343 01c0 73747200 		.ascii	"str\000"
 1344 01c4 01       		.byte	0x1
 1345 01c5 B1       		.byte	0xb1
 1346 01c6 CE010000 		.4byte	0x1ce
 1347 01ca 02       		.byte	0x2
 1348 01cb 91       		.byte	0x91
 1349 01cc 5C       		.sleb128 -36
 1350 01cd 00       		.byte	0
 1351 01ce 0C       		.uleb128 0xc
 1352 01cf 30000000 		.4byte	0x30
 1353 01d3 DE010000 		.4byte	0x1de
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 36


 1354 01d7 0D       		.uleb128 0xd
 1355 01d8 5A000000 		.4byte	0x5a
 1356 01dc 0C       		.byte	0xc
 1357 01dd 00       		.byte	0
 1358 01de 12       		.uleb128 0x12
 1359 01df 01       		.byte	0x1
 1360 01e0 CC000000 		.4byte	.LASF21
 1361 01e4 01       		.byte	0x1
 1362 01e5 D1       		.byte	0xd1
 1363 01e6 01       		.byte	0x1
 1364 01e7 F0020000 		.4byte	.LFB5
 1365 01eb F8050000 		.4byte	.LFE5
 1366 01ef AE010000 		.4byte	.LLST12
 1367 01f3 63020000 		.4byte	0x263
 1368 01f7 16       		.uleb128 0x16
 1369 01f8 3B010000 		.4byte	.LASF25
 1370 01fc 01       		.byte	0x1
 1371 01fd D8       		.byte	0xd8
 1372 01fe 63020000 		.4byte	0x263
 1373 0202 17       		.uleb128 0x17
 1374 0203 83000000 		.4byte	0x83
 1375 0207 F2020000 		.4byte	.LBB7
 1376 020b 3E030000 		.4byte	.LBE7
 1377 020f 01       		.byte	0x1
 1378 0210 D3       		.byte	0xd3
 1379 0211 18       		.uleb128 0x18
 1380 0212 5C030000 		.4byte	.LBB9
 1381 0216 A6050000 		.4byte	.LBE9
 1382 021a 19       		.uleb128 0x19
 1383 021b 1C010000 		.4byte	.LASF22
 1384 021f 01       		.byte	0x1
 1385 0220 E2       		.byte	0xe2
 1386 0221 30000000 		.4byte	0x30
 1387 0225 CE010000 		.4byte	.LLST13
 1388 0229 18       		.uleb128 0x18
 1389 022a 82030000 		.4byte	.LBB10
 1390 022e A6050000 		.4byte	.LBE10
 1391 0232 1A       		.uleb128 0x1a
 1392 0233 01       		.byte	0x1
 1393 0234 0B000000 		.4byte	.LASF13
 1394 0238 01       		.byte	0x1
 1395 0239 4201     		.2byte	0x142
 1396 023b 53000000 		.4byte	0x53
 1397 023f 01       		.byte	0x1
 1398 0240 46020000 		.4byte	0x246
 1399 0244 0B       		.uleb128 0xb
 1400 0245 00       		.byte	0
 1401 0246 18       		.uleb128 0x18
 1402 0247 3C050000 		.4byte	.LBB11
 1403 024b 86050000 		.4byte	.LBE11
 1404 024f 0A       		.uleb128 0xa
 1405 0250 01       		.byte	0x1
 1406 0251 31000000 		.4byte	.LASF12
 1407 0255 01       		.byte	0x1
 1408 0256 5D01     		.2byte	0x15d
 1409 0258 53000000 		.4byte	0x53
 1410 025c 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 37


 1411 025d 0B       		.uleb128 0xb
 1412 025e 00       		.byte	0
 1413 025f 00       		.byte	0
 1414 0260 00       		.byte	0
 1415 0261 00       		.byte	0
 1416 0262 00       		.byte	0
 1417 0263 0C       		.uleb128 0xc
 1418 0264 7C000000 		.4byte	0x7c
 1419 0268 73020000 		.4byte	0x273
 1420 026c 0D       		.uleb128 0xd
 1421 026d 5A000000 		.4byte	0x5a
 1422 0271 0F       		.byte	0xf
 1423 0272 00       		.byte	0
 1424 0273 1B       		.uleb128 0x1b
 1425 0274 4E000000 		.4byte	.LASF17
 1426 0278 01       		.byte	0x1
 1427 0279 13       		.byte	0x13
 1428 027a 25000000 		.4byte	0x25
 1429 027e 05       		.byte	0x5
 1430 027f 03       		.byte	0x3
 1431 0280 00000000 		.4byte	whichArrow
 1432 0284 1C       		.uleb128 0x1c
 1433 0285 DA000000 		.4byte	.LASF23
 1434 0289 01       		.byte	0x1
 1435 028a 14       		.byte	0x14
 1436 028b 25000000 		.4byte	0x25
 1437 028f 00       		.byte	0
 1438 0290 1B       		.uleb128 0x1b
 1439 0291 00000000 		.4byte	.LASF24
 1440 0295 01       		.byte	0x1
 1441 0296 41       		.byte	0x41
 1442 0297 30000000 		.4byte	0x30
 1443 029b 05       		.byte	0x5
 1444 029c 03       		.byte	0x3
 1445 029d 0A000000 		.4byte	gameStatus
 1446 02a1 16       		.uleb128 0x16
 1447 02a2 45000000 		.4byte	.LASF26
 1448 02a6 01       		.byte	0x1
 1449 02a7 42       		.byte	0x42
 1450 02a8 30000000 		.4byte	0x30
 1451 02ac 1B       		.uleb128 0x1b
 1452 02ad 6A000000 		.4byte	.LASF16
 1453 02b1 01       		.byte	0x1
 1454 02b2 45       		.byte	0x45
 1455 02b3 53000000 		.4byte	0x53
 1456 02b7 05       		.byte	0x5
 1457 02b8 03       		.byte	0x3
 1458 02b9 04000000 		.4byte	score
 1459 02bd 1B       		.uleb128 0x1b
 1460 02be 8F010000 		.4byte	.LASF27
 1461 02c2 01       		.byte	0x1
 1462 02c3 46       		.byte	0x46
 1463 02c4 30000000 		.4byte	0x30
 1464 02c8 05       		.byte	0x5
 1465 02c9 03       		.byte	0x3
 1466 02ca 08000000 		.4byte	rounds
 1467 02ce 1B       		.uleb128 0x1b
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 38


 1468 02cf E1000000 		.4byte	.LASF28
 1469 02d3 01       		.byte	0x1
 1470 02d4 47       		.byte	0x47
 1471 02d5 30000000 		.4byte	0x30
 1472 02d9 05       		.byte	0x5
 1473 02da 03       		.byte	0x3
 1474 02db 09000000 		.4byte	currentRound
 1475 02df 16       		.uleb128 0x16
 1476 02e0 96010000 		.4byte	.LASF29
 1477 02e4 01       		.byte	0x1
 1478 02e5 48       		.byte	0x48
 1479 02e6 30000000 		.4byte	0x30
 1480 02ea 1D       		.uleb128 0x1d
 1481 02eb 54010000 		.4byte	.LASF30
 1482 02ef 01       		.byte	0x1
 1483 02f0 43       		.byte	0x43
 1484 02f1 53000000 		.4byte	0x53
 1485 02f5 01       		.byte	0x1
 1486 02f6 05       		.byte	0x5
 1487 02f7 03       		.byte	0x3
 1488 02f8 00000000 		.4byte	arrow
 1489 02fc 1D       		.uleb128 0x1d
 1490 02fd 63000000 		.4byte	.LASF31
 1491 0301 01       		.byte	0x1
 1492 0302 44       		.byte	0x44
 1493 0303 53000000 		.4byte	0x53
 1494 0307 01       		.byte	0x1
 1495 0308 05       		.byte	0x5
 1496 0309 03       		.byte	0x3
 1497 030a 00000000 		.4byte	finish
 1498 030e 00       		.byte	0
 1499              		.section	.debug_abbrev,"",%progbits
 1500              	.Ldebug_abbrev0:
 1501 0000 01       		.uleb128 0x1
 1502 0001 11       		.uleb128 0x11
 1503 0002 01       		.byte	0x1
 1504 0003 25       		.uleb128 0x25
 1505 0004 0E       		.uleb128 0xe
 1506 0005 13       		.uleb128 0x13
 1507 0006 0B       		.uleb128 0xb
 1508 0007 03       		.uleb128 0x3
 1509 0008 0E       		.uleb128 0xe
 1510 0009 1B       		.uleb128 0x1b
 1511 000a 0E       		.uleb128 0xe
 1512 000b 11       		.uleb128 0x11
 1513 000c 01       		.uleb128 0x1
 1514 000d 12       		.uleb128 0x12
 1515 000e 01       		.uleb128 0x1
 1516 000f 10       		.uleb128 0x10
 1517 0010 06       		.uleb128 0x6
 1518 0011 00       		.byte	0
 1519 0012 00       		.byte	0
 1520 0013 02       		.uleb128 0x2
 1521 0014 16       		.uleb128 0x16
 1522 0015 00       		.byte	0
 1523 0016 03       		.uleb128 0x3
 1524 0017 08       		.uleb128 0x8
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 39


 1525 0018 3A       		.uleb128 0x3a
 1526 0019 0B       		.uleb128 0xb
 1527 001a 3B       		.uleb128 0x3b
 1528 001b 0B       		.uleb128 0xb
 1529 001c 49       		.uleb128 0x49
 1530 001d 13       		.uleb128 0x13
 1531 001e 00       		.byte	0
 1532 001f 00       		.byte	0
 1533 0020 03       		.uleb128 0x3
 1534 0021 24       		.uleb128 0x24
 1535 0022 00       		.byte	0
 1536 0023 0B       		.uleb128 0xb
 1537 0024 0B       		.uleb128 0xb
 1538 0025 3E       		.uleb128 0x3e
 1539 0026 0B       		.uleb128 0xb
 1540 0027 03       		.uleb128 0x3
 1541 0028 0E       		.uleb128 0xe
 1542 0029 00       		.byte	0
 1543 002a 00       		.byte	0
 1544 002b 04       		.uleb128 0x4
 1545 002c 24       		.uleb128 0x24
 1546 002d 00       		.byte	0
 1547 002e 0B       		.uleb128 0xb
 1548 002f 0B       		.uleb128 0xb
 1549 0030 3E       		.uleb128 0x3e
 1550 0031 0B       		.uleb128 0xb
 1551 0032 03       		.uleb128 0x3
 1552 0033 08       		.uleb128 0x8
 1553 0034 00       		.byte	0
 1554 0035 00       		.byte	0
 1555 0036 05       		.uleb128 0x5
 1556 0037 0F       		.uleb128 0xf
 1557 0038 00       		.byte	0
 1558 0039 0B       		.uleb128 0xb
 1559 003a 0B       		.uleb128 0xb
 1560 003b 49       		.uleb128 0x49
 1561 003c 13       		.uleb128 0x13
 1562 003d 00       		.byte	0
 1563 003e 00       		.byte	0
 1564 003f 06       		.uleb128 0x6
 1565 0040 2E       		.uleb128 0x2e
 1566 0041 00       		.byte	0
 1567 0042 03       		.uleb128 0x3
 1568 0043 0E       		.uleb128 0xe
 1569 0044 3A       		.uleb128 0x3a
 1570 0045 0B       		.uleb128 0xb
 1571 0046 3B       		.uleb128 0x3b
 1572 0047 0B       		.uleb128 0xb
 1573 0048 27       		.uleb128 0x27
 1574 0049 0C       		.uleb128 0xc
 1575 004a 20       		.uleb128 0x20
 1576 004b 0B       		.uleb128 0xb
 1577 004c 00       		.byte	0
 1578 004d 00       		.byte	0
 1579 004e 07       		.uleb128 0x7
 1580 004f 2E       		.uleb128 0x2e
 1581 0050 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 40


 1582 0051 3F       		.uleb128 0x3f
 1583 0052 0C       		.uleb128 0xc
 1584 0053 03       		.uleb128 0x3
 1585 0054 0E       		.uleb128 0xe
 1586 0055 3A       		.uleb128 0x3a
 1587 0056 0B       		.uleb128 0xb
 1588 0057 3B       		.uleb128 0x3b
 1589 0058 05       		.uleb128 0x5
 1590 0059 27       		.uleb128 0x27
 1591 005a 0C       		.uleb128 0xc
 1592 005b 11       		.uleb128 0x11
 1593 005c 01       		.uleb128 0x1
 1594 005d 12       		.uleb128 0x12
 1595 005e 01       		.uleb128 0x1
 1596 005f 40       		.uleb128 0x40
 1597 0060 06       		.uleb128 0x6
 1598 0061 01       		.uleb128 0x1
 1599 0062 13       		.uleb128 0x13
 1600 0063 00       		.byte	0
 1601 0064 00       		.byte	0
 1602 0065 08       		.uleb128 0x8
 1603 0066 34       		.uleb128 0x34
 1604 0067 00       		.byte	0
 1605 0068 03       		.uleb128 0x3
 1606 0069 0E       		.uleb128 0xe
 1607 006a 3A       		.uleb128 0x3a
 1608 006b 0B       		.uleb128 0xb
 1609 006c 3B       		.uleb128 0x3b
 1610 006d 05       		.uleb128 0x5
 1611 006e 49       		.uleb128 0x49
 1612 006f 13       		.uleb128 0x13
 1613 0070 02       		.uleb128 0x2
 1614 0071 06       		.uleb128 0x6
 1615 0072 00       		.byte	0
 1616 0073 00       		.byte	0
 1617 0074 09       		.uleb128 0x9
 1618 0075 34       		.uleb128 0x34
 1619 0076 00       		.byte	0
 1620 0077 03       		.uleb128 0x3
 1621 0078 0E       		.uleb128 0xe
 1622 0079 3A       		.uleb128 0x3a
 1623 007a 0B       		.uleb128 0xb
 1624 007b 3B       		.uleb128 0x3b
 1625 007c 05       		.uleb128 0x5
 1626 007d 49       		.uleb128 0x49
 1627 007e 13       		.uleb128 0x13
 1628 007f 02       		.uleb128 0x2
 1629 0080 0A       		.uleb128 0xa
 1630 0081 00       		.byte	0
 1631 0082 00       		.byte	0
 1632 0083 0A       		.uleb128 0xa
 1633 0084 2E       		.uleb128 0x2e
 1634 0085 01       		.byte	0x1
 1635 0086 3F       		.uleb128 0x3f
 1636 0087 0C       		.uleb128 0xc
 1637 0088 03       		.uleb128 0x3
 1638 0089 0E       		.uleb128 0xe
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 41


 1639 008a 3A       		.uleb128 0x3a
 1640 008b 0B       		.uleb128 0xb
 1641 008c 3B       		.uleb128 0x3b
 1642 008d 05       		.uleb128 0x5
 1643 008e 49       		.uleb128 0x49
 1644 008f 13       		.uleb128 0x13
 1645 0090 3C       		.uleb128 0x3c
 1646 0091 0C       		.uleb128 0xc
 1647 0092 00       		.byte	0
 1648 0093 00       		.byte	0
 1649 0094 0B       		.uleb128 0xb
 1650 0095 18       		.uleb128 0x18
 1651 0096 00       		.byte	0
 1652 0097 00       		.byte	0
 1653 0098 00       		.byte	0
 1654 0099 0C       		.uleb128 0xc
 1655 009a 01       		.uleb128 0x1
 1656 009b 01       		.byte	0x1
 1657 009c 49       		.uleb128 0x49
 1658 009d 13       		.uleb128 0x13
 1659 009e 01       		.uleb128 0x1
 1660 009f 13       		.uleb128 0x13
 1661 00a0 00       		.byte	0
 1662 00a1 00       		.byte	0
 1663 00a2 0D       		.uleb128 0xd
 1664 00a3 21       		.uleb128 0x21
 1665 00a4 00       		.byte	0
 1666 00a5 49       		.uleb128 0x49
 1667 00a6 13       		.uleb128 0x13
 1668 00a7 2F       		.uleb128 0x2f
 1669 00a8 0B       		.uleb128 0xb
 1670 00a9 00       		.byte	0
 1671 00aa 00       		.byte	0
 1672 00ab 0E       		.uleb128 0xe
 1673 00ac 05       		.uleb128 0x5
 1674 00ad 00       		.byte	0
 1675 00ae 03       		.uleb128 0x3
 1676 00af 0E       		.uleb128 0xe
 1677 00b0 3A       		.uleb128 0x3a
 1678 00b1 0B       		.uleb128 0xb
 1679 00b2 3B       		.uleb128 0x3b
 1680 00b3 05       		.uleb128 0x5
 1681 00b4 49       		.uleb128 0x49
 1682 00b5 13       		.uleb128 0x13
 1683 00b6 02       		.uleb128 0x2
 1684 00b7 06       		.uleb128 0x6
 1685 00b8 00       		.byte	0
 1686 00b9 00       		.byte	0
 1687 00ba 0F       		.uleb128 0xf
 1688 00bb 2E       		.uleb128 0x2e
 1689 00bc 00       		.byte	0
 1690 00bd 3F       		.uleb128 0x3f
 1691 00be 0C       		.uleb128 0xc
 1692 00bf 03       		.uleb128 0x3
 1693 00c0 0E       		.uleb128 0xe
 1694 00c1 3A       		.uleb128 0x3a
 1695 00c2 0B       		.uleb128 0xb
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 42


 1696 00c3 3B       		.uleb128 0x3b
 1697 00c4 0B       		.uleb128 0xb
 1698 00c5 49       		.uleb128 0x49
 1699 00c6 13       		.uleb128 0x13
 1700 00c7 11       		.uleb128 0x11
 1701 00c8 01       		.uleb128 0x1
 1702 00c9 12       		.uleb128 0x12
 1703 00ca 01       		.uleb128 0x1
 1704 00cb 40       		.uleb128 0x40
 1705 00cc 06       		.uleb128 0x6
 1706 00cd 00       		.byte	0
 1707 00ce 00       		.byte	0
 1708 00cf 10       		.uleb128 0x10
 1709 00d0 2E       		.uleb128 0x2e
 1710 00d1 01       		.byte	0x1
 1711 00d2 3F       		.uleb128 0x3f
 1712 00d3 0C       		.uleb128 0xc
 1713 00d4 03       		.uleb128 0x3
 1714 00d5 0E       		.uleb128 0xe
 1715 00d6 3A       		.uleb128 0x3a
 1716 00d7 0B       		.uleb128 0xb
 1717 00d8 3B       		.uleb128 0x3b
 1718 00d9 0B       		.uleb128 0xb
 1719 00da 11       		.uleb128 0x11
 1720 00db 01       		.uleb128 0x1
 1721 00dc 12       		.uleb128 0x12
 1722 00dd 01       		.uleb128 0x1
 1723 00de 40       		.uleb128 0x40
 1724 00df 06       		.uleb128 0x6
 1725 00e0 01       		.uleb128 0x1
 1726 00e1 13       		.uleb128 0x13
 1727 00e2 00       		.byte	0
 1728 00e3 00       		.byte	0
 1729 00e4 11       		.uleb128 0x11
 1730 00e5 05       		.uleb128 0x5
 1731 00e6 00       		.byte	0
 1732 00e7 03       		.uleb128 0x3
 1733 00e8 0E       		.uleb128 0xe
 1734 00e9 3A       		.uleb128 0x3a
 1735 00ea 0B       		.uleb128 0xb
 1736 00eb 3B       		.uleb128 0x3b
 1737 00ec 0B       		.uleb128 0xb
 1738 00ed 49       		.uleb128 0x49
 1739 00ee 13       		.uleb128 0x13
 1740 00ef 02       		.uleb128 0x2
 1741 00f0 06       		.uleb128 0x6
 1742 00f1 00       		.byte	0
 1743 00f2 00       		.byte	0
 1744 00f3 12       		.uleb128 0x12
 1745 00f4 2E       		.uleb128 0x2e
 1746 00f5 01       		.byte	0x1
 1747 00f6 3F       		.uleb128 0x3f
 1748 00f7 0C       		.uleb128 0xc
 1749 00f8 03       		.uleb128 0x3
 1750 00f9 0E       		.uleb128 0xe
 1751 00fa 3A       		.uleb128 0x3a
 1752 00fb 0B       		.uleb128 0xb
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 43


 1753 00fc 3B       		.uleb128 0x3b
 1754 00fd 0B       		.uleb128 0xb
 1755 00fe 27       		.uleb128 0x27
 1756 00ff 0C       		.uleb128 0xc
 1757 0100 11       		.uleb128 0x11
 1758 0101 01       		.uleb128 0x1
 1759 0102 12       		.uleb128 0x12
 1760 0103 01       		.uleb128 0x1
 1761 0104 40       		.uleb128 0x40
 1762 0105 06       		.uleb128 0x6
 1763 0106 01       		.uleb128 0x1
 1764 0107 13       		.uleb128 0x13
 1765 0108 00       		.byte	0
 1766 0109 00       		.byte	0
 1767 010a 13       		.uleb128 0x13
 1768 010b 05       		.uleb128 0x5
 1769 010c 00       		.byte	0
 1770 010d 03       		.uleb128 0x3
 1771 010e 08       		.uleb128 0x8
 1772 010f 3A       		.uleb128 0x3a
 1773 0110 0B       		.uleb128 0xb
 1774 0111 3B       		.uleb128 0x3b
 1775 0112 0B       		.uleb128 0xb
 1776 0113 49       		.uleb128 0x49
 1777 0114 13       		.uleb128 0x13
 1778 0115 02       		.uleb128 0x2
 1779 0116 06       		.uleb128 0x6
 1780 0117 00       		.byte	0
 1781 0118 00       		.byte	0
 1782 0119 14       		.uleb128 0x14
 1783 011a 34       		.uleb128 0x34
 1784 011b 00       		.byte	0
 1785 011c 03       		.uleb128 0x3
 1786 011d 08       		.uleb128 0x8
 1787 011e 3A       		.uleb128 0x3a
 1788 011f 0B       		.uleb128 0xb
 1789 0120 3B       		.uleb128 0x3b
 1790 0121 0B       		.uleb128 0xb
 1791 0122 49       		.uleb128 0x49
 1792 0123 13       		.uleb128 0x13
 1793 0124 02       		.uleb128 0x2
 1794 0125 06       		.uleb128 0x6
 1795 0126 00       		.byte	0
 1796 0127 00       		.byte	0
 1797 0128 15       		.uleb128 0x15
 1798 0129 34       		.uleb128 0x34
 1799 012a 00       		.byte	0
 1800 012b 03       		.uleb128 0x3
 1801 012c 08       		.uleb128 0x8
 1802 012d 3A       		.uleb128 0x3a
 1803 012e 0B       		.uleb128 0xb
 1804 012f 3B       		.uleb128 0x3b
 1805 0130 0B       		.uleb128 0xb
 1806 0131 49       		.uleb128 0x49
 1807 0132 13       		.uleb128 0x13
 1808 0133 02       		.uleb128 0x2
 1809 0134 0A       		.uleb128 0xa
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 44


 1810 0135 00       		.byte	0
 1811 0136 00       		.byte	0
 1812 0137 16       		.uleb128 0x16
 1813 0138 34       		.uleb128 0x34
 1814 0139 00       		.byte	0
 1815 013a 03       		.uleb128 0x3
 1816 013b 0E       		.uleb128 0xe
 1817 013c 3A       		.uleb128 0x3a
 1818 013d 0B       		.uleb128 0xb
 1819 013e 3B       		.uleb128 0x3b
 1820 013f 0B       		.uleb128 0xb
 1821 0140 49       		.uleb128 0x49
 1822 0141 13       		.uleb128 0x13
 1823 0142 00       		.byte	0
 1824 0143 00       		.byte	0
 1825 0144 17       		.uleb128 0x17
 1826 0145 1D       		.uleb128 0x1d
 1827 0146 00       		.byte	0
 1828 0147 31       		.uleb128 0x31
 1829 0148 13       		.uleb128 0x13
 1830 0149 11       		.uleb128 0x11
 1831 014a 01       		.uleb128 0x1
 1832 014b 12       		.uleb128 0x12
 1833 014c 01       		.uleb128 0x1
 1834 014d 58       		.uleb128 0x58
 1835 014e 0B       		.uleb128 0xb
 1836 014f 59       		.uleb128 0x59
 1837 0150 0B       		.uleb128 0xb
 1838 0151 00       		.byte	0
 1839 0152 00       		.byte	0
 1840 0153 18       		.uleb128 0x18
 1841 0154 0B       		.uleb128 0xb
 1842 0155 01       		.byte	0x1
 1843 0156 11       		.uleb128 0x11
 1844 0157 01       		.uleb128 0x1
 1845 0158 12       		.uleb128 0x12
 1846 0159 01       		.uleb128 0x1
 1847 015a 00       		.byte	0
 1848 015b 00       		.byte	0
 1849 015c 19       		.uleb128 0x19
 1850 015d 34       		.uleb128 0x34
 1851 015e 00       		.byte	0
 1852 015f 03       		.uleb128 0x3
 1853 0160 0E       		.uleb128 0xe
 1854 0161 3A       		.uleb128 0x3a
 1855 0162 0B       		.uleb128 0xb
 1856 0163 3B       		.uleb128 0x3b
 1857 0164 0B       		.uleb128 0xb
 1858 0165 49       		.uleb128 0x49
 1859 0166 13       		.uleb128 0x13
 1860 0167 02       		.uleb128 0x2
 1861 0168 06       		.uleb128 0x6
 1862 0169 00       		.byte	0
 1863 016a 00       		.byte	0
 1864 016b 1A       		.uleb128 0x1a
 1865 016c 2E       		.uleb128 0x2e
 1866 016d 01       		.byte	0x1
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 45


 1867 016e 3F       		.uleb128 0x3f
 1868 016f 0C       		.uleb128 0xc
 1869 0170 03       		.uleb128 0x3
 1870 0171 0E       		.uleb128 0xe
 1871 0172 3A       		.uleb128 0x3a
 1872 0173 0B       		.uleb128 0xb
 1873 0174 3B       		.uleb128 0x3b
 1874 0175 05       		.uleb128 0x5
 1875 0176 49       		.uleb128 0x49
 1876 0177 13       		.uleb128 0x13
 1877 0178 3C       		.uleb128 0x3c
 1878 0179 0C       		.uleb128 0xc
 1879 017a 01       		.uleb128 0x1
 1880 017b 13       		.uleb128 0x13
 1881 017c 00       		.byte	0
 1882 017d 00       		.byte	0
 1883 017e 1B       		.uleb128 0x1b
 1884 017f 34       		.uleb128 0x34
 1885 0180 00       		.byte	0
 1886 0181 03       		.uleb128 0x3
 1887 0182 0E       		.uleb128 0xe
 1888 0183 3A       		.uleb128 0x3a
 1889 0184 0B       		.uleb128 0xb
 1890 0185 3B       		.uleb128 0x3b
 1891 0186 0B       		.uleb128 0xb
 1892 0187 49       		.uleb128 0x49
 1893 0188 13       		.uleb128 0x13
 1894 0189 02       		.uleb128 0x2
 1895 018a 0A       		.uleb128 0xa
 1896 018b 00       		.byte	0
 1897 018c 00       		.byte	0
 1898 018d 1C       		.uleb128 0x1c
 1899 018e 34       		.uleb128 0x34
 1900 018f 00       		.byte	0
 1901 0190 03       		.uleb128 0x3
 1902 0191 0E       		.uleb128 0xe
 1903 0192 3A       		.uleb128 0x3a
 1904 0193 0B       		.uleb128 0xb
 1905 0194 3B       		.uleb128 0x3b
 1906 0195 0B       		.uleb128 0xb
 1907 0196 49       		.uleb128 0x49
 1908 0197 13       		.uleb128 0x13
 1909 0198 1C       		.uleb128 0x1c
 1910 0199 0B       		.uleb128 0xb
 1911 019a 00       		.byte	0
 1912 019b 00       		.byte	0
 1913 019c 1D       		.uleb128 0x1d
 1914 019d 34       		.uleb128 0x34
 1915 019e 00       		.byte	0
 1916 019f 03       		.uleb128 0x3
 1917 01a0 0E       		.uleb128 0xe
 1918 01a1 3A       		.uleb128 0x3a
 1919 01a2 0B       		.uleb128 0xb
 1920 01a3 3B       		.uleb128 0x3b
 1921 01a4 0B       		.uleb128 0xb
 1922 01a5 49       		.uleb128 0x49
 1923 01a6 13       		.uleb128 0x13
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 46


 1924 01a7 3F       		.uleb128 0x3f
 1925 01a8 0C       		.uleb128 0xc
 1926 01a9 02       		.uleb128 0x2
 1927 01aa 0A       		.uleb128 0xa
 1928 01ab 00       		.byte	0
 1929 01ac 00       		.byte	0
 1930 01ad 00       		.byte	0
 1931              		.section	.debug_loc,"",%progbits
 1932              	.Ldebug_loc0:
 1933              	.LLST0:
 1934 0000 00000000 		.4byte	.LFB7-.Ltext0
 1935 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1936 0008 0200     		.2byte	0x2
 1937 000a 7D       		.byte	0x7d
 1938 000b 00       		.sleb128 0
 1939 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1940 0010 04000000 		.4byte	.LCFI1-.Ltext0
 1941 0014 0200     		.2byte	0x2
 1942 0016 7D       		.byte	0x7d
 1943 0017 08       		.sleb128 8
 1944 0018 04000000 		.4byte	.LCFI1-.Ltext0
 1945 001c 84000000 		.4byte	.LFE7-.Ltext0
 1946 0020 0300     		.2byte	0x3
 1947 0022 7D       		.byte	0x7d
 1948 0023 C400     		.sleb128 68
 1949 0025 00000000 		.4byte	0
 1950 0029 00000000 		.4byte	0
 1951              	.LLST1:
 1952 002d 10000000 		.4byte	.LVL0-.Ltext0
 1953 0031 12000000 		.4byte	.LVL1-.Ltext0
 1954 0035 0100     		.2byte	0x1
 1955 0037 50       		.byte	0x50
 1956 0038 00000000 		.4byte	0
 1957 003c 00000000 		.4byte	0
 1958              	.LLST2:
 1959 0040 84000000 		.4byte	.LFB6-.Ltext0
 1960 0044 86000000 		.4byte	.LCFI2-.Ltext0
 1961 0048 0200     		.2byte	0x2
 1962 004a 7D       		.byte	0x7d
 1963 004b 00       		.sleb128 0
 1964 004c 86000000 		.4byte	.LCFI2-.Ltext0
 1965 0050 A4000000 		.4byte	.LFE6-.Ltext0
 1966 0054 0200     		.2byte	0x2
 1967 0056 7D       		.byte	0x7d
 1968 0057 04       		.sleb128 4
 1969 0058 00000000 		.4byte	0
 1970 005c 00000000 		.4byte	0
 1971              	.LLST3:
 1972 0060 86000000 		.4byte	.LVL2-.Ltext0
 1973 0064 8A000000 		.4byte	.LVL3-.Ltext0
 1974 0068 0100     		.2byte	0x1
 1975 006a 50       		.byte	0x50
 1976 006b 8A000000 		.4byte	.LVL3-.Ltext0
 1977 006f 8F000000 		.4byte	.LVL4-1-.Ltext0
 1978 0073 0100     		.2byte	0x1
 1979 0075 51       		.byte	0x51
 1980 0076 00000000 		.4byte	0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 47


 1981 007a 00000000 		.4byte	0
 1982              	.LLST4:
 1983 007e 90000000 		.4byte	.LVL4-.Ltext0
 1984 0082 92000000 		.4byte	.LVL5-.Ltext0
 1985 0086 0100     		.2byte	0x1
 1986 0088 50       		.byte	0x50
 1987 0089 00000000 		.4byte	0
 1988 008d 00000000 		.4byte	0
 1989              	.LLST5:
 1990 0091 A4000000 		.4byte	.LFB1-.Ltext0
 1991 0095 A6000000 		.4byte	.LCFI3-.Ltext0
 1992 0099 0200     		.2byte	0x2
 1993 009b 7D       		.byte	0x7d
 1994 009c 00       		.sleb128 0
 1995 009d A6000000 		.4byte	.LCFI3-.Ltext0
 1996 00a1 E0000000 		.4byte	.LFE1-.Ltext0
 1997 00a5 0200     		.2byte	0x2
 1998 00a7 7D       		.byte	0x7d
 1999 00a8 04       		.sleb128 4
 2000 00a9 00000000 		.4byte	0
 2001 00ad 00000000 		.4byte	0
 2002              	.LLST6:
 2003 00b1 E0000000 		.4byte	.LFB2-.Ltext0
 2004 00b5 E2000000 		.4byte	.LCFI4-.Ltext0
 2005 00b9 0200     		.2byte	0x2
 2006 00bb 7D       		.byte	0x7d
 2007 00bc 00       		.sleb128 0
 2008 00bd E2000000 		.4byte	.LCFI4-.Ltext0
 2009 00c1 E0010000 		.4byte	.LFE2-.Ltext0
 2010 00c5 0200     		.2byte	0x2
 2011 00c7 7D       		.byte	0x7d
 2012 00c8 08       		.sleb128 8
 2013 00c9 00000000 		.4byte	0
 2014 00cd 00000000 		.4byte	0
 2015              	.LLST7:
 2016 00d1 E2000000 		.4byte	.LVL6-.Ltext0
 2017 00d5 E4000000 		.4byte	.LVL7-.Ltext0
 2018 00d9 0100     		.2byte	0x1
 2019 00db 50       		.byte	0x50
 2020 00dc E4000000 		.4byte	.LVL7-.Ltext0
 2021 00e0 FE000000 		.4byte	.LVL8-.Ltext0
 2022 00e4 0300     		.2byte	0x3
 2023 00e6 70       		.byte	0x70
 2024 00e7 01       		.sleb128 1
 2025 00e8 9F       		.byte	0x9f
 2026 00e9 24010000 		.4byte	.LVL9-.Ltext0
 2027 00ed 26010000 		.4byte	.LVL10-.Ltext0
 2028 00f1 0300     		.2byte	0x3
 2029 00f3 70       		.byte	0x70
 2030 00f4 01       		.sleb128 1
 2031 00f5 9F       		.byte	0x9f
 2032 00f6 4C010000 		.4byte	.LVL11-.Ltext0
 2033 00fa 4E010000 		.4byte	.LVL12-.Ltext0
 2034 00fe 0300     		.2byte	0x3
 2035 0100 70       		.byte	0x70
 2036 0101 01       		.sleb128 1
 2037 0102 9F       		.byte	0x9f
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 48


 2038 0103 74010000 		.4byte	.LVL13-.Ltext0
 2039 0107 76010000 		.4byte	.LVL14-.Ltext0
 2040 010b 0300     		.2byte	0x3
 2041 010d 70       		.byte	0x70
 2042 010e 01       		.sleb128 1
 2043 010f 9F       		.byte	0x9f
 2044 0110 9C010000 		.4byte	.LVL15-.Ltext0
 2045 0114 9E010000 		.4byte	.LVL16-.Ltext0
 2046 0118 0300     		.2byte	0x3
 2047 011a 70       		.byte	0x70
 2048 011b 01       		.sleb128 1
 2049 011c 9F       		.byte	0x9f
 2050 011d 00000000 		.4byte	0
 2051 0121 00000000 		.4byte	0
 2052              	.LLST8:
 2053 0125 E0010000 		.4byte	.LFB3-.Ltext0
 2054 0129 E2010000 		.4byte	.LCFI5-.Ltext0
 2055 012d 0200     		.2byte	0x2
 2056 012f 7D       		.byte	0x7d
 2057 0130 00       		.sleb128 0
 2058 0131 E2010000 		.4byte	.LCFI5-.Ltext0
 2059 0135 0C020000 		.4byte	.LFE3-.Ltext0
 2060 0139 0200     		.2byte	0x2
 2061 013b 7D       		.byte	0x7d
 2062 013c 0C       		.sleb128 12
 2063 013d 00000000 		.4byte	0
 2064 0141 00000000 		.4byte	0
 2065              	.LLST9:
 2066 0145 E2010000 		.4byte	.LVL17-.Ltext0
 2067 0149 E8010000 		.4byte	.LVL18-.Ltext0
 2068 014d 0100     		.2byte	0x1
 2069 014f 50       		.byte	0x50
 2070 0150 E8010000 		.4byte	.LVL18-.Ltext0
 2071 0154 06020000 		.4byte	.LVL21-.Ltext0
 2072 0158 0100     		.2byte	0x1
 2073 015a 55       		.byte	0x55
 2074 015b 00000000 		.4byte	0
 2075 015f 00000000 		.4byte	0
 2076              	.LLST10:
 2077 0163 E2010000 		.4byte	.LVL17-.Ltext0
 2078 0167 E8010000 		.4byte	.LVL18-.Ltext0
 2079 016b 0200     		.2byte	0x2
 2080 016d 30       		.byte	0x30
 2081 016e 9F       		.byte	0x9f
 2082 016f E8010000 		.4byte	.LVL18-.Ltext0
 2083 0173 06020000 		.4byte	.LVL20-.Ltext0
 2084 0177 0100     		.2byte	0x1
 2085 0179 54       		.byte	0x54
 2086 017a 00000000 		.4byte	0
 2087 017e 00000000 		.4byte	0
 2088              	.LLST11:
 2089 0182 0C020000 		.4byte	.LFB4-.Ltext0
 2090 0186 0E020000 		.4byte	.LCFI6-.Ltext0
 2091 018a 0200     		.2byte	0x2
 2092 018c 7D       		.byte	0x7d
 2093 018d 00       		.sleb128 0
 2094 018e 0E020000 		.4byte	.LCFI6-.Ltext0
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 49


 2095 0192 14020000 		.4byte	.LCFI7-.Ltext0
 2096 0196 0200     		.2byte	0x2
 2097 0198 7D       		.byte	0x7d
 2098 0199 14       		.sleb128 20
 2099 019a 14020000 		.4byte	.LCFI7-.Ltext0
 2100 019e F0020000 		.4byte	.LFE4-.Ltext0
 2101 01a2 0200     		.2byte	0x2
 2102 01a4 7D       		.byte	0x7d
 2103 01a5 2C       		.sleb128 44
 2104 01a6 00000000 		.4byte	0
 2105 01aa 00000000 		.4byte	0
 2106              	.LLST12:
 2107 01ae F0020000 		.4byte	.LFB5-.Ltext0
 2108 01b2 F2020000 		.4byte	.LCFI8-.Ltext0
 2109 01b6 0200     		.2byte	0x2
 2110 01b8 7D       		.byte	0x7d
 2111 01b9 00       		.sleb128 0
 2112 01ba F2020000 		.4byte	.LCFI8-.Ltext0
 2113 01be F8050000 		.4byte	.LFE5-.Ltext0
 2114 01c2 0200     		.2byte	0x2
 2115 01c4 7D       		.byte	0x7d
 2116 01c5 14       		.sleb128 20
 2117 01c6 00000000 		.4byte	0
 2118 01ca 00000000 		.4byte	0
 2119              	.LLST13:
 2120 01ce 62030000 		.4byte	.LVL22-.Ltext0
 2121 01d2 64030000 		.4byte	.LVL23-.Ltext0
 2122 01d6 0100     		.2byte	0x1
 2123 01d8 50       		.byte	0x50
 2124 01d9 64030000 		.4byte	.LVL23-.Ltext0
 2125 01dd A6050000 		.4byte	.LVL24-.Ltext0
 2126 01e1 0100     		.2byte	0x1
 2127 01e3 56       		.byte	0x56
 2128 01e4 00000000 		.4byte	0
 2129 01e8 00000000 		.4byte	0
 2130              		.section	.debug_aranges,"",%progbits
 2131 0000 1C000000 		.4byte	0x1c
 2132 0004 0200     		.2byte	0x2
 2133 0006 00000000 		.4byte	.Ldebug_info0
 2134 000a 04       		.byte	0x4
 2135 000b 00       		.byte	0
 2136 000c 0000     		.2byte	0
 2137 000e 0000     		.2byte	0
 2138 0010 00000000 		.4byte	.Ltext0
 2139 0014 F8050000 		.4byte	.Letext0-.Ltext0
 2140 0018 00000000 		.4byte	0
 2141 001c 00000000 		.4byte	0
 2142              		.section	.debug_line,"",%progbits
 2143              	.Ldebug_line0:
 2144 0000 64010000 		.section	.debug_str,"MS",%progbits,1
 2144      02005200 
 2144      00000201 
 2144      FB0E0D00 
 2144      01010101 
 2145              	.LASF24:
 2146 0000 67616D65 		.ascii	"gameStatus\000"
 2146      53746174 
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 50


 2146      757300
 2147              	.LASF13:
 2148 000b 73617665 		.ascii	"saveScoreToEeprom\000"
 2148      53636F72 
 2148      65546F45 
 2148      6570726F 
 2148      6D00
 2149              	.LASF33:
 2150 001d 72656163 		.ascii	"react.c\000"
 2150      742E6300 
 2151              	.LASF15:
 2152 0025 65657072 		.ascii	"eepromWrite\000"
 2152      6F6D5772 
 2152      69746500 
 2153              	.LASF12:
 2154 0031 72656164 		.ascii	"readScoreFromEeprom\000"
 2154      53636F72 
 2154      6546726F 
 2154      6D456570 
 2154      726F6D00 
 2155              	.LASF26:
 2156 0045 67616D65 		.ascii	"gameMode\000"
 2156      4D6F6465 
 2156      00
 2157              	.LASF17:
 2158 004e 77686963 		.ascii	"whichArrow\000"
 2158      68417272 
 2158      6F7700
 2159              	.LASF18:
 2160 0059 75736542 		.ascii	"useBuzzer\000"
 2160      757A7A65 
 2160      7200
 2161              	.LASF31:
 2162 0063 66696E69 		.ascii	"finish\000"
 2162      736800
 2163              	.LASF16:
 2164 006a 73636F72 		.ascii	"score\000"
 2164      6500
 2165              	.LASF35:
 2166 0070 73686F77 		.ascii	"showPreStartupScreen\000"
 2166      50726553 
 2166      74617274 
 2166      75705363 
 2166      7265656E 
 2167              	.LASF5:
 2168 0085 6C6F6E67 		.ascii	"long unsigned int\000"
 2168      20756E73 
 2168      69676E65 
 2168      6420696E 
 2168      7400
 2169              	.LASF1:
 2170 0097 73686F72 		.ascii	"short unsigned int\000"
 2170      7420756E 
 2170      7369676E 
 2170      65642069 
 2170      6E7400
 2171              	.LASF11:
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 51


 2172 00aa 74657374 		.ascii	"testBuf\000"
 2172      42756600 
 2173              	.LASF32:
 2174 00b2 474E5520 		.ascii	"GNU C 4.6.3\000"
 2174      4320342E 
 2174      362E3300 
 2175              	.LASF0:
 2176 00be 756E7369 		.ascii	"unsigned char\000"
 2176      676E6564 
 2176      20636861 
 2176      7200
 2177              	.LASF21:
 2178 00cc 706C6179 		.ascii	"playReactGame\000"
 2178      52656163 
 2178      7447616D 
 2178      6500
 2179              	.LASF23:
 2180 00da 63757273 		.ascii	"cursor\000"
 2180      6F7200
 2181              	.LASF28:
 2182 00e1 63757272 		.ascii	"currentRound\000"
 2182      656E7452 
 2182      6F756E64 
 2182      00
 2183              	.LASF10:
 2184 00ee 6572726F 		.ascii	"errorCode\000"
 2184      72436F64 
 2184      6500
 2185              	.LASF2:
 2186 00f8 756E7369 		.ascii	"unsigned int\000"
 2186      676E6564 
 2186      20696E74 
 2186      00
 2187              	.LASF7:
 2188 0105 6C6F6E67 		.ascii	"long long unsigned int\000"
 2188      206C6F6E 
 2188      6720756E 
 2188      7369676E 
 2188      65642069 
 2189              	.LASF22:
 2190 011c 616E794B 		.ascii	"anyKey\000"
 2190      657900
 2191              	.LASF20:
 2192 0123 73686F77 		.ascii	"showScore\000"
 2192      53636F72 
 2192      6500
 2193              	.LASF6:
 2194 012d 6C6F6E67 		.ascii	"long long int\000"
 2194      206C6F6E 
 2194      6720696E 
 2194      7400
 2195              	.LASF25:
 2196 013b 73747253 		.ascii	"strScore\000"
 2196      636F7265 
 2196      00
 2197              	.LASF9:
 2198 0144 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 52


 2198      00
 2199              	.LASF36:
 2200 0149 72616E64 		.ascii	"randomMove\000"
 2200      6F6D4D6F 
 2200      766500
 2201              	.LASF30:
 2202 0154 6172726F 		.ascii	"arrow\000"
 2202      7700
 2203              	.LASF34:
 2204 015a 433A5C55 		.ascii	"C:\\Users\\kozlovsky\\Documents\\Szkola\\TicTac\000"
 2204      73657273 
 2204      5C6B6F7A 
 2204      6C6F7673 
 2204      6B795C44 
 2205              	.LASF4:
 2206 0185 73686F72 		.ascii	"short int\000"
 2206      7420696E 
 2206      7400
 2207              	.LASF27:
 2208 018f 726F756E 		.ascii	"rounds\000"
 2208      647300
 2209              	.LASF29:
 2210 0196 65657072 		.ascii	"eepromTest\000"
 2210      6F6D5465 
 2210      737400
 2211              	.LASF8:
 2212 01a1 6C6F6E67 		.ascii	"long int\000"
 2212      20696E74 
 2212      00
 2213              	.LASF3:
 2214 01aa 7369676E 		.ascii	"signed char\000"
 2214      65642063 
 2214      68617200 
 2215              	.LASF14:
 2216 01b6 65657072 		.ascii	"eepromPageRead\000"
 2216      6F6D5061 
 2216      67655265 
 2216      616400
 2217              	.LASF19:
 2218 01c5 73686F77 		.ascii	"showRandomArrow\000"
 2218      52616E64 
 2218      6F6D4172 
 2218      726F7700 
 2219              		.ident	"GCC: (GNU) 4.6.3"
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 react.c
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:6      .text:00000000 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:11     .text:00000000 readScoreFromEeprom
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:93     .text:0000007c $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:98     .text:00000084 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:103    .text:00000084 saveScoreToEeprom
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:136    .text:000000a0 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:141    .text:000000a4 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:146    .text:000000a4 randomMove
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:163    .text:000000ba $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:201    .text:000000dc $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:205    .text:000000e0 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:210    .text:000000e0 showRandomArrow
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:227    .text:000000ec $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:243    .text:000000fc $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:372    .text:000001cc $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:380    .text:000001e0 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:385    .text:000001e0 useBuzzer
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:438    .text:0000020c showScore
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:581    .text:000002e4 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:587    .text:000002f0 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:592    .text:000002f0 playReactGame
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:686    .text:0000036e $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:699    .text:00000382 $t
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1048   .text:000005b4 $d
                            *COM*:00000004 arrow
                            *COM*:00000004 finish
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1114   .bss:00000000 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1118   .bss:00000000 whichArrow
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1123   .bss:00000004 score
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1127   .bss:00000008 rounds
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1131   .bss:00000009 currentRound
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:1135   .bss:0000000a gameStatus
                     .debug_frame:00000010 $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:168    .text:000000bf $d
C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s:168    .text:000000c0 $t

UNDEFINED SYMBOLS
eepromPageRead
simplePrintf
lcdPuts
eepromWrite
__modsi3
rand
__gnu_thumb1_case_uqi
lcdColor
lcdClrscr
lcdRect
lcdGotoxy
setBuzzer
osSleep
__divsi3
eaInit
checkKey
__gnu_thumb1_case_uhi
setLED
ARM GAS  C:\Users\KOZLOV~1\AppData\Local\Temp\ccSLVz78.s 			page 54


